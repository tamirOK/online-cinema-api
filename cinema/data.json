[{"model": "core.episode", "pk": 11, "fields": {"episode_number": 12, "name": "buffon", "season": 88, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2018-07-26"}}, {"model": "core.episode", "pk": 12, "fields": {"episode_number": 1, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 2, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2015-01-04"}}, {"model": "core.episode", "pk": 13, "fields": {"episode_number": 2, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 2, "description": "I don't even care.", "released_date": "2025-02-24"}}, {"model": "core.episode", "pk": 14, "fields": {"episode_number": 3, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 2, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2033-09-14"}}, {"model": "core.episode", "pk": 15, "fields": {"episode_number": 4, "name": "Where are my pants?", "season": 2, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2035-02-03"}}, {"model": "core.episode", "pk": 16, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 2, "description": "Ports are created with the built-in function open_port.", "released_date": "2006-06-19"}}, {"model": "core.episode", "pk": 17, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 2, "description": "Ports are created with the built-in function open_port.", "released_date": "2024-06-11"}}, {"model": "core.episode", "pk": 18, "fields": {"episode_number": 7, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 2, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2009-12-18"}}, {"model": "core.episode", "pk": 19, "fields": {"episode_number": 8, "name": "It is also a garbage-collected runtime system.", "season": 2, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2032-06-04"}}, {"model": "core.episode", "pk": 20, "fields": {"episode_number": 9, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 2, "description": "It is also a garbage-collected runtime system.", "released_date": "2019-09-15"}}, {"model": "core.episode", "pk": 151, "fields": {"episode_number": 0, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 16, "description": "I don't even care.", "released_date": "2009-03-26"}}, {"model": "core.episode", "pk": 152, "fields": {"episode_number": 1, "name": "Any element of a tuple can be accessed in constant time.", "season": 16, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2017-09-08"}}, {"model": "core.episode", "pk": 153, "fields": {"episode_number": 2, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 16, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2023-11-30"}}, {"model": "core.episode", "pk": 154, "fields": {"episode_number": 3, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 16, "description": "I don't even care.", "released_date": "2003-09-10"}}, {"model": "core.episode", "pk": 155, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 16, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2021-03-21"}}, {"model": "core.episode", "pk": 156, "fields": {"episode_number": 5, "name": "Type classes first appeared in the Haskell programming language.", "season": 16, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2007-05-03"}}, {"model": "core.episode", "pk": 157, "fields": {"episode_number": 6, "name": "Ports are used to communicate with the external world.", "season": 16, "description": "Do you have any idea why this is not working?", "released_date": "2027-08-21"}}, {"model": "core.episode", "pk": 158, "fields": {"episode_number": 7, "name": "Erlang is known for its designs that are well suited for systems.", "season": 16, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2003-07-21"}}, {"model": "core.episode", "pk": 159, "fields": {"episode_number": 8, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 16, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2010-10-12"}}, {"model": "core.episode", "pk": 160, "fields": {"episode_number": 9, "name": "Do you come here often?", "season": 16, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2005-06-13"}}, {"model": "core.episode", "pk": 161, "fields": {"episode_number": 0, "name": "I don't even care.", "season": 17, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2005-12-09"}}, {"model": "core.episode", "pk": 162, "fields": {"episode_number": 1, "name": "The arguments can be primitive data types or compound data types.", "season": 17, "description": "Ports are used to communicate with the external world.", "released_date": "2003-07-27"}}, {"model": "core.episode", "pk": 163, "fields": {"episode_number": 2, "name": "Do you have any idea why this is not working?", "season": 17, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2026-08-29"}}, {"model": "core.episode", "pk": 164, "fields": {"episode_number": 3, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 17, "description": "Do you have any idea why this is not working?", "released_date": "2033-12-30"}}, {"model": "core.episode", "pk": 165, "fields": {"episode_number": 4, "name": "Erlang is known for its designs that are well suited for systems.", "season": 17, "description": "It is also a garbage-collected runtime system.", "released_date": "2004-05-10"}}, {"model": "core.episode", "pk": 166, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 17, "description": "Ports are created with the built-in function open_port.", "released_date": "2019-04-11"}}, {"model": "core.episode", "pk": 167, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 17, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2016-10-14"}}, {"model": "core.episode", "pk": 168, "fields": {"episode_number": 7, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 17, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2002-06-28"}}, {"model": "core.episode", "pk": 169, "fields": {"episode_number": 8, "name": "Type classes first appeared in the Haskell programming language.", "season": 17, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2033-09-04"}}, {"model": "core.episode", "pk": 170, "fields": {"episode_number": 9, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 17, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2026-10-24"}}, {"model": "core.episode", "pk": 171, "fields": {"episode_number": 0, "name": "I don't even care.", "season": 18, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2000-02-02"}}, {"model": "core.episode", "pk": 172, "fields": {"episode_number": 1, "name": "Type classes first appeared in the Haskell programming language.", "season": 18, "description": "Do you come here often?", "released_date": "2016-10-25"}}, {"model": "core.episode", "pk": 173, "fields": {"episode_number": 2, "name": "Ports are created with the built-in function open_port.", "season": 18, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2014-04-04"}}, {"model": "core.episode", "pk": 174, "fields": {"episode_number": 3, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 18, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2023-04-04"}}, {"model": "core.episode", "pk": 175, "fields": {"episode_number": 4, "name": "Ports are used to communicate with the external world.", "season": 18, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2002-02-04"}}, {"model": "core.episode", "pk": 176, "fields": {"episode_number": 5, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 18, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2019-01-12"}}, {"model": "core.episode", "pk": 177, "fields": {"episode_number": 6, "name": "Type classes first appeared in the Haskell programming language.", "season": 18, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2018-05-09"}}, {"model": "core.episode", "pk": 178, "fields": {"episode_number": 7, "name": "Where are my pants?", "season": 18, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2013-07-25"}}, {"model": "core.episode", "pk": 179, "fields": {"episode_number": 8, "name": "Atoms are used within a program to denote distinguished values.", "season": 18, "description": "I don't even care.", "released_date": "2016-09-28"}}, {"model": "core.episode", "pk": 180, "fields": {"episode_number": 9, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 18, "description": "Do you have any idea why this is not working?", "released_date": "2010-06-04"}}, {"model": "core.episode", "pk": 181, "fields": {"episode_number": 0, "name": "Atoms are used within a program to denote distinguished values.", "season": 19, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2009-07-21"}}, {"model": "core.episode", "pk": 182, "fields": {"episode_number": 1, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 19, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2008-03-12"}}, {"model": "core.episode", "pk": 183, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 19, "description": "Ports are used to communicate with the external world.", "released_date": "2032-10-18"}}, {"model": "core.episode", "pk": 184, "fields": {"episode_number": 3, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 19, "description": "Ports are created with the built-in function open_port.", "released_date": "2033-01-17"}}, {"model": "core.episode", "pk": 185, "fields": {"episode_number": 4, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 19, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2012-09-27"}}, {"model": "core.episode", "pk": 186, "fields": {"episode_number": 5, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 19, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2015-06-11"}}, {"model": "core.episode", "pk": 187, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 19, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2002-02-24"}}, {"model": "core.episode", "pk": 188, "fields": {"episode_number": 7, "name": "Ports are created with the built-in function open_port.", "season": 19, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2012-05-09"}}, {"model": "core.episode", "pk": 189, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 19, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2034-05-22"}}, {"model": "core.episode", "pk": 190, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 19, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2003-10-26"}}, {"model": "core.episode", "pk": 191, "fields": {"episode_number": 0, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 20, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2033-06-24"}}, {"model": "core.episode", "pk": 192, "fields": {"episode_number": 1, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 20, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2020-08-01"}}, {"model": "core.episode", "pk": 193, "fields": {"episode_number": 2, "name": "Type classes first appeared in the Haskell programming language.", "season": 20, "description": "Do you have any idea why this is not working?", "released_date": "2030-04-12"}}, {"model": "core.episode", "pk": 194, "fields": {"episode_number": 3, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 20, "description": "Do you come here often?", "released_date": "2032-05-08"}}, {"model": "core.episode", "pk": 195, "fields": {"episode_number": 4, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 20, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2018-10-06"}}, {"model": "core.episode", "pk": 196, "fields": {"episode_number": 5, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 20, "description": "It is also a garbage-collected runtime system.", "released_date": "2031-06-09"}}, {"model": "core.episode", "pk": 197, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 20, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2009-06-16"}}, {"model": "core.episode", "pk": 198, "fields": {"episode_number": 7, "name": "Ports are used to communicate with the external world.", "season": 20, "description": "I don't even care.", "released_date": "2005-03-02"}}, {"model": "core.episode", "pk": 199, "fields": {"episode_number": 8, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 20, "description": "Make me a sandwich.", "released_date": "2031-05-19"}}, {"model": "core.episode", "pk": 200, "fields": {"episode_number": 9, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 20, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2019-06-20"}}, {"model": "core.episode", "pk": 201, "fields": {"episode_number": 0, "name": "Do you come here often?", "season": 21, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2007-10-29"}}, {"model": "core.episode", "pk": 202, "fields": {"episode_number": 1, "name": "Make me a sandwich.", "season": 21, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2032-11-05"}}, {"model": "core.episode", "pk": 203, "fields": {"episode_number": 2, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 21, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2016-01-15"}}, {"model": "core.episode", "pk": 204, "fields": {"episode_number": 3, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 21, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2033-09-14"}}, {"model": "core.episode", "pk": 205, "fields": {"episode_number": 4, "name": "Type classes first appeared in the Haskell programming language.", "season": 21, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2010-09-20"}}, {"model": "core.episode", "pk": 206, "fields": {"episode_number": 5, "name": "Any element of a tuple can be accessed in constant time.", "season": 21, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2026-07-04"}}, {"model": "core.episode", "pk": 207, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 21, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2033-08-01"}}, {"model": "core.episode", "pk": 208, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 21, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2020-12-20"}}, {"model": "core.episode", "pk": 209, "fields": {"episode_number": 8, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 21, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2024-09-13"}}, {"model": "core.episode", "pk": 210, "fields": {"episode_number": 9, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 21, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2018-11-13"}}, {"model": "core.episode", "pk": 211, "fields": {"episode_number": 0, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 22, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2003-09-19"}}, {"model": "core.episode", "pk": 212, "fields": {"episode_number": 1, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 22, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2009-11-15"}}, {"model": "core.episode", "pk": 213, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 22, "description": "Make me a sandwich.", "released_date": "2024-05-06"}}, {"model": "core.episode", "pk": 214, "fields": {"episode_number": 3, "name": "Erlang is known for its designs that are well suited for systems.", "season": 22, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2026-10-17"}}, {"model": "core.episode", "pk": 215, "fields": {"episode_number": 4, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 22, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2000-11-27"}}, {"model": "core.episode", "pk": 216, "fields": {"episode_number": 5, "name": "Erlang is known for its designs that are well suited for systems.", "season": 22, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2006-07-25"}}, {"model": "core.episode", "pk": 217, "fields": {"episode_number": 6, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 22, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2035-10-14"}}, {"model": "core.episode", "pk": 218, "fields": {"episode_number": 7, "name": "Do you have any idea why this is not working?", "season": 22, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2023-06-25"}}, {"model": "core.episode", "pk": 219, "fields": {"episode_number": 8, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 22, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2010-06-03"}}, {"model": "core.episode", "pk": 220, "fields": {"episode_number": 9, "name": "Do you have any idea why this is not working?", "season": 22, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2032-02-27"}}, {"model": "core.episode", "pk": 231, "fields": {"episode_number": 0, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 24, "description": "It is also a garbage-collected runtime system.", "released_date": "2013-12-16"}}, {"model": "core.episode", "pk": 232, "fields": {"episode_number": 1, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 24, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2023-11-05"}}, {"model": "core.episode", "pk": 233, "fields": {"episode_number": 2, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 24, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2003-10-09"}}, {"model": "core.episode", "pk": 234, "fields": {"episode_number": 3, "name": "Any element of a tuple can be accessed in constant time.", "season": 24, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2014-03-26"}}, {"model": "core.episode", "pk": 235, "fields": {"episode_number": 4, "name": "Any element of a tuple can be accessed in constant time.", "season": 24, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2013-03-09"}}, {"model": "core.episode", "pk": 236, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 24, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2004-04-05"}}, {"model": "core.episode", "pk": 237, "fields": {"episode_number": 6, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 24, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2007-06-09"}}, {"model": "core.episode", "pk": 238, "fields": {"episode_number": 7, "name": "Ports are created with the built-in function open_port.", "season": 24, "description": "Do you have any idea why this is not working?", "released_date": "2002-03-21"}}, {"model": "core.episode", "pk": 239, "fields": {"episode_number": 8, "name": "Make me a sandwich.", "season": 24, "description": "Make me a sandwich.", "released_date": "2013-04-09"}}, {"model": "core.episode", "pk": 240, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 24, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2009-06-27"}}, {"model": "core.episode", "pk": 241, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 25, "description": "Do you have any idea why this is not working?", "released_date": "2017-08-19"}}, {"model": "core.episode", "pk": 242, "fields": {"episode_number": 1, "name": "Atoms are used within a program to denote distinguished values.", "season": 25, "description": "Make me a sandwich.", "released_date": "2034-12-17"}}, {"model": "core.episode", "pk": 243, "fields": {"episode_number": 2, "name": "The arguments can be primitive data types or compound data types.", "season": 25, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2024-02-06"}}, {"model": "core.episode", "pk": 244, "fields": {"episode_number": 3, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 25, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2015-05-14"}}, {"model": "core.episode", "pk": 245, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 25, "description": "I don't even care.", "released_date": "2003-08-18"}}, {"model": "core.episode", "pk": 246, "fields": {"episode_number": 5, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 25, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2024-11-10"}}, {"model": "core.episode", "pk": 247, "fields": {"episode_number": 6, "name": "I don't even care.", "season": 25, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2015-08-29"}}, {"model": "core.episode", "pk": 248, "fields": {"episode_number": 7, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 25, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2023-08-13"}}, {"model": "core.episode", "pk": 249, "fields": {"episode_number": 8, "name": "Ports are created with the built-in function open_port.", "season": 25, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2007-02-16"}}, {"model": "core.episode", "pk": 250, "fields": {"episode_number": 9, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 25, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2004-01-05"}}, {"model": "core.episode", "pk": 251, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 26, "description": "Make me a sandwich.", "released_date": "2029-05-26"}}, {"model": "core.episode", "pk": 252, "fields": {"episode_number": 1, "name": "Erlang is known for its designs that are well suited for systems.", "season": 26, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2011-05-07"}}, {"model": "core.episode", "pk": 253, "fields": {"episode_number": 2, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 26, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2003-09-17"}}, {"model": "core.episode", "pk": 254, "fields": {"episode_number": 3, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 26, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2002-07-05"}}, {"model": "core.episode", "pk": 255, "fields": {"episode_number": 4, "name": "Do you come here often?", "season": 26, "description": "Ports are created with the built-in function open_port.", "released_date": "2025-06-29"}}, {"model": "core.episode", "pk": 256, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 26, "description": "Ports are created with the built-in function open_port.", "released_date": "2020-01-13"}}, {"model": "core.episode", "pk": 257, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 26, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2006-07-24"}}, {"model": "core.episode", "pk": 258, "fields": {"episode_number": 7, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 26, "description": "Make me a sandwich.", "released_date": "2032-07-20"}}, {"model": "core.episode", "pk": 259, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 26, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2020-07-21"}}, {"model": "core.episode", "pk": 260, "fields": {"episode_number": 9, "name": "Atoms are used within a program to denote distinguished values.", "season": 26, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2010-06-11"}}, {"model": "core.episode", "pk": 261, "fields": {"episode_number": 0, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 27, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2017-05-05"}}, {"model": "core.episode", "pk": 262, "fields": {"episode_number": 1, "name": "Atoms are used within a program to denote distinguished values.", "season": 27, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2025-01-28"}}, {"model": "core.episode", "pk": 263, "fields": {"episode_number": 2, "name": "Ports are used to communicate with the external world.", "season": 27, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2007-08-25"}}, {"model": "core.episode", "pk": 264, "fields": {"episode_number": 3, "name": "Make me a sandwich.", "season": 27, "description": "Make me a sandwich.", "released_date": "2000-09-11"}}, {"model": "core.episode", "pk": 265, "fields": {"episode_number": 4, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 27, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2025-04-05"}}, {"model": "core.episode", "pk": 266, "fields": {"episode_number": 5, "name": "Ports are created with the built-in function open_port.", "season": 27, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2017-10-24"}}, {"model": "core.episode", "pk": 267, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 27, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2023-02-14"}}, {"model": "core.episode", "pk": 268, "fields": {"episode_number": 7, "name": "Type classes first appeared in the Haskell programming language.", "season": 27, "description": "Do you come here often?", "released_date": "2016-03-24"}}, {"model": "core.episode", "pk": 269, "fields": {"episode_number": 8, "name": "I don't even care.", "season": 27, "description": "Do you have any idea why this is not working?", "released_date": "2019-06-18"}}, {"model": "core.episode", "pk": 270, "fields": {"episode_number": 9, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 27, "description": "It is also a garbage-collected runtime system.", "released_date": "2010-12-21"}}, {"model": "core.episode", "pk": 271, "fields": {"episode_number": 0, "name": "Make me a sandwich.", "season": 28, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2008-12-06"}}, {"model": "core.episode", "pk": 272, "fields": {"episode_number": 1, "name": "Erlang is known for its designs that are well suited for systems.", "season": 28, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2021-07-10"}}, {"model": "core.episode", "pk": 273, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 28, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2017-01-21"}}, {"model": "core.episode", "pk": 274, "fields": {"episode_number": 3, "name": "It is also a garbage-collected runtime system.", "season": 28, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2012-08-20"}}, {"model": "core.episode", "pk": 275, "fields": {"episode_number": 4, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 28, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2015-07-29"}}, {"model": "core.episode", "pk": 276, "fields": {"episode_number": 5, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 28, "description": "Ports are created with the built-in function open_port.", "released_date": "2023-03-28"}}, {"model": "core.episode", "pk": 277, "fields": {"episode_number": 6, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 28, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2025-02-05"}}, {"model": "core.episode", "pk": 278, "fields": {"episode_number": 7, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 28, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2006-12-19"}}, {"model": "core.episode", "pk": 279, "fields": {"episode_number": 8, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 28, "description": "Do you have any idea why this is not working?", "released_date": "2022-03-03"}}, {"model": "core.episode", "pk": 280, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 28, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2028-01-25"}}, {"model": "core.episode", "pk": 281, "fields": {"episode_number": 0, "name": "Ports are used to communicate with the external world.", "season": 29, "description": "Ports are created with the built-in function open_port.", "released_date": "2017-01-22"}}, {"model": "core.episode", "pk": 282, "fields": {"episode_number": 1, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 29, "description": "Where are my pants?", "released_date": "2009-08-15"}}, {"model": "core.episode", "pk": 283, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 29, "description": "Do you come here often?", "released_date": "2025-08-12"}}, {"model": "core.episode", "pk": 284, "fields": {"episode_number": 3, "name": "Atoms are used within a program to denote distinguished values.", "season": 29, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2023-05-19"}}, {"model": "core.episode", "pk": 285, "fields": {"episode_number": 4, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 29, "description": "Where are my pants?", "released_date": "2002-05-21"}}, {"model": "core.episode", "pk": 286, "fields": {"episode_number": 5, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 29, "description": "Make me a sandwich.", "released_date": "2024-10-08"}}, {"model": "core.episode", "pk": 287, "fields": {"episode_number": 6, "name": "Erlang is known for its designs that are well suited for systems.", "season": 29, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2025-08-31"}}, {"model": "core.episode", "pk": 288, "fields": {"episode_number": 7, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 29, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2032-09-08"}}, {"model": "core.episode", "pk": 289, "fields": {"episode_number": 8, "name": "Ports are used to communicate with the external world.", "season": 29, "description": "Ports are used to communicate with the external world.", "released_date": "2007-01-25"}}, {"model": "core.episode", "pk": 290, "fields": {"episode_number": 9, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 29, "description": "Make me a sandwich.", "released_date": "2017-12-31"}}, {"model": "core.episode", "pk": 291, "fields": {"episode_number": 0, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 30, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2003-10-26"}}, {"model": "core.episode", "pk": 292, "fields": {"episode_number": 1, "name": "I don't even care.", "season": 30, "description": "Do you have any idea why this is not working?", "released_date": "2029-12-01"}}, {"model": "core.episode", "pk": 293, "fields": {"episode_number": 2, "name": "The arguments can be primitive data types or compound data types.", "season": 30, "description": "Do you come here often?", "released_date": "2034-10-19"}}, {"model": "core.episode", "pk": 294, "fields": {"episode_number": 3, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 30, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2021-03-13"}}, {"model": "core.episode", "pk": 295, "fields": {"episode_number": 4, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 30, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2000-09-01"}}, {"model": "core.episode", "pk": 296, "fields": {"episode_number": 5, "name": "Do you come here often?", "season": 30, "description": "Where are my pants?", "released_date": "2000-02-11"}}, {"model": "core.episode", "pk": 297, "fields": {"episode_number": 6, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 30, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2009-11-11"}}, {"model": "core.episode", "pk": 298, "fields": {"episode_number": 7, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 30, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2024-12-17"}}, {"model": "core.episode", "pk": 299, "fields": {"episode_number": 8, "name": "Do you come here often?", "season": 30, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2021-11-09"}}, {"model": "core.episode", "pk": 300, "fields": {"episode_number": 9, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 30, "description": "Do you have any idea why this is not working?", "released_date": "2017-04-10"}}, {"model": "core.episode", "pk": 301, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 31, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2008-02-15"}}, {"model": "core.episode", "pk": 302, "fields": {"episode_number": 1, "name": "Type classes first appeared in the Haskell programming language.", "season": 31, "description": "Make me a sandwich.", "released_date": "2014-06-07"}}, {"model": "core.episode", "pk": 303, "fields": {"episode_number": 2, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 31, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2013-07-17"}}, {"model": "core.episode", "pk": 304, "fields": {"episode_number": 3, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 31, "description": "Make me a sandwich.", "released_date": "2000-04-12"}}, {"model": "core.episode", "pk": 305, "fields": {"episode_number": 4, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 31, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2008-02-15"}}, {"model": "core.episode", "pk": 306, "fields": {"episode_number": 5, "name": "Erlang is known for its designs that are well suited for systems.", "season": 31, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2012-02-02"}}, {"model": "core.episode", "pk": 307, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 31, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2016-06-22"}}, {"model": "core.episode", "pk": 308, "fields": {"episode_number": 7, "name": "Type classes first appeared in the Haskell programming language.", "season": 31, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2025-04-23"}}, {"model": "core.episode", "pk": 309, "fields": {"episode_number": 8, "name": "Where are my pants?", "season": 31, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2015-07-05"}}, {"model": "core.episode", "pk": 310, "fields": {"episode_number": 9, "name": "Type classes first appeared in the Haskell programming language.", "season": 31, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2008-09-27"}}, {"model": "core.episode", "pk": 311, "fields": {"episode_number": 0, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 32, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2024-03-24"}}, {"model": "core.episode", "pk": 312, "fields": {"episode_number": 1, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 32, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2001-08-18"}}, {"model": "core.episode", "pk": 313, "fields": {"episode_number": 2, "name": "Type classes first appeared in the Haskell programming language.", "season": 32, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2033-05-13"}}, {"model": "core.episode", "pk": 314, "fields": {"episode_number": 3, "name": "Atoms are used within a program to denote distinguished values.", "season": 32, "description": "Make me a sandwich.", "released_date": "2020-03-22"}}, {"model": "core.episode", "pk": 315, "fields": {"episode_number": 4, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 32, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2007-11-25"}}, {"model": "core.episode", "pk": 316, "fields": {"episode_number": 5, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 32, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2026-03-15"}}, {"model": "core.episode", "pk": 317, "fields": {"episode_number": 6, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 32, "description": "Ports are used to communicate with the external world.", "released_date": "2001-11-05"}}, {"model": "core.episode", "pk": 318, "fields": {"episode_number": 7, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 32, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2030-12-22"}}, {"model": "core.episode", "pk": 319, "fields": {"episode_number": 8, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 32, "description": "Where are my pants?", "released_date": "2024-01-14"}}, {"model": "core.episode", "pk": 320, "fields": {"episode_number": 9, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 32, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2002-11-13"}}, {"model": "core.episode", "pk": 321, "fields": {"episode_number": 0, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 33, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2022-05-07"}}, {"model": "core.episode", "pk": 322, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 33, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2005-08-14"}}, {"model": "core.episode", "pk": 323, "fields": {"episode_number": 2, "name": "Do you have any idea why this is not working?", "season": 33, "description": "Ports are used to communicate with the external world.", "released_date": "2016-05-27"}}, {"model": "core.episode", "pk": 324, "fields": {"episode_number": 3, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 33, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2003-07-29"}}, {"model": "core.episode", "pk": 325, "fields": {"episode_number": 4, "name": "Any element of a tuple can be accessed in constant time.", "season": 33, "description": "I don't even care.", "released_date": "2017-04-17"}}, {"model": "core.episode", "pk": 326, "fields": {"episode_number": 5, "name": "Ports are created with the built-in function open_port.", "season": 33, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2026-01-08"}}, {"model": "core.episode", "pk": 327, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 33, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2015-09-06"}}, {"model": "core.episode", "pk": 328, "fields": {"episode_number": 7, "name": "Type classes first appeared in the Haskell programming language.", "season": 33, "description": "Do you have any idea why this is not working?", "released_date": "2031-05-14"}}, {"model": "core.episode", "pk": 329, "fields": {"episode_number": 8, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 33, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2006-07-25"}}, {"model": "core.episode", "pk": 330, "fields": {"episode_number": 9, "name": "Ports are created with the built-in function open_port.", "season": 33, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2035-12-21"}}, {"model": "core.episode", "pk": 331, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 34, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2022-08-18"}}, {"model": "core.episode", "pk": 332, "fields": {"episode_number": 1, "name": "Make me a sandwich.", "season": 34, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2032-08-13"}}, {"model": "core.episode", "pk": 333, "fields": {"episode_number": 2, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 34, "description": "Ports are used to communicate with the external world.", "released_date": "2022-12-09"}}, {"model": "core.episode", "pk": 334, "fields": {"episode_number": 3, "name": "Where are my pants?", "season": 34, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2004-06-17"}}, {"model": "core.episode", "pk": 335, "fields": {"episode_number": 4, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 34, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2012-08-20"}}, {"model": "core.episode", "pk": 336, "fields": {"episode_number": 5, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 34, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2029-11-22"}}, {"model": "core.episode", "pk": 337, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 34, "description": "Do you come here often?", "released_date": "2026-08-11"}}, {"model": "core.episode", "pk": 338, "fields": {"episode_number": 7, "name": "Where are my pants?", "season": 34, "description": "Do you come here often?", "released_date": "2014-10-22"}}, {"model": "core.episode", "pk": 339, "fields": {"episode_number": 8, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 34, "description": "Ports are created with the built-in function open_port.", "released_date": "2019-07-18"}}, {"model": "core.episode", "pk": 340, "fields": {"episode_number": 9, "name": "Where are my pants?", "season": 34, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2028-12-31"}}, {"model": "core.episode", "pk": 341, "fields": {"episode_number": 0, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 35, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2023-08-29"}}, {"model": "core.episode", "pk": 342, "fields": {"episode_number": 1, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 35, "description": "Where are my pants?", "released_date": "2011-01-25"}}, {"model": "core.episode", "pk": 343, "fields": {"episode_number": 2, "name": "Ports are used to communicate with the external world.", "season": 35, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2013-05-18"}}, {"model": "core.episode", "pk": 344, "fields": {"episode_number": 3, "name": "Where are my pants?", "season": 35, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2028-03-24"}}, {"model": "core.episode", "pk": 345, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 35, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2011-11-25"}}, {"model": "core.episode", "pk": 346, "fields": {"episode_number": 5, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 35, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2034-09-02"}}, {"model": "core.episode", "pk": 347, "fields": {"episode_number": 6, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 35, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2022-01-20"}}, {"model": "core.episode", "pk": 348, "fields": {"episode_number": 7, "name": "Ports are created with the built-in function open_port.", "season": 35, "description": "I don't even care.", "released_date": "2002-01-10"}}, {"model": "core.episode", "pk": 349, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 35, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2023-08-27"}}, {"model": "core.episode", "pk": 350, "fields": {"episode_number": 9, "name": "It is also a garbage-collected runtime system.", "season": 35, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2017-11-21"}}, {"model": "core.episode", "pk": 351, "fields": {"episode_number": 0, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 36, "description": "Ports are created with the built-in function open_port.", "released_date": "2026-03-04"}}, {"model": "core.episode", "pk": 352, "fields": {"episode_number": 1, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 36, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2022-11-20"}}, {"model": "core.episode", "pk": 353, "fields": {"episode_number": 2, "name": "Do you come here often?", "season": 36, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2026-09-04"}}, {"model": "core.episode", "pk": 354, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 36, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2009-12-17"}}, {"model": "core.episode", "pk": 355, "fields": {"episode_number": 4, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 36, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2002-01-14"}}, {"model": "core.episode", "pk": 356, "fields": {"episode_number": 5, "name": "Do you have any idea why this is not working?", "season": 36, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2023-05-14"}}, {"model": "core.episode", "pk": 357, "fields": {"episode_number": 6, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 36, "description": "It is also a garbage-collected runtime system.", "released_date": "2024-02-26"}}, {"model": "core.episode", "pk": 358, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 36, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2005-09-26"}}, {"model": "core.episode", "pk": 359, "fields": {"episode_number": 8, "name": "Ports are used to communicate with the external world.", "season": 36, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2023-09-19"}}, {"model": "core.episode", "pk": 360, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 36, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2013-03-10"}}, {"model": "core.episode", "pk": 361, "fields": {"episode_number": 0, "name": "Erlang is known for its designs that are well suited for systems.", "season": 37, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2005-09-04"}}, {"model": "core.episode", "pk": 362, "fields": {"episode_number": 1, "name": "It is also a garbage-collected runtime system.", "season": 37, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2024-03-31"}}, {"model": "core.episode", "pk": 363, "fields": {"episode_number": 2, "name": "The arguments can be primitive data types or compound data types.", "season": 37, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2009-07-25"}}, {"model": "core.episode", "pk": 364, "fields": {"episode_number": 3, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 37, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2010-07-24"}}, {"model": "core.episode", "pk": 365, "fields": {"episode_number": 4, "name": "Do you come here often?", "season": 37, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2030-07-10"}}, {"model": "core.episode", "pk": 366, "fields": {"episode_number": 5, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 37, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2008-07-02"}}, {"model": "core.episode", "pk": 367, "fields": {"episode_number": 6, "name": "Any element of a tuple can be accessed in constant time.", "season": 37, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2010-06-03"}}, {"model": "core.episode", "pk": 368, "fields": {"episode_number": 7, "name": "Ports are created with the built-in function open_port.", "season": 37, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2029-12-08"}}, {"model": "core.episode", "pk": 369, "fields": {"episode_number": 8, "name": "The arguments can be primitive data types or compound data types.", "season": 37, "description": "I don't even care.", "released_date": "2035-05-31"}}, {"model": "core.episode", "pk": 370, "fields": {"episode_number": 9, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 37, "description": "Do you have any idea why this is not working?", "released_date": "2025-08-20"}}, {"model": "core.episode", "pk": 371, "fields": {"episode_number": 0, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 38, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2016-03-28"}}, {"model": "core.episode", "pk": 372, "fields": {"episode_number": 1, "name": "Make me a sandwich.", "season": 38, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2002-02-09"}}, {"model": "core.episode", "pk": 373, "fields": {"episode_number": 2, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 38, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2030-10-31"}}, {"model": "core.episode", "pk": 374, "fields": {"episode_number": 3, "name": "The arguments can be primitive data types or compound data types.", "season": 38, "description": "I don't even care.", "released_date": "2013-12-09"}}, {"model": "core.episode", "pk": 375, "fields": {"episode_number": 4, "name": "The arguments can be primitive data types or compound data types.", "season": 38, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2028-08-06"}}, {"model": "core.episode", "pk": 376, "fields": {"episode_number": 5, "name": "Type classes first appeared in the Haskell programming language.", "season": 38, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2018-01-01"}}, {"model": "core.episode", "pk": 377, "fields": {"episode_number": 6, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 38, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2010-11-26"}}, {"model": "core.episode", "pk": 378, "fields": {"episode_number": 7, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 38, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2024-09-30"}}, {"model": "core.episode", "pk": 379, "fields": {"episode_number": 8, "name": "Ports are used to communicate with the external world.", "season": 38, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2018-11-16"}}, {"model": "core.episode", "pk": 380, "fields": {"episode_number": 9, "name": "I don't even care.", "season": 38, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2034-03-03"}}, {"model": "core.episode", "pk": 381, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 39, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2029-07-08"}}, {"model": "core.episode", "pk": 382, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 39, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2024-07-17"}}, {"model": "core.episode", "pk": 383, "fields": {"episode_number": 2, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 39, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2019-03-24"}}, {"model": "core.episode", "pk": 384, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 39, "description": "Make me a sandwich.", "released_date": "2017-01-22"}}, {"model": "core.episode", "pk": 385, "fields": {"episode_number": 4, "name": "Type classes first appeared in the Haskell programming language.", "season": 39, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2007-10-08"}}, {"model": "core.episode", "pk": 386, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 39, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2001-07-27"}}, {"model": "core.episode", "pk": 387, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 39, "description": "Do you come here often?", "released_date": "2000-10-18"}}, {"model": "core.episode", "pk": 388, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 39, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2027-08-01"}}, {"model": "core.episode", "pk": 389, "fields": {"episode_number": 8, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 39, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2020-05-23"}}, {"model": "core.episode", "pk": 390, "fields": {"episode_number": 9, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 39, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2005-01-27"}}, {"model": "core.episode", "pk": 391, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 40, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2011-10-09"}}, {"model": "core.episode", "pk": 392, "fields": {"episode_number": 1, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 40, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2008-09-20"}}, {"model": "core.episode", "pk": 393, "fields": {"episode_number": 2, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 40, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2013-08-12"}}, {"model": "core.episode", "pk": 394, "fields": {"episode_number": 3, "name": "Do you have any idea why this is not working?", "season": 40, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2010-12-29"}}, {"model": "core.episode", "pk": 395, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 40, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2025-07-18"}}, {"model": "core.episode", "pk": 396, "fields": {"episode_number": 5, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 40, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2009-01-27"}}, {"model": "core.episode", "pk": 397, "fields": {"episode_number": 6, "name": "Where are my pants?", "season": 40, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2007-01-05"}}, {"model": "core.episode", "pk": 398, "fields": {"episode_number": 7, "name": "I don't even care.", "season": 40, "description": "Do you come here often?", "released_date": "2016-09-01"}}, {"model": "core.episode", "pk": 399, "fields": {"episode_number": 8, "name": "Do you have any idea why this is not working?", "season": 40, "description": "Make me a sandwich.", "released_date": "2010-12-15"}}, {"model": "core.episode", "pk": 400, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 40, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2014-06-06"}}, {"model": "core.episode", "pk": 401, "fields": {"episode_number": 0, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 41, "description": "Ports are created with the built-in function open_port.", "released_date": "2011-06-26"}}, {"model": "core.episode", "pk": 402, "fields": {"episode_number": 1, "name": "Atoms are used within a program to denote distinguished values.", "season": 41, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2003-12-27"}}, {"model": "core.episode", "pk": 403, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 41, "description": "Ports are used to communicate with the external world.", "released_date": "2026-07-22"}}, {"model": "core.episode", "pk": 404, "fields": {"episode_number": 3, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 41, "description": "Ports are created with the built-in function open_port.", "released_date": "2014-09-04"}}, {"model": "core.episode", "pk": 405, "fields": {"episode_number": 4, "name": "It is also a garbage-collected runtime system.", "season": 41, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2026-08-31"}}, {"model": "core.episode", "pk": 406, "fields": {"episode_number": 5, "name": "Make me a sandwich.", "season": 41, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2020-07-14"}}, {"model": "core.episode", "pk": 407, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 41, "description": "It is also a garbage-collected runtime system.", "released_date": "2035-02-10"}}, {"model": "core.episode", "pk": 408, "fields": {"episode_number": 7, "name": "Any element of a tuple can be accessed in constant time.", "season": 41, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2029-07-27"}}, {"model": "core.episode", "pk": 409, "fields": {"episode_number": 8, "name": "It is also a garbage-collected runtime system.", "season": 41, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2014-11-22"}}, {"model": "core.episode", "pk": 410, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 41, "description": "Make me a sandwich.", "released_date": "2018-01-14"}}, {"model": "core.episode", "pk": 411, "fields": {"episode_number": 0, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 42, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2031-12-24"}}, {"model": "core.episode", "pk": 412, "fields": {"episode_number": 1, "name": "Ports are created with the built-in function open_port.", "season": 42, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2008-08-03"}}, {"model": "core.episode", "pk": 413, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 42, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2002-04-29"}}, {"model": "core.episode", "pk": 414, "fields": {"episode_number": 3, "name": "Any element of a tuple can be accessed in constant time.", "season": 42, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2011-03-29"}}, {"model": "core.episode", "pk": 415, "fields": {"episode_number": 4, "name": "Atoms are used within a program to denote distinguished values.", "season": 42, "description": "Ports are used to communicate with the external world.", "released_date": "2012-10-01"}}, {"model": "core.episode", "pk": 416, "fields": {"episode_number": 5, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 42, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2015-11-21"}}, {"model": "core.episode", "pk": 417, "fields": {"episode_number": 6, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 42, "description": "Make me a sandwich.", "released_date": "2022-09-02"}}, {"model": "core.episode", "pk": 418, "fields": {"episode_number": 7, "name": "Where are my pants?", "season": 42, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2016-01-06"}}, {"model": "core.episode", "pk": 419, "fields": {"episode_number": 8, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 42, "description": "Make me a sandwich.", "released_date": "2030-03-13"}}, {"model": "core.episode", "pk": 420, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 42, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2035-01-12"}}, {"model": "core.episode", "pk": 421, "fields": {"episode_number": 0, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 43, "description": "Where are my pants?", "released_date": "2027-02-06"}}, {"model": "core.episode", "pk": 422, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 43, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2030-12-02"}}, {"model": "core.episode", "pk": 423, "fields": {"episode_number": 2, "name": "Type classes first appeared in the Haskell programming language.", "season": 43, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2034-06-05"}}, {"model": "core.episode", "pk": 424, "fields": {"episode_number": 3, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 43, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2018-12-16"}}, {"model": "core.episode", "pk": 425, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 43, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2032-03-22"}}, {"model": "core.episode", "pk": 426, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 43, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2015-01-08"}}, {"model": "core.episode", "pk": 427, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 43, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2001-10-20"}}, {"model": "core.episode", "pk": 428, "fields": {"episode_number": 7, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 43, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2027-01-17"}}, {"model": "core.episode", "pk": 429, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 43, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2007-05-29"}}, {"model": "core.episode", "pk": 430, "fields": {"episode_number": 9, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 43, "description": "Do you come here often?", "released_date": "2008-02-22"}}, {"model": "core.episode", "pk": 431, "fields": {"episode_number": 0, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 44, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2031-05-25"}}, {"model": "core.episode", "pk": 432, "fields": {"episode_number": 1, "name": "Make me a sandwich.", "season": 44, "description": "Do you have any idea why this is not working?", "released_date": "2011-10-28"}}, {"model": "core.episode", "pk": 433, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 44, "description": "It is also a garbage-collected runtime system.", "released_date": "2019-07-15"}}, {"model": "core.episode", "pk": 434, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 44, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2023-04-27"}}, {"model": "core.episode", "pk": 435, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 44, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2031-02-16"}}, {"model": "core.episode", "pk": 436, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 44, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2029-08-21"}}, {"model": "core.episode", "pk": 437, "fields": {"episode_number": 6, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 44, "description": "Do you come here often?", "released_date": "2020-09-06"}}, {"model": "core.episode", "pk": 438, "fields": {"episode_number": 7, "name": "Ports are created with the built-in function open_port.", "season": 44, "description": "Ports are used to communicate with the external world.", "released_date": "2032-01-04"}}, {"model": "core.episode", "pk": 439, "fields": {"episode_number": 8, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 44, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2007-12-25"}}, {"model": "core.episode", "pk": 440, "fields": {"episode_number": 9, "name": "Type classes first appeared in the Haskell programming language.", "season": 44, "description": "Ports are created with the built-in function open_port.", "released_date": "2026-10-23"}}, {"model": "core.episode", "pk": 441, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 45, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2010-11-28"}}, {"model": "core.episode", "pk": 442, "fields": {"episode_number": 1, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 45, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2016-06-10"}}, {"model": "core.episode", "pk": 443, "fields": {"episode_number": 2, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 45, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2031-01-20"}}, {"model": "core.episode", "pk": 444, "fields": {"episode_number": 3, "name": "Erlang is known for its designs that are well suited for systems.", "season": 45, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2002-08-10"}}, {"model": "core.episode", "pk": 445, "fields": {"episode_number": 4, "name": "Type classes first appeared in the Haskell programming language.", "season": 45, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2026-11-14"}}, {"model": "core.episode", "pk": 446, "fields": {"episode_number": 5, "name": "The arguments can be primitive data types or compound data types.", "season": 45, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2004-12-20"}}, {"model": "core.episode", "pk": 447, "fields": {"episode_number": 6, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 45, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2028-07-24"}}, {"model": "core.episode", "pk": 448, "fields": {"episode_number": 7, "name": "Any element of a tuple can be accessed in constant time.", "season": 45, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2013-04-24"}}, {"model": "core.episode", "pk": 449, "fields": {"episode_number": 8, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 45, "description": "Do you come here often?", "released_date": "2018-01-03"}}, {"model": "core.episode", "pk": 450, "fields": {"episode_number": 9, "name": "Erlang is known for its designs that are well suited for systems.", "season": 45, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2008-06-21"}}, {"model": "core.episode", "pk": 451, "fields": {"episode_number": 0, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 46, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2006-11-16"}}, {"model": "core.episode", "pk": 452, "fields": {"episode_number": 1, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 46, "description": "Make me a sandwich.", "released_date": "2013-05-26"}}, {"model": "core.episode", "pk": 453, "fields": {"episode_number": 2, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 46, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2012-08-23"}}, {"model": "core.episode", "pk": 454, "fields": {"episode_number": 3, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 46, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2020-02-26"}}, {"model": "core.episode", "pk": 455, "fields": {"episode_number": 4, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 46, "description": "Ports are created with the built-in function open_port.", "released_date": "2010-11-10"}}, {"model": "core.episode", "pk": 456, "fields": {"episode_number": 5, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 46, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2030-02-24"}}, {"model": "core.episode", "pk": 457, "fields": {"episode_number": 6, "name": "It is also a garbage-collected runtime system.", "season": 46, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2017-04-15"}}, {"model": "core.episode", "pk": 458, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 46, "description": "Make me a sandwich.", "released_date": "2032-05-12"}}, {"model": "core.episode", "pk": 459, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 46, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2002-02-06"}}, {"model": "core.episode", "pk": 460, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 46, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2002-05-22"}}, {"model": "core.episode", "pk": 461, "fields": {"episode_number": 0, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 47, "description": "It is also a garbage-collected runtime system.", "released_date": "2015-05-08"}}, {"model": "core.episode", "pk": 462, "fields": {"episode_number": 1, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 47, "description": "Ports are used to communicate with the external world.", "released_date": "2006-02-13"}}, {"model": "core.episode", "pk": 463, "fields": {"episode_number": 2, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 47, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2020-01-10"}}, {"model": "core.episode", "pk": 464, "fields": {"episode_number": 3, "name": "Atoms are used within a program to denote distinguished values.", "season": 47, "description": "I don't even care.", "released_date": "2007-11-09"}}, {"model": "core.episode", "pk": 465, "fields": {"episode_number": 4, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 47, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2009-06-15"}}, {"model": "core.episode", "pk": 466, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 47, "description": "Ports are created with the built-in function open_port.", "released_date": "2001-07-30"}}, {"model": "core.episode", "pk": 467, "fields": {"episode_number": 6, "name": "Make me a sandwich.", "season": 47, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2033-06-26"}}, {"model": "core.episode", "pk": 468, "fields": {"episode_number": 7, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 47, "description": "Ports are used to communicate with the external world.", "released_date": "2029-04-23"}}, {"model": "core.episode", "pk": 469, "fields": {"episode_number": 8, "name": "Any element of a tuple can be accessed in constant time.", "season": 47, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2032-11-21"}}, {"model": "core.episode", "pk": 470, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 47, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2031-10-12"}}, {"model": "core.episode", "pk": 471, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 48, "description": "Do you come here often?", "released_date": "2013-09-20"}}, {"model": "core.episode", "pk": 472, "fields": {"episode_number": 1, "name": "Atoms are used within a program to denote distinguished values.", "season": 48, "description": "Ports are created with the built-in function open_port.", "released_date": "2014-08-13"}}, {"model": "core.episode", "pk": 473, "fields": {"episode_number": 2, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 48, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2002-07-06"}}, {"model": "core.episode", "pk": 474, "fields": {"episode_number": 3, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 48, "description": "Do you have any idea why this is not working?", "released_date": "2021-11-11"}}, {"model": "core.episode", "pk": 475, "fields": {"episode_number": 4, "name": "The arguments can be primitive data types or compound data types.", "season": 48, "description": "I don't even care.", "released_date": "2029-10-11"}}, {"model": "core.episode", "pk": 476, "fields": {"episode_number": 5, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 48, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2004-12-08"}}, {"model": "core.episode", "pk": 477, "fields": {"episode_number": 6, "name": "Make me a sandwich.", "season": 48, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2024-03-22"}}, {"model": "core.episode", "pk": 478, "fields": {"episode_number": 7, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 48, "description": "Ports are used to communicate with the external world.", "released_date": "2034-06-27"}}, {"model": "core.episode", "pk": 479, "fields": {"episode_number": 8, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 48, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2022-11-09"}}, {"model": "core.episode", "pk": 480, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 48, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2005-09-09"}}, {"model": "core.episode", "pk": 481, "fields": {"episode_number": 0, "name": "Do you come here often?", "season": 49, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2006-02-08"}}, {"model": "core.episode", "pk": 482, "fields": {"episode_number": 1, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 49, "description": "Ports are created with the built-in function open_port.", "released_date": "2021-07-01"}}, {"model": "core.episode", "pk": 483, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 49, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2028-02-07"}}, {"model": "core.episode", "pk": 484, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 49, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2004-02-08"}}, {"model": "core.episode", "pk": 485, "fields": {"episode_number": 4, "name": "Ports are used to communicate with the external world.", "season": 49, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2022-07-08"}}, {"model": "core.episode", "pk": 486, "fields": {"episode_number": 5, "name": "Any element of a tuple can be accessed in constant time.", "season": 49, "description": "Ports are created with the built-in function open_port.", "released_date": "2004-06-15"}}, {"model": "core.episode", "pk": 487, "fields": {"episode_number": 6, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 49, "description": "I don't even care.", "released_date": "2022-05-02"}}, {"model": "core.episode", "pk": 488, "fields": {"episode_number": 7, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 49, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2011-12-01"}}, {"model": "core.episode", "pk": 489, "fields": {"episode_number": 8, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 49, "description": "Ports are created with the built-in function open_port.", "released_date": "2002-07-25"}}, {"model": "core.episode", "pk": 490, "fields": {"episode_number": 9, "name": "Ports are used to communicate with the external world.", "season": 49, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2022-01-07"}}, {"model": "core.episode", "pk": 491, "fields": {"episode_number": 0, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 50, "description": "Do you come here often?", "released_date": "2006-02-28"}}, {"model": "core.episode", "pk": 492, "fields": {"episode_number": 1, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 50, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2024-03-01"}}, {"model": "core.episode", "pk": 493, "fields": {"episode_number": 2, "name": "Ports are created with the built-in function open_port.", "season": 50, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2001-03-14"}}, {"model": "core.episode", "pk": 494, "fields": {"episode_number": 3, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 50, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2025-06-21"}}, {"model": "core.episode", "pk": 495, "fields": {"episode_number": 4, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 50, "description": "Do you have any idea why this is not working?", "released_date": "2008-07-14"}}, {"model": "core.episode", "pk": 496, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 50, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2028-12-23"}}, {"model": "core.episode", "pk": 497, "fields": {"episode_number": 6, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 50, "description": "Do you come here often?", "released_date": "2006-09-22"}}, {"model": "core.episode", "pk": 498, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 50, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2012-10-02"}}, {"model": "core.episode", "pk": 499, "fields": {"episode_number": 8, "name": "The arguments can be primitive data types or compound data types.", "season": 50, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2031-03-01"}}, {"model": "core.episode", "pk": 500, "fields": {"episode_number": 9, "name": "Any element of a tuple can be accessed in constant time.", "season": 50, "description": "Do you have any idea why this is not working?", "released_date": "2004-03-12"}}, {"model": "core.episode", "pk": 501, "fields": {"episode_number": 0, "name": "Ports are used to communicate with the external world.", "season": 51, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2009-11-06"}}, {"model": "core.episode", "pk": 502, "fields": {"episode_number": 1, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 51, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2006-01-10"}}, {"model": "core.episode", "pk": 503, "fields": {"episode_number": 2, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 51, "description": "Do you have any idea why this is not working?", "released_date": "2009-12-10"}}, {"model": "core.episode", "pk": 504, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 51, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2008-12-21"}}, {"model": "core.episode", "pk": 505, "fields": {"episode_number": 4, "name": "Where are my pants?", "season": 51, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2015-06-09"}}, {"model": "core.episode", "pk": 506, "fields": {"episode_number": 5, "name": "Erlang is known for its designs that are well suited for systems.", "season": 51, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2025-02-18"}}, {"model": "core.episode", "pk": 507, "fields": {"episode_number": 6, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 51, "description": "Ports are created with the built-in function open_port.", "released_date": "2035-10-17"}}, {"model": "core.episode", "pk": 508, "fields": {"episode_number": 7, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 51, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2015-03-12"}}, {"model": "core.episode", "pk": 509, "fields": {"episode_number": 8, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 51, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2035-04-18"}}, {"model": "core.episode", "pk": 510, "fields": {"episode_number": 9, "name": "It is also a garbage-collected runtime system.", "season": 51, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2017-01-21"}}, {"model": "core.episode", "pk": 511, "fields": {"episode_number": 0, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 52, "description": "Where are my pants?", "released_date": "2023-12-31"}}, {"model": "core.episode", "pk": 512, "fields": {"episode_number": 1, "name": "Atoms are used within a program to denote distinguished values.", "season": 52, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2005-01-29"}}, {"model": "core.episode", "pk": 513, "fields": {"episode_number": 2, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 52, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2023-04-05"}}, {"model": "core.episode", "pk": 514, "fields": {"episode_number": 3, "name": "Make me a sandwich.", "season": 52, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2033-05-25"}}, {"model": "core.episode", "pk": 515, "fields": {"episode_number": 4, "name": "The arguments can be primitive data types or compound data types.", "season": 52, "description": "Where are my pants?", "released_date": "2015-09-17"}}, {"model": "core.episode", "pk": 516, "fields": {"episode_number": 5, "name": "Any element of a tuple can be accessed in constant time.", "season": 52, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2018-08-26"}}, {"model": "core.episode", "pk": 517, "fields": {"episode_number": 6, "name": "Ports are used to communicate with the external world.", "season": 52, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2018-09-20"}}, {"model": "core.episode", "pk": 518, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 52, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2012-12-12"}}, {"model": "core.episode", "pk": 519, "fields": {"episode_number": 8, "name": "The arguments can be primitive data types or compound data types.", "season": 52, "description": "It is also a garbage-collected runtime system.", "released_date": "2003-01-18"}}, {"model": "core.episode", "pk": 520, "fields": {"episode_number": 9, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 52, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2019-04-30"}}, {"model": "core.episode", "pk": 521, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 53, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2027-05-04"}}, {"model": "core.episode", "pk": 522, "fields": {"episode_number": 1, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 53, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2013-02-13"}}, {"model": "core.episode", "pk": 523, "fields": {"episode_number": 2, "name": "Ports are used to communicate with the external world.", "season": 53, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2034-10-20"}}, {"model": "core.episode", "pk": 524, "fields": {"episode_number": 3, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 53, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2004-10-06"}}, {"model": "core.episode", "pk": 525, "fields": {"episode_number": 4, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 53, "description": "Where are my pants?", "released_date": "2024-11-04"}}, {"model": "core.episode", "pk": 526, "fields": {"episode_number": 5, "name": "Erlang is known for its designs that are well suited for systems.", "season": 53, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2017-09-09"}}, {"model": "core.episode", "pk": 527, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 53, "description": "Where are my pants?", "released_date": "2026-04-15"}}, {"model": "core.episode", "pk": 528, "fields": {"episode_number": 7, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 53, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2002-10-26"}}, {"model": "core.episode", "pk": 529, "fields": {"episode_number": 8, "name": "Any element of a tuple can be accessed in constant time.", "season": 53, "description": "Do you have any idea why this is not working?", "released_date": "2006-11-09"}}, {"model": "core.episode", "pk": 530, "fields": {"episode_number": 9, "name": "Erlang is known for its designs that are well suited for systems.", "season": 53, "description": "Where are my pants?", "released_date": "2023-12-18"}}, {"model": "core.episode", "pk": 531, "fields": {"episode_number": 0, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 54, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2009-03-09"}}, {"model": "core.episode", "pk": 532, "fields": {"episode_number": 1, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 54, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2031-06-02"}}, {"model": "core.episode", "pk": 533, "fields": {"episode_number": 2, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 54, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2028-03-14"}}, {"model": "core.episode", "pk": 534, "fields": {"episode_number": 3, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 54, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2007-04-03"}}, {"model": "core.episode", "pk": 535, "fields": {"episode_number": 4, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 54, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2010-05-26"}}, {"model": "core.episode", "pk": 536, "fields": {"episode_number": 5, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 54, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2020-11-06"}}, {"model": "core.episode", "pk": 537, "fields": {"episode_number": 6, "name": "Type classes first appeared in the Haskell programming language.", "season": 54, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2011-04-08"}}, {"model": "core.episode", "pk": 538, "fields": {"episode_number": 7, "name": "Do you come here often?", "season": 54, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2021-05-07"}}, {"model": "core.episode", "pk": 539, "fields": {"episode_number": 8, "name": "Where are my pants?", "season": 54, "description": "Ports are used to communicate with the external world.", "released_date": "2033-09-25"}}, {"model": "core.episode", "pk": 540, "fields": {"episode_number": 9, "name": "I don't even care.", "season": 54, "description": "Make me a sandwich.", "released_date": "2001-10-22"}}, {"model": "core.episode", "pk": 541, "fields": {"episode_number": 0, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 55, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2029-05-14"}}, {"model": "core.episode", "pk": 542, "fields": {"episode_number": 1, "name": "Do you come here often?", "season": 55, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2026-11-10"}}, {"model": "core.episode", "pk": 543, "fields": {"episode_number": 2, "name": "The arguments can be primitive data types or compound data types.", "season": 55, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2009-09-07"}}, {"model": "core.episode", "pk": 544, "fields": {"episode_number": 3, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 55, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2006-12-17"}}, {"model": "core.episode", "pk": 545, "fields": {"episode_number": 4, "name": "Atoms are used within a program to denote distinguished values.", "season": 55, "description": "Do you come here often?", "released_date": "2025-09-02"}}, {"model": "core.episode", "pk": 546, "fields": {"episode_number": 5, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 55, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2018-07-10"}}, {"model": "core.episode", "pk": 547, "fields": {"episode_number": 6, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 55, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2014-03-13"}}, {"model": "core.episode", "pk": 548, "fields": {"episode_number": 7, "name": "Make me a sandwich.", "season": 55, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2003-09-24"}}, {"model": "core.episode", "pk": 549, "fields": {"episode_number": 8, "name": "It is also a garbage-collected runtime system.", "season": 55, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2003-03-26"}}, {"model": "core.episode", "pk": 550, "fields": {"episode_number": 9, "name": "Do you come here often?", "season": 55, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2030-06-28"}}, {"model": "core.episode", "pk": 551, "fields": {"episode_number": 0, "name": "Make me a sandwich.", "season": 56, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2006-02-23"}}, {"model": "core.episode", "pk": 552, "fields": {"episode_number": 1, "name": "Ports are used to communicate with the external world.", "season": 56, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2006-05-12"}}, {"model": "core.episode", "pk": 553, "fields": {"episode_number": 2, "name": "I don't even care.", "season": 56, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2032-02-03"}}, {"model": "core.episode", "pk": 554, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 56, "description": "I don't even care.", "released_date": "2016-03-01"}}, {"model": "core.episode", "pk": 555, "fields": {"episode_number": 4, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 56, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2015-02-01"}}, {"model": "core.episode", "pk": 556, "fields": {"episode_number": 5, "name": "Type classes first appeared in the Haskell programming language.", "season": 56, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2000-02-27"}}, {"model": "core.episode", "pk": 557, "fields": {"episode_number": 6, "name": "Where are my pants?", "season": 56, "description": "I don't even care.", "released_date": "2019-02-09"}}, {"model": "core.episode", "pk": 558, "fields": {"episode_number": 7, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 56, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2018-01-15"}}, {"model": "core.episode", "pk": 559, "fields": {"episode_number": 8, "name": "Erlang is known for its designs that are well suited for systems.", "season": 56, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2003-09-25"}}, {"model": "core.episode", "pk": 560, "fields": {"episode_number": 9, "name": "Ports are created with the built-in function open_port.", "season": 56, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2024-08-20"}}, {"model": "core.episode", "pk": 561, "fields": {"episode_number": 0, "name": "Do you come here often?", "season": 57, "description": "It is also a garbage-collected runtime system.", "released_date": "2034-05-20"}}, {"model": "core.episode", "pk": 562, "fields": {"episode_number": 1, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 57, "description": "Ports are created with the built-in function open_port.", "released_date": "2010-05-01"}}, {"model": "core.episode", "pk": 563, "fields": {"episode_number": 2, "name": "Ports are created with the built-in function open_port.", "season": 57, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2018-05-18"}}, {"model": "core.episode", "pk": 564, "fields": {"episode_number": 3, "name": "Ports are used to communicate with the external world.", "season": 57, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2026-10-14"}}, {"model": "core.episode", "pk": 565, "fields": {"episode_number": 4, "name": "Where are my pants?", "season": 57, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2006-08-10"}}, {"model": "core.episode", "pk": 566, "fields": {"episode_number": 5, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 57, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2032-09-26"}}, {"model": "core.episode", "pk": 567, "fields": {"episode_number": 6, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 57, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2032-03-17"}}, {"model": "core.episode", "pk": 568, "fields": {"episode_number": 7, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 57, "description": "Do you have any idea why this is not working?", "released_date": "2001-06-22"}}, {"model": "core.episode", "pk": 569, "fields": {"episode_number": 8, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 57, "description": "Do you have any idea why this is not working?", "released_date": "2009-10-07"}}, {"model": "core.episode", "pk": 570, "fields": {"episode_number": 9, "name": "Do you have any idea why this is not working?", "season": 57, "description": "Ports are used to communicate with the external world.", "released_date": "2015-09-10"}}, {"model": "core.episode", "pk": 571, "fields": {"episode_number": 0, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 58, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2000-04-03"}}, {"model": "core.episode", "pk": 572, "fields": {"episode_number": 1, "name": "Ports are created with the built-in function open_port.", "season": 58, "description": "Ports are created with the built-in function open_port.", "released_date": "2035-10-09"}}, {"model": "core.episode", "pk": 573, "fields": {"episode_number": 2, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 58, "description": "Do you come here often?", "released_date": "2025-11-20"}}, {"model": "core.episode", "pk": 574, "fields": {"episode_number": 3, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 58, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2034-08-10"}}, {"model": "core.episode", "pk": 575, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 58, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2017-07-19"}}, {"model": "core.episode", "pk": 576, "fields": {"episode_number": 5, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 58, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2034-07-19"}}, {"model": "core.episode", "pk": 577, "fields": {"episode_number": 6, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 58, "description": "Ports are created with the built-in function open_port.", "released_date": "2030-09-11"}}, {"model": "core.episode", "pk": 578, "fields": {"episode_number": 7, "name": "Ports are used to communicate with the external world.", "season": 58, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2010-06-22"}}, {"model": "core.episode", "pk": 579, "fields": {"episode_number": 8, "name": "Type classes first appeared in the Haskell programming language.", "season": 58, "description": "Do you come here often?", "released_date": "2027-12-29"}}, {"model": "core.episode", "pk": 580, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 58, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2012-03-17"}}, {"model": "core.episode", "pk": 581, "fields": {"episode_number": 0, "name": "Do you have any idea why this is not working?", "season": 59, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2033-05-19"}}, {"model": "core.episode", "pk": 582, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 59, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2006-09-05"}}, {"model": "core.episode", "pk": 583, "fields": {"episode_number": 2, "name": "Ports are used to communicate with the external world.", "season": 59, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2013-03-15"}}, {"model": "core.episode", "pk": 584, "fields": {"episode_number": 3, "name": "The arguments can be primitive data types or compound data types.", "season": 59, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2012-01-15"}}, {"model": "core.episode", "pk": 585, "fields": {"episode_number": 4, "name": "Ports are created with the built-in function open_port.", "season": 59, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2010-10-22"}}, {"model": "core.episode", "pk": 586, "fields": {"episode_number": 5, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 59, "description": "Ports are created with the built-in function open_port.", "released_date": "2009-07-27"}}, {"model": "core.episode", "pk": 587, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 59, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2024-07-14"}}, {"model": "core.episode", "pk": 588, "fields": {"episode_number": 7, "name": "Any element of a tuple can be accessed in constant time.", "season": 59, "description": "Ports are created with the built-in function open_port.", "released_date": "2015-02-15"}}, {"model": "core.episode", "pk": 589, "fields": {"episode_number": 8, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 59, "description": "Ports are used to communicate with the external world.", "released_date": "2016-09-14"}}, {"model": "core.episode", "pk": 590, "fields": {"episode_number": 9, "name": "Do you come here often?", "season": 59, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2024-07-02"}}, {"model": "core.episode", "pk": 591, "fields": {"episode_number": 0, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 60, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2024-12-07"}}, {"model": "core.episode", "pk": 592, "fields": {"episode_number": 1, "name": "Atoms are used within a program to denote distinguished values.", "season": 60, "description": "Ports are used to communicate with the external world.", "released_date": "2021-09-04"}}, {"model": "core.episode", "pk": 593, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 60, "description": "It is also a garbage-collected runtime system.", "released_date": "2015-12-20"}}, {"model": "core.episode", "pk": 594, "fields": {"episode_number": 3, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 60, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2000-12-25"}}, {"model": "core.episode", "pk": 595, "fields": {"episode_number": 4, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 60, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2002-09-04"}}, {"model": "core.episode", "pk": 596, "fields": {"episode_number": 5, "name": "Atoms are used within a program to denote distinguished values.", "season": 60, "description": "Ports are used to communicate with the external world.", "released_date": "2012-05-23"}}, {"model": "core.episode", "pk": 597, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 60, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2035-11-11"}}, {"model": "core.episode", "pk": 598, "fields": {"episode_number": 7, "name": "It is also a garbage-collected runtime system.", "season": 60, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2033-03-19"}}, {"model": "core.episode", "pk": 599, "fields": {"episode_number": 8, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 60, "description": "It is also a garbage-collected runtime system.", "released_date": "2024-10-31"}}, {"model": "core.episode", "pk": 600, "fields": {"episode_number": 9, "name": "Ports are created with the built-in function open_port.", "season": 60, "description": "It is also a garbage-collected runtime system.", "released_date": "2019-12-05"}}, {"model": "core.episode", "pk": 601, "fields": {"episode_number": 0, "name": "It is also a garbage-collected runtime system.", "season": 61, "description": "Ports are used to communicate with the external world.", "released_date": "2022-10-10"}}, {"model": "core.episode", "pk": 602, "fields": {"episode_number": 1, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 61, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2008-09-15"}}, {"model": "core.episode", "pk": 603, "fields": {"episode_number": 2, "name": "Where are my pants?", "season": 61, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2007-06-26"}}, {"model": "core.episode", "pk": 604, "fields": {"episode_number": 3, "name": "The arguments can be primitive data types or compound data types.", "season": 61, "description": "I don't even care.", "released_date": "2018-04-10"}}, {"model": "core.episode", "pk": 605, "fields": {"episode_number": 4, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 61, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2016-01-21"}}, {"model": "core.episode", "pk": 606, "fields": {"episode_number": 5, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 61, "description": "Make me a sandwich.", "released_date": "2032-12-17"}}, {"model": "core.episode", "pk": 607, "fields": {"episode_number": 6, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 61, "description": "I don't even care.", "released_date": "2034-10-09"}}, {"model": "core.episode", "pk": 608, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 61, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2016-03-30"}}, {"model": "core.episode", "pk": 609, "fields": {"episode_number": 8, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 61, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2011-09-17"}}, {"model": "core.episode", "pk": 610, "fields": {"episode_number": 9, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 61, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2015-05-26"}}, {"model": "core.episode", "pk": 611, "fields": {"episode_number": 0, "name": "Type classes first appeared in the Haskell programming language.", "season": 62, "description": "Ports are created with the built-in function open_port.", "released_date": "2022-12-30"}}, {"model": "core.episode", "pk": 612, "fields": {"episode_number": 1, "name": "Ports are used to communicate with the external world.", "season": 62, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2028-01-01"}}, {"model": "core.episode", "pk": 613, "fields": {"episode_number": 2, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 62, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2021-04-24"}}, {"model": "core.episode", "pk": 614, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 62, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2014-02-10"}}, {"model": "core.episode", "pk": 615, "fields": {"episode_number": 4, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 62, "description": "Do you come here often?", "released_date": "2005-04-08"}}, {"model": "core.episode", "pk": 616, "fields": {"episode_number": 5, "name": "Ports are created with the built-in function open_port.", "season": 62, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2007-02-18"}}, {"model": "core.episode", "pk": 617, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 62, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2015-03-03"}}, {"model": "core.episode", "pk": 618, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 62, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2004-10-05"}}, {"model": "core.episode", "pk": 619, "fields": {"episode_number": 8, "name": "Where are my pants?", "season": 62, "description": "Ports are created with the built-in function open_port.", "released_date": "2029-06-28"}}, {"model": "core.episode", "pk": 620, "fields": {"episode_number": 9, "name": "It is also a garbage-collected runtime system.", "season": 62, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2031-05-24"}}, {"model": "core.episode", "pk": 621, "fields": {"episode_number": 0, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 63, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2023-08-28"}}, {"model": "core.episode", "pk": 622, "fields": {"episode_number": 1, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 63, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2020-09-09"}}, {"model": "core.episode", "pk": 623, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 63, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2001-10-14"}}, {"model": "core.episode", "pk": 624, "fields": {"episode_number": 3, "name": "Ports are created with the built-in function open_port.", "season": 63, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2002-09-13"}}, {"model": "core.episode", "pk": 625, "fields": {"episode_number": 4, "name": "Erlang is known for its designs that are well suited for systems.", "season": 63, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2035-04-19"}}, {"model": "core.episode", "pk": 626, "fields": {"episode_number": 5, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 63, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2024-03-09"}}, {"model": "core.episode", "pk": 627, "fields": {"episode_number": 6, "name": "Ports are used to communicate with the external world.", "season": 63, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2006-12-12"}}, {"model": "core.episode", "pk": 628, "fields": {"episode_number": 7, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 63, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2012-08-19"}}, {"model": "core.episode", "pk": 629, "fields": {"episode_number": 8, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 63, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2001-10-14"}}, {"model": "core.episode", "pk": 630, "fields": {"episode_number": 9, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 63, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2019-02-03"}}, {"model": "core.episode", "pk": 631, "fields": {"episode_number": 0, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 64, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2032-03-11"}}, {"model": "core.episode", "pk": 632, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 64, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2007-06-21"}}, {"model": "core.episode", "pk": 633, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 64, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2026-09-29"}}, {"model": "core.episode", "pk": 634, "fields": {"episode_number": 3, "name": "Atoms are used within a program to denote distinguished values.", "season": 64, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2005-07-07"}}, {"model": "core.episode", "pk": 635, "fields": {"episode_number": 4, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 64, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2011-09-10"}}, {"model": "core.episode", "pk": 636, "fields": {"episode_number": 5, "name": "Erlang is known for its designs that are well suited for systems.", "season": 64, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2031-02-20"}}, {"model": "core.episode", "pk": 637, "fields": {"episode_number": 6, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 64, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2007-04-07"}}, {"model": "core.episode", "pk": 638, "fields": {"episode_number": 7, "name": "Do you come here often?", "season": 64, "description": "Do you have any idea why this is not working?", "released_date": "2002-07-29"}}, {"model": "core.episode", "pk": 639, "fields": {"episode_number": 8, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 64, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2025-03-20"}}, {"model": "core.episode", "pk": 640, "fields": {"episode_number": 9, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 64, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2028-09-28"}}, {"model": "core.episode", "pk": 641, "fields": {"episode_number": 0, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 65, "description": "Where are my pants?", "released_date": "2013-04-26"}}, {"model": "core.episode", "pk": 642, "fields": {"episode_number": 1, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 65, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2016-03-07"}}, {"model": "core.episode", "pk": 643, "fields": {"episode_number": 2, "name": "Do you have any idea why this is not working?", "season": 65, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2007-09-10"}}, {"model": "core.episode", "pk": 644, "fields": {"episode_number": 3, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 65, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2014-01-21"}}, {"model": "core.episode", "pk": 645, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 65, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2033-05-16"}}, {"model": "core.episode", "pk": 646, "fields": {"episode_number": 5, "name": "It is also a garbage-collected runtime system.", "season": 65, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2001-05-31"}}, {"model": "core.episode", "pk": 647, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 65, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2029-11-24"}}, {"model": "core.episode", "pk": 648, "fields": {"episode_number": 7, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 65, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2006-11-03"}}, {"model": "core.episode", "pk": 649, "fields": {"episode_number": 8, "name": "I don't even care.", "season": 65, "description": "Do you have any idea why this is not working?", "released_date": "2011-03-30"}}, {"model": "core.episode", "pk": 650, "fields": {"episode_number": 9, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 65, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2021-07-04"}}, {"model": "core.episode", "pk": 651, "fields": {"episode_number": 0, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 66, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2016-02-19"}}, {"model": "core.episode", "pk": 652, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 66, "description": "Where are my pants?", "released_date": "2014-09-21"}}, {"model": "core.episode", "pk": 653, "fields": {"episode_number": 2, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 66, "description": "It is also a garbage-collected runtime system.", "released_date": "2022-10-03"}}, {"model": "core.episode", "pk": 654, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 66, "description": "Do you come here often?", "released_date": "2017-01-01"}}, {"model": "core.episode", "pk": 655, "fields": {"episode_number": 4, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 66, "description": "Make me a sandwich.", "released_date": "2023-11-02"}}, {"model": "core.episode", "pk": 656, "fields": {"episode_number": 5, "name": "Atoms are used within a program to denote distinguished values.", "season": 66, "description": "Make me a sandwich.", "released_date": "2031-09-12"}}, {"model": "core.episode", "pk": 657, "fields": {"episode_number": 6, "name": "Where are my pants?", "season": 66, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2016-11-12"}}, {"model": "core.episode", "pk": 658, "fields": {"episode_number": 7, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 66, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2011-11-07"}}, {"model": "core.episode", "pk": 659, "fields": {"episode_number": 8, "name": "Do you have any idea why this is not working?", "season": 66, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2004-05-21"}}, {"model": "core.episode", "pk": 660, "fields": {"episode_number": 9, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 66, "description": "Ports are used to communicate with the external world.", "released_date": "2031-05-21"}}, {"model": "core.episode", "pk": 661, "fields": {"episode_number": 0, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 67, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2005-05-10"}}, {"model": "core.episode", "pk": 662, "fields": {"episode_number": 1, "name": "Ports are used to communicate with the external world.", "season": 67, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2017-01-15"}}, {"model": "core.episode", "pk": 663, "fields": {"episode_number": 2, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 67, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2004-09-02"}}, {"model": "core.episode", "pk": 664, "fields": {"episode_number": 3, "name": "Erlang is known for its designs that are well suited for systems.", "season": 67, "description": "Do you have any idea why this is not working?", "released_date": "2016-03-28"}}, {"model": "core.episode", "pk": 665, "fields": {"episode_number": 4, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 67, "description": "It is also a garbage-collected runtime system.", "released_date": "2007-01-31"}}, {"model": "core.episode", "pk": 666, "fields": {"episode_number": 5, "name": "Do you come here often?", "season": 67, "description": "Do you have any idea why this is not working?", "released_date": "2014-03-27"}}, {"model": "core.episode", "pk": 667, "fields": {"episode_number": 6, "name": "Ports are used to communicate with the external world.", "season": 67, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2007-04-27"}}, {"model": "core.episode", "pk": 668, "fields": {"episode_number": 7, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 67, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2007-11-15"}}, {"model": "core.episode", "pk": 669, "fields": {"episode_number": 8, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 67, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2021-10-24"}}, {"model": "core.episode", "pk": 670, "fields": {"episode_number": 9, "name": "Ports are created with the built-in function open_port.", "season": 67, "description": "Make me a sandwich.", "released_date": "2028-06-27"}}, {"model": "core.episode", "pk": 671, "fields": {"episode_number": 0, "name": "I don't even care.", "season": 68, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2002-08-12"}}, {"model": "core.episode", "pk": 672, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 68, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2007-06-26"}}, {"model": "core.episode", "pk": 673, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 68, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2030-01-16"}}, {"model": "core.episode", "pk": 674, "fields": {"episode_number": 3, "name": "Ports are created with the built-in function open_port.", "season": 68, "description": "Do you come here often?", "released_date": "2002-03-18"}}, {"model": "core.episode", "pk": 675, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 68, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2011-11-19"}}, {"model": "core.episode", "pk": 676, "fields": {"episode_number": 5, "name": "Type classes first appeared in the Haskell programming language.", "season": 68, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2024-08-31"}}, {"model": "core.episode", "pk": 677, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 68, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2015-02-11"}}, {"model": "core.episode", "pk": 678, "fields": {"episode_number": 7, "name": "The arguments can be primitive data types or compound data types.", "season": 68, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2004-07-18"}}, {"model": "core.episode", "pk": 679, "fields": {"episode_number": 8, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 68, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2007-05-23"}}, {"model": "core.episode", "pk": 680, "fields": {"episode_number": 9, "name": "Type classes first appeared in the Haskell programming language.", "season": 68, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2020-10-21"}}, {"model": "core.episode", "pk": 681, "fields": {"episode_number": 0, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 69, "description": "I don't even care.", "released_date": "2004-02-08"}}, {"model": "core.episode", "pk": 682, "fields": {"episode_number": 1, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 69, "description": "Make me a sandwich.", "released_date": "2020-11-01"}}, {"model": "core.episode", "pk": 683, "fields": {"episode_number": 2, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 69, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2027-04-04"}}, {"model": "core.episode", "pk": 684, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 69, "description": "Make me a sandwich.", "released_date": "2000-04-18"}}, {"model": "core.episode", "pk": 685, "fields": {"episode_number": 4, "name": "Do you have any idea why this is not working?", "season": 69, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2001-03-03"}}, {"model": "core.episode", "pk": 686, "fields": {"episode_number": 5, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 69, "description": "Do you have any idea why this is not working?", "released_date": "2027-09-11"}}, {"model": "core.episode", "pk": 687, "fields": {"episode_number": 6, "name": "It is also a garbage-collected runtime system.", "season": 69, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2018-10-02"}}, {"model": "core.episode", "pk": 688, "fields": {"episode_number": 7, "name": "Do you come here often?", "season": 69, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2022-01-08"}}, {"model": "core.episode", "pk": 689, "fields": {"episode_number": 8, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 69, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2016-07-22"}}, {"model": "core.episode", "pk": 690, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 69, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2006-05-27"}}, {"model": "core.episode", "pk": 691, "fields": {"episode_number": 0, "name": "Ports are created with the built-in function open_port.", "season": 70, "description": "I don't even care.", "released_date": "2033-02-27"}}, {"model": "core.episode", "pk": 692, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 70, "description": "Do you have any idea why this is not working?", "released_date": "2008-10-14"}}, {"model": "core.episode", "pk": 693, "fields": {"episode_number": 2, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 70, "description": "Do you have any idea why this is not working?", "released_date": "2014-06-12"}}, {"model": "core.episode", "pk": 694, "fields": {"episode_number": 3, "name": "Do you come here often?", "season": 70, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2023-05-06"}}, {"model": "core.episode", "pk": 695, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 70, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2001-02-06"}}, {"model": "core.episode", "pk": 696, "fields": {"episode_number": 5, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 70, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2015-02-14"}}, {"model": "core.episode", "pk": 697, "fields": {"episode_number": 6, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 70, "description": "Ports are created with the built-in function open_port.", "released_date": "2004-09-14"}}, {"model": "core.episode", "pk": 698, "fields": {"episode_number": 7, "name": "Type classes first appeared in the Haskell programming language.", "season": 70, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2005-02-10"}}, {"model": "core.episode", "pk": 699, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 70, "description": "Do you come here often?", "released_date": "2034-03-20"}}, {"model": "core.episode", "pk": 700, "fields": {"episode_number": 9, "name": "Make me a sandwich.", "season": 70, "description": "Where are my pants?", "released_date": "2016-01-06"}}, {"model": "core.episode", "pk": 701, "fields": {"episode_number": 0, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 71, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2000-03-19"}}, {"model": "core.episode", "pk": 702, "fields": {"episode_number": 1, "name": "Where are my pants?", "season": 71, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2027-01-13"}}, {"model": "core.episode", "pk": 703, "fields": {"episode_number": 2, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 71, "description": "I don't even care.", "released_date": "2009-10-14"}}, {"model": "core.episode", "pk": 704, "fields": {"episode_number": 3, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 71, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2026-01-02"}}, {"model": "core.episode", "pk": 705, "fields": {"episode_number": 4, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 71, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2032-10-08"}}, {"model": "core.episode", "pk": 706, "fields": {"episode_number": 5, "name": "Ports are created with the built-in function open_port.", "season": 71, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2005-03-24"}}, {"model": "core.episode", "pk": 707, "fields": {"episode_number": 6, "name": "Ports are created with the built-in function open_port.", "season": 71, "description": "I don't even care.", "released_date": "2009-07-03"}}, {"model": "core.episode", "pk": 708, "fields": {"episode_number": 7, "name": "Make me a sandwich.", "season": 71, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2003-10-02"}}, {"model": "core.episode", "pk": 709, "fields": {"episode_number": 8, "name": "I don't even care.", "season": 71, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2010-12-17"}}, {"model": "core.episode", "pk": 710, "fields": {"episode_number": 9, "name": "Do you come here often?", "season": 71, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2030-10-12"}}, {"model": "core.episode", "pk": 711, "fields": {"episode_number": 0, "name": "Make me a sandwich.", "season": 72, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2017-02-27"}}, {"model": "core.episode", "pk": 712, "fields": {"episode_number": 1, "name": "Do you come here often?", "season": 72, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2004-12-20"}}, {"model": "core.episode", "pk": 713, "fields": {"episode_number": 2, "name": "Where are my pants?", "season": 72, "description": "Ports are used to communicate with the external world.", "released_date": "2015-02-28"}}, {"model": "core.episode", "pk": 714, "fields": {"episode_number": 3, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 72, "description": "Where are my pants?", "released_date": "2015-05-19"}}, {"model": "core.episode", "pk": 715, "fields": {"episode_number": 4, "name": "Do you come here often?", "season": 72, "description": "Where are my pants?", "released_date": "2023-12-21"}}, {"model": "core.episode", "pk": 716, "fields": {"episode_number": 5, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 72, "description": "Where are my pants?", "released_date": "2016-08-08"}}, {"model": "core.episode", "pk": 717, "fields": {"episode_number": 6, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 72, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2016-07-04"}}, {"model": "core.episode", "pk": 718, "fields": {"episode_number": 7, "name": "Any element of a tuple can be accessed in constant time.", "season": 72, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2007-03-27"}}, {"model": "core.episode", "pk": 719, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 72, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2027-04-08"}}, {"model": "core.episode", "pk": 720, "fields": {"episode_number": 9, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 72, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2016-02-09"}}, {"model": "core.episode", "pk": 721, "fields": {"episode_number": 0, "name": "Atoms are used within a program to denote distinguished values.", "season": 73, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2019-11-16"}}, {"model": "core.episode", "pk": 722, "fields": {"episode_number": 1, "name": "Erlang is known for its designs that are well suited for systems.", "season": 73, "description": "Make me a sandwich.", "released_date": "2006-05-18"}}, {"model": "core.episode", "pk": 723, "fields": {"episode_number": 2, "name": "Atoms are used within a program to denote distinguished values.", "season": 73, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2011-05-09"}}, {"model": "core.episode", "pk": 724, "fields": {"episode_number": 3, "name": "Where are my pants?", "season": 73, "description": "Ports are used to communicate with the external world.", "released_date": "2016-06-14"}}, {"model": "core.episode", "pk": 725, "fields": {"episode_number": 4, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 73, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2028-05-30"}}, {"model": "core.episode", "pk": 726, "fields": {"episode_number": 5, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 73, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2004-07-28"}}, {"model": "core.episode", "pk": 727, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 73, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2029-02-28"}}, {"model": "core.episode", "pk": 728, "fields": {"episode_number": 7, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 73, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2015-06-14"}}, {"model": "core.episode", "pk": 729, "fields": {"episode_number": 8, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 73, "description": "Do you have any idea why this is not working?", "released_date": "2001-09-12"}}, {"model": "core.episode", "pk": 730, "fields": {"episode_number": 9, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 73, "description": "Make me a sandwich.", "released_date": "2023-09-19"}}, {"model": "core.episode", "pk": 731, "fields": {"episode_number": 0, "name": "The arguments can be primitive data types or compound data types.", "season": 74, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2011-03-29"}}, {"model": "core.episode", "pk": 732, "fields": {"episode_number": 1, "name": "The arguments can be primitive data types or compound data types.", "season": 74, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2031-11-15"}}, {"model": "core.episode", "pk": 733, "fields": {"episode_number": 2, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 74, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2005-09-02"}}, {"model": "core.episode", "pk": 734, "fields": {"episode_number": 3, "name": "Ports are used to communicate with the external world.", "season": 74, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2013-11-09"}}, {"model": "core.episode", "pk": 735, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 74, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2014-10-23"}}, {"model": "core.episode", "pk": 736, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 74, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2004-06-03"}}, {"model": "core.episode", "pk": 737, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 74, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2019-07-08"}}, {"model": "core.episode", "pk": 738, "fields": {"episode_number": 7, "name": "Erlang is known for its designs that are well suited for systems.", "season": 74, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2009-11-11"}}, {"model": "core.episode", "pk": 739, "fields": {"episode_number": 8, "name": "Do you have any idea why this is not working?", "season": 74, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2007-01-17"}}, {"model": "core.episode", "pk": 740, "fields": {"episode_number": 9, "name": "Where are my pants?", "season": 74, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2007-11-05"}}, {"model": "core.episode", "pk": 741, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 75, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2027-06-24"}}, {"model": "core.episode", "pk": 742, "fields": {"episode_number": 1, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 75, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2006-12-18"}}, {"model": "core.episode", "pk": 743, "fields": {"episode_number": 2, "name": "Make me a sandwich.", "season": 75, "description": "It is also a garbage-collected runtime system.", "released_date": "2002-05-17"}}, {"model": "core.episode", "pk": 744, "fields": {"episode_number": 3, "name": "Make me a sandwich.", "season": 75, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2027-09-24"}}, {"model": "core.episode", "pk": 745, "fields": {"episode_number": 4, "name": "Erlang is known for its designs that are well suited for systems.", "season": 75, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2007-11-30"}}, {"model": "core.episode", "pk": 746, "fields": {"episode_number": 5, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 75, "description": "Do you come here often?", "released_date": "2006-11-29"}}, {"model": "core.episode", "pk": 747, "fields": {"episode_number": 6, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 75, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2023-01-28"}}, {"model": "core.episode", "pk": 748, "fields": {"episode_number": 7, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 75, "description": "Ports are created with the built-in function open_port.", "released_date": "2022-07-17"}}, {"model": "core.episode", "pk": 749, "fields": {"episode_number": 8, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 75, "description": "Make me a sandwich.", "released_date": "2011-01-22"}}, {"model": "core.episode", "pk": 750, "fields": {"episode_number": 9, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 75, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2035-04-14"}}, {"model": "core.episode", "pk": 751, "fields": {"episode_number": 0, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 76, "description": "Make me a sandwich.", "released_date": "2004-06-12"}}, {"model": "core.episode", "pk": 752, "fields": {"episode_number": 1, "name": "Any element of a tuple can be accessed in constant time.", "season": 76, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2008-02-11"}}, {"model": "core.episode", "pk": 753, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 76, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2010-02-21"}}, {"model": "core.episode", "pk": 754, "fields": {"episode_number": 3, "name": "Type classes first appeared in the Haskell programming language.", "season": 76, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2012-04-22"}}, {"model": "core.episode", "pk": 755, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 76, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2001-04-06"}}, {"model": "core.episode", "pk": 756, "fields": {"episode_number": 5, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 76, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2007-06-09"}}, {"model": "core.episode", "pk": 757, "fields": {"episode_number": 6, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 76, "description": "Do you come here often?", "released_date": "2015-05-09"}}, {"model": "core.episode", "pk": 758, "fields": {"episode_number": 7, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 76, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2003-02-12"}}, {"model": "core.episode", "pk": 759, "fields": {"episode_number": 8, "name": "Type classes first appeared in the Haskell programming language.", "season": 76, "description": "Ports are created with the built-in function open_port.", "released_date": "2025-06-20"}}, {"model": "core.episode", "pk": 760, "fields": {"episode_number": 9, "name": "Any element of a tuple can be accessed in constant time.", "season": 76, "description": "Make me a sandwich.", "released_date": "2006-07-13"}}, {"model": "core.episode", "pk": 761, "fields": {"episode_number": 0, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 77, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2017-07-08"}}, {"model": "core.episode", "pk": 762, "fields": {"episode_number": 1, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 77, "description": "Do you have any idea why this is not working?", "released_date": "2005-01-07"}}, {"model": "core.episode", "pk": 763, "fields": {"episode_number": 2, "name": "Ports are created with the built-in function open_port.", "season": 77, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2028-10-11"}}, {"model": "core.episode", "pk": 764, "fields": {"episode_number": 3, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 77, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2015-09-25"}}, {"model": "core.episode", "pk": 765, "fields": {"episode_number": 4, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 77, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2007-10-22"}}, {"model": "core.episode", "pk": 766, "fields": {"episode_number": 5, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 77, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2027-05-13"}}, {"model": "core.episode", "pk": 767, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 77, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2010-04-28"}}, {"model": "core.episode", "pk": 768, "fields": {"episode_number": 7, "name": "The arguments can be primitive data types or compound data types.", "season": 77, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2012-02-11"}}, {"model": "core.episode", "pk": 769, "fields": {"episode_number": 8, "name": "I don't even care.", "season": 77, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2012-07-12"}}, {"model": "core.episode", "pk": 770, "fields": {"episode_number": 9, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 77, "description": "Ports are created with the built-in function open_port.", "released_date": "2032-04-25"}}, {"model": "core.episode", "pk": 771, "fields": {"episode_number": 0, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 78, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2004-10-02"}}, {"model": "core.episode", "pk": 772, "fields": {"episode_number": 1, "name": "Ports are used to communicate with the external world.", "season": 78, "description": "I don't even care.", "released_date": "2027-07-12"}}, {"model": "core.episode", "pk": 773, "fields": {"episode_number": 2, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 78, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2010-09-21"}}, {"model": "core.episode", "pk": 774, "fields": {"episode_number": 3, "name": "Make me a sandwich.", "season": 78, "description": "It is also a garbage-collected runtime system.", "released_date": "2006-10-23"}}, {"model": "core.episode", "pk": 775, "fields": {"episode_number": 4, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 78, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2010-06-07"}}, {"model": "core.episode", "pk": 776, "fields": {"episode_number": 5, "name": "Any element of a tuple can be accessed in constant time.", "season": 78, "description": "Ports are used to communicate with the external world.", "released_date": "2030-10-12"}}, {"model": "core.episode", "pk": 777, "fields": {"episode_number": 6, "name": "Type classes first appeared in the Haskell programming language.", "season": 78, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2032-09-19"}}, {"model": "core.episode", "pk": 778, "fields": {"episode_number": 7, "name": "Ports are created with the built-in function open_port.", "season": 78, "description": "Ports are used to communicate with the external world.", "released_date": "2022-09-14"}}, {"model": "core.episode", "pk": 779, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 78, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2000-05-14"}}, {"model": "core.episode", "pk": 780, "fields": {"episode_number": 9, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 78, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2018-10-09"}}, {"model": "core.episode", "pk": 781, "fields": {"episode_number": 0, "name": "It is also a garbage-collected runtime system.", "season": 79, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2010-04-15"}}, {"model": "core.episode", "pk": 782, "fields": {"episode_number": 1, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 79, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2015-10-28"}}, {"model": "core.episode", "pk": 783, "fields": {"episode_number": 2, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 79, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2022-12-19"}}, {"model": "core.episode", "pk": 784, "fields": {"episode_number": 3, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 79, "description": "Do you come here often?", "released_date": "2033-04-02"}}, {"model": "core.episode", "pk": 785, "fields": {"episode_number": 4, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 79, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2021-01-01"}}, {"model": "core.episode", "pk": 786, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 79, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2031-12-06"}}, {"model": "core.episode", "pk": 787, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 79, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2003-07-30"}}, {"model": "core.episode", "pk": 788, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 79, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2017-08-07"}}, {"model": "core.episode", "pk": 789, "fields": {"episode_number": 8, "name": "Atoms are used within a program to denote distinguished values.", "season": 79, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2000-01-12"}}, {"model": "core.episode", "pk": 790, "fields": {"episode_number": 9, "name": "Ports are used to communicate with the external world.", "season": 79, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2019-10-23"}}, {"model": "core.episode", "pk": 791, "fields": {"episode_number": 0, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 80, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2035-11-30"}}, {"model": "core.episode", "pk": 792, "fields": {"episode_number": 1, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 80, "description": "Ports are used to communicate with the external world.", "released_date": "2018-02-23"}}, {"model": "core.episode", "pk": 793, "fields": {"episode_number": 2, "name": "Any element of a tuple can be accessed in constant time.", "season": 80, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2004-09-07"}}, {"model": "core.episode", "pk": 794, "fields": {"episode_number": 3, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 80, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2021-06-07"}}, {"model": "core.episode", "pk": 795, "fields": {"episode_number": 4, "name": "I don't even care.", "season": 80, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2031-08-11"}}, {"model": "core.episode", "pk": 796, "fields": {"episode_number": 5, "name": "Type classes first appeared in the Haskell programming language.", "season": 80, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2030-10-22"}}, {"model": "core.episode", "pk": 797, "fields": {"episode_number": 6, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 80, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2020-08-19"}}, {"model": "core.episode", "pk": 798, "fields": {"episode_number": 7, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 80, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2007-05-17"}}, {"model": "core.episode", "pk": 799, "fields": {"episode_number": 8, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 80, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2015-09-01"}}, {"model": "core.episode", "pk": 800, "fields": {"episode_number": 9, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 80, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2029-08-30"}}, {"model": "core.episode", "pk": 801, "fields": {"episode_number": 0, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 81, "description": "Do you have any idea why this is not working?", "released_date": "2017-02-14"}}, {"model": "core.episode", "pk": 802, "fields": {"episode_number": 1, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 81, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2009-05-28"}}, {"model": "core.episode", "pk": 803, "fields": {"episode_number": 2, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 81, "description": "Do you come here often?", "released_date": "2027-08-02"}}, {"model": "core.episode", "pk": 804, "fields": {"episode_number": 3, "name": "Make me a sandwich.", "season": 81, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2034-03-16"}}, {"model": "core.episode", "pk": 805, "fields": {"episode_number": 4, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 81, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2023-01-17"}}, {"model": "core.episode", "pk": 806, "fields": {"episode_number": 5, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 81, "description": "Where are my pants?", "released_date": "2011-09-09"}}, {"model": "core.episode", "pk": 807, "fields": {"episode_number": 6, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 81, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2007-06-28"}}, {"model": "core.episode", "pk": 808, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 81, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2008-11-14"}}, {"model": "core.episode", "pk": 809, "fields": {"episode_number": 8, "name": "Atoms are used within a program to denote distinguished values.", "season": 81, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2031-08-31"}}, {"model": "core.episode", "pk": 810, "fields": {"episode_number": 9, "name": "Any element of a tuple can be accessed in constant time.", "season": 81, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2007-07-31"}}, {"model": "core.episode", "pk": 811, "fields": {"episode_number": 0, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 82, "description": "Ports are created with the built-in function open_port.", "released_date": "2002-01-11"}}, {"model": "core.episode", "pk": 812, "fields": {"episode_number": 1, "name": "It is also a garbage-collected runtime system.", "season": 82, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2005-01-29"}}, {"model": "core.episode", "pk": 813, "fields": {"episode_number": 2, "name": "Ports are created with the built-in function open_port.", "season": 82, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2009-10-26"}}, {"model": "core.episode", "pk": 814, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 82, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2032-06-14"}}, {"model": "core.episode", "pk": 815, "fields": {"episode_number": 4, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 82, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2007-12-04"}}, {"model": "core.episode", "pk": 816, "fields": {"episode_number": 5, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 82, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2033-06-28"}}, {"model": "core.episode", "pk": 817, "fields": {"episode_number": 6, "name": "Any element of a tuple can be accessed in constant time.", "season": 82, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2023-09-01"}}, {"model": "core.episode", "pk": 818, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 82, "description": "It is also a garbage-collected runtime system.", "released_date": "2000-04-19"}}, {"model": "core.episode", "pk": 819, "fields": {"episode_number": 8, "name": "Erlang is known for its designs that are well suited for systems.", "season": 82, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2005-10-11"}}, {"model": "core.episode", "pk": 820, "fields": {"episode_number": 9, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 82, "description": "Do you come here often?", "released_date": "2027-02-01"}}, {"model": "core.episode", "pk": 821, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 83, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2029-02-09"}}, {"model": "core.episode", "pk": 822, "fields": {"episode_number": 1, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 83, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2012-02-04"}}, {"model": "core.episode", "pk": 823, "fields": {"episode_number": 2, "name": "Atoms are used within a program to denote distinguished values.", "season": 83, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2018-02-15"}}, {"model": "core.episode", "pk": 824, "fields": {"episode_number": 3, "name": "Erlang is known for its designs that are well suited for systems.", "season": 83, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2020-03-30"}}, {"model": "core.episode", "pk": 825, "fields": {"episode_number": 4, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 83, "description": "Where are my pants?", "released_date": "2029-02-15"}}, {"model": "core.episode", "pk": 826, "fields": {"episode_number": 5, "name": "Make me a sandwich.", "season": 83, "description": "Ports are used to communicate with the external world.", "released_date": "2023-12-06"}}, {"model": "core.episode", "pk": 827, "fields": {"episode_number": 6, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 83, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2033-10-24"}}, {"model": "core.episode", "pk": 828, "fields": {"episode_number": 7, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 83, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2016-07-10"}}, {"model": "core.episode", "pk": 829, "fields": {"episode_number": 8, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 83, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2003-02-24"}}, {"model": "core.episode", "pk": 830, "fields": {"episode_number": 9, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 83, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2008-05-30"}}, {"model": "core.episode", "pk": 831, "fields": {"episode_number": 0, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 84, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2005-11-21"}}, {"model": "core.episode", "pk": 832, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 84, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2006-10-06"}}, {"model": "core.episode", "pk": 833, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 84, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2003-12-01"}}, {"model": "core.episode", "pk": 834, "fields": {"episode_number": 3, "name": "Ports are created with the built-in function open_port.", "season": 84, "description": "It is also a garbage-collected runtime system.", "released_date": "2029-04-11"}}, {"model": "core.episode", "pk": 835, "fields": {"episode_number": 4, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 84, "description": "Make me a sandwich.", "released_date": "2017-01-23"}}, {"model": "core.episode", "pk": 836, "fields": {"episode_number": 5, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 84, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2002-11-11"}}, {"model": "core.episode", "pk": 837, "fields": {"episode_number": 6, "name": "Ports are created with the built-in function open_port.", "season": 84, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2017-04-18"}}, {"model": "core.episode", "pk": 838, "fields": {"episode_number": 7, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 84, "description": "I don't even care.", "released_date": "2026-06-25"}}, {"model": "core.episode", "pk": 839, "fields": {"episode_number": 8, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 84, "description": "Do you come here often?", "released_date": "2017-09-10"}}, {"model": "core.episode", "pk": 840, "fields": {"episode_number": 9, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 84, "description": "Ports are used to communicate with the external world.", "released_date": "2014-06-26"}}, {"model": "core.episode", "pk": 841, "fields": {"episode_number": 0, "name": "Atoms are used within a program to denote distinguished values.", "season": 85, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2032-12-03"}}, {"model": "core.episode", "pk": 842, "fields": {"episode_number": 1, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 85, "description": "Make me a sandwich.", "released_date": "2001-11-08"}}, {"model": "core.episode", "pk": 843, "fields": {"episode_number": 2, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 85, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2030-07-27"}}, {"model": "core.episode", "pk": 844, "fields": {"episode_number": 3, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 85, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2007-03-06"}}, {"model": "core.episode", "pk": 845, "fields": {"episode_number": 4, "name": "It is also a garbage-collected runtime system.", "season": 85, "description": "Where are my pants?", "released_date": "2034-04-04"}}, {"model": "core.episode", "pk": 846, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 85, "description": "Make me a sandwich.", "released_date": "2031-12-31"}}, {"model": "core.episode", "pk": 847, "fields": {"episode_number": 6, "name": "Make me a sandwich.", "season": 85, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2008-08-24"}}, {"model": "core.episode", "pk": 848, "fields": {"episode_number": 7, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 85, "description": "It is also a garbage-collected runtime system.", "released_date": "2030-11-07"}}, {"model": "core.episode", "pk": 849, "fields": {"episode_number": 8, "name": "Atoms are used within a program to denote distinguished values.", "season": 85, "description": "Ports are used to communicate with the external world.", "released_date": "2017-04-14"}}, {"model": "core.episode", "pk": 850, "fields": {"episode_number": 9, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 85, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2008-07-05"}}, {"model": "core.episode", "pk": 851, "fields": {"episode_number": 0, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 86, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2021-04-01"}}, {"model": "core.episode", "pk": 852, "fields": {"episode_number": 1, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 86, "description": "Do you come here often?", "released_date": "2000-06-19"}}, {"model": "core.episode", "pk": 853, "fields": {"episode_number": 2, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 86, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2023-06-09"}}, {"model": "core.episode", "pk": 854, "fields": {"episode_number": 3, "name": "Do you have any idea why this is not working?", "season": 86, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2013-08-14"}}, {"model": "core.episode", "pk": 855, "fields": {"episode_number": 4, "name": "Where are my pants?", "season": 86, "description": "Make me a sandwich.", "released_date": "2033-08-24"}}, {"model": "core.episode", "pk": 856, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 86, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2024-02-11"}}, {"model": "core.episode", "pk": 857, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 86, "description": "Where are my pants?", "released_date": "2010-09-23"}}, {"model": "core.episode", "pk": 858, "fields": {"episode_number": 7, "name": "I don't even care.", "season": 86, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2012-03-14"}}, {"model": "core.episode", "pk": 859, "fields": {"episode_number": 8, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 86, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2017-01-03"}}, {"model": "core.episode", "pk": 860, "fields": {"episode_number": 9, "name": "Ports are used to communicate with the external world.", "season": 86, "description": "Ports are created with the built-in function open_port.", "released_date": "2012-01-17"}}, {"model": "core.episode", "pk": 861, "fields": {"episode_number": 0, "name": "Any element of a tuple can be accessed in constant time.", "season": 87, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2029-08-26"}}, {"model": "core.episode", "pk": 862, "fields": {"episode_number": 1, "name": "Erlang is known for its designs that are well suited for systems.", "season": 87, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2027-09-20"}}, {"model": "core.episode", "pk": 863, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 87, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2003-07-02"}}, {"model": "core.episode", "pk": 864, "fields": {"episode_number": 3, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 87, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2013-10-21"}}, {"model": "core.episode", "pk": 865, "fields": {"episode_number": 4, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 87, "description": "I don't even care.", "released_date": "2003-10-12"}}, {"model": "core.episode", "pk": 866, "fields": {"episode_number": 5, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 87, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2029-05-31"}}, {"model": "core.episode", "pk": 867, "fields": {"episode_number": 6, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 87, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2027-07-25"}}, {"model": "core.episode", "pk": 868, "fields": {"episode_number": 7, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 87, "description": "Where are my pants?", "released_date": "2004-09-20"}}, {"model": "core.episode", "pk": 869, "fields": {"episode_number": 8, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 87, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2008-07-04"}}, {"model": "core.episode", "pk": 870, "fields": {"episode_number": 9, "name": "Do you come here often?", "season": 87, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2027-01-28"}}, {"model": "core.episode", "pk": 871, "fields": {"episode_number": 0, "name": "Make me a sandwich.", "season": 88, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2001-01-04"}}, {"model": "core.episode", "pk": 872, "fields": {"episode_number": 1, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 88, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2015-07-17"}}, {"model": "core.episode", "pk": 873, "fields": {"episode_number": 2, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 88, "description": "Ports are created with the built-in function open_port.", "released_date": "2031-12-07"}}, {"model": "core.episode", "pk": 874, "fields": {"episode_number": 3, "name": "The arguments can be primitive data types or compound data types.", "season": 88, "description": "I don't even care.", "released_date": "2013-07-06"}}, {"model": "core.episode", "pk": 875, "fields": {"episode_number": 4, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 88, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2015-04-19"}}, {"model": "core.episode", "pk": 876, "fields": {"episode_number": 5, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 88, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2024-01-03"}}, {"model": "core.episode", "pk": 877, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 88, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2015-10-04"}}, {"model": "core.episode", "pk": 878, "fields": {"episode_number": 7, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 88, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2010-02-14"}}, {"model": "core.episode", "pk": 879, "fields": {"episode_number": 8, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 88, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2003-12-04"}}, {"model": "core.episode", "pk": 880, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 88, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2009-04-18"}}, {"model": "core.episode", "pk": 881, "fields": {"episode_number": 0, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 89, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2004-03-02"}}, {"model": "core.episode", "pk": 882, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 89, "description": "Ports are created with the built-in function open_port.", "released_date": "2027-12-04"}}, {"model": "core.episode", "pk": 883, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 89, "description": "Ports are created with the built-in function open_port.", "released_date": "2010-10-05"}}, {"model": "core.episode", "pk": 884, "fields": {"episode_number": 3, "name": "Type classes first appeared in the Haskell programming language.", "season": 89, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2013-05-13"}}, {"model": "core.episode", "pk": 885, "fields": {"episode_number": 4, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 89, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2000-03-03"}}, {"model": "core.episode", "pk": 886, "fields": {"episode_number": 5, "name": "Ports are created with the built-in function open_port.", "season": 89, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2019-07-15"}}, {"model": "core.episode", "pk": 887, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 89, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2024-05-11"}}, {"model": "core.episode", "pk": 888, "fields": {"episode_number": 7, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 89, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2029-12-10"}}, {"model": "core.episode", "pk": 889, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 89, "description": "Do you have any idea why this is not working?", "released_date": "2032-02-16"}}, {"model": "core.episode", "pk": 890, "fields": {"episode_number": 9, "name": "It is also a garbage-collected runtime system.", "season": 89, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2009-04-30"}}, {"model": "core.episode", "pk": 891, "fields": {"episode_number": 0, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 90, "description": "I don't even care.", "released_date": "2021-12-02"}}, {"model": "core.episode", "pk": 892, "fields": {"episode_number": 1, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 90, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2004-08-11"}}, {"model": "core.episode", "pk": 893, "fields": {"episode_number": 2, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 90, "description": "Make me a sandwich.", "released_date": "2002-01-16"}}, {"model": "core.episode", "pk": 894, "fields": {"episode_number": 3, "name": "Do you come here often?", "season": 90, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2015-10-18"}}, {"model": "core.episode", "pk": 895, "fields": {"episode_number": 4, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 90, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2001-10-19"}}, {"model": "core.episode", "pk": 896, "fields": {"episode_number": 5, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 90, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2026-02-07"}}, {"model": "core.episode", "pk": 897, "fields": {"episode_number": 6, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 90, "description": "Ports are used to communicate with the external world.", "released_date": "2028-06-26"}}, {"model": "core.episode", "pk": 898, "fields": {"episode_number": 7, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 90, "description": "Where are my pants?", "released_date": "2002-03-09"}}, {"model": "core.episode", "pk": 899, "fields": {"episode_number": 8, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 90, "description": "It is also a garbage-collected runtime system.", "released_date": "2003-12-01"}}, {"model": "core.episode", "pk": 900, "fields": {"episode_number": 9, "name": "Make me a sandwich.", "season": 90, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2003-02-04"}}, {"model": "core.episode", "pk": 901, "fields": {"episode_number": 0, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 91, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2020-05-11"}}, {"model": "core.episode", "pk": 902, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 91, "description": "Make me a sandwich.", "released_date": "2003-06-19"}}, {"model": "core.episode", "pk": 903, "fields": {"episode_number": 2, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 91, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2006-10-26"}}, {"model": "core.episode", "pk": 904, "fields": {"episode_number": 3, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 91, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2000-01-29"}}, {"model": "core.episode", "pk": 905, "fields": {"episode_number": 4, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 91, "description": "Where are my pants?", "released_date": "2020-12-01"}}, {"model": "core.episode", "pk": 906, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 91, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2025-06-30"}}, {"model": "core.episode", "pk": 907, "fields": {"episode_number": 6, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 91, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2001-07-15"}}, {"model": "core.episode", "pk": 908, "fields": {"episode_number": 7, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 91, "description": "I don't even care.", "released_date": "2031-03-22"}}, {"model": "core.episode", "pk": 909, "fields": {"episode_number": 8, "name": "Erlang is known for its designs that are well suited for systems.", "season": 91, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2012-11-13"}}, {"model": "core.episode", "pk": 910, "fields": {"episode_number": 9, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 91, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2006-08-13"}}, {"model": "core.episode", "pk": 911, "fields": {"episode_number": 0, "name": "Any element of a tuple can be accessed in constant time.", "season": 92, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2017-09-02"}}, {"model": "core.episode", "pk": 912, "fields": {"episode_number": 1, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 92, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2020-08-29"}}, {"model": "core.episode", "pk": 913, "fields": {"episode_number": 2, "name": "Ports are used to communicate with the external world.", "season": 92, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2003-01-18"}}, {"model": "core.episode", "pk": 914, "fields": {"episode_number": 3, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 92, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2018-07-16"}}, {"model": "core.episode", "pk": 915, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 92, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2032-01-23"}}, {"model": "core.episode", "pk": 916, "fields": {"episode_number": 5, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 92, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2003-02-05"}}, {"model": "core.episode", "pk": 917, "fields": {"episode_number": 6, "name": "Where are my pants?", "season": 92, "description": "Ports are created with the built-in function open_port.", "released_date": "2002-11-19"}}, {"model": "core.episode", "pk": 918, "fields": {"episode_number": 7, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 92, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2019-03-17"}}, {"model": "core.episode", "pk": 919, "fields": {"episode_number": 8, "name": "Any element of a tuple can be accessed in constant time.", "season": 92, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2029-04-22"}}, {"model": "core.episode", "pk": 920, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 92, "description": "It is also a garbage-collected runtime system.", "released_date": "2006-08-23"}}, {"model": "core.episode", "pk": 921, "fields": {"episode_number": 0, "name": "The arguments can be primitive data types or compound data types.", "season": 93, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2006-12-21"}}, {"model": "core.episode", "pk": 922, "fields": {"episode_number": 1, "name": "Ports are created with the built-in function open_port.", "season": 93, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2029-03-17"}}, {"model": "core.episode", "pk": 923, "fields": {"episode_number": 2, "name": "Atoms are used within a program to denote distinguished values.", "season": 93, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2031-12-30"}}, {"model": "core.episode", "pk": 924, "fields": {"episode_number": 3, "name": "Erlang is known for its designs that are well suited for systems.", "season": 93, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2013-05-04"}}, {"model": "core.episode", "pk": 925, "fields": {"episode_number": 4, "name": "Ports are used to communicate with the external world.", "season": 93, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2034-12-17"}}, {"model": "core.episode", "pk": 926, "fields": {"episode_number": 5, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 93, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2032-11-07"}}, {"model": "core.episode", "pk": 927, "fields": {"episode_number": 6, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 93, "description": "Ports are created with the built-in function open_port.", "released_date": "2027-06-12"}}, {"model": "core.episode", "pk": 928, "fields": {"episode_number": 7, "name": "Ports are used to communicate with the external world.", "season": 93, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2002-08-06"}}, {"model": "core.episode", "pk": 929, "fields": {"episode_number": 8, "name": "Ports are created with the built-in function open_port.", "season": 93, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2034-04-20"}}, {"model": "core.episode", "pk": 930, "fields": {"episode_number": 9, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 93, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2019-02-07"}}, {"model": "core.episode", "pk": 931, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 94, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2005-11-23"}}, {"model": "core.episode", "pk": 932, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 94, "description": "I don't even care.", "released_date": "2012-07-04"}}, {"model": "core.episode", "pk": 933, "fields": {"episode_number": 2, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 94, "description": "Do you come here often?", "released_date": "2003-05-02"}}, {"model": "core.episode", "pk": 934, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 94, "description": "Where are my pants?", "released_date": "2028-06-25"}}, {"model": "core.episode", "pk": 935, "fields": {"episode_number": 4, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 94, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2009-04-17"}}, {"model": "core.episode", "pk": 936, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 94, "description": "Ports are used to communicate with the external world.", "released_date": "2009-09-18"}}, {"model": "core.episode", "pk": 937, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 94, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2011-05-09"}}, {"model": "core.episode", "pk": 938, "fields": {"episode_number": 7, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 94, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2019-02-27"}}, {"model": "core.episode", "pk": 939, "fields": {"episode_number": 8, "name": "Ports are created with the built-in function open_port.", "season": 94, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2007-02-07"}}, {"model": "core.episode", "pk": 940, "fields": {"episode_number": 9, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 94, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2008-10-06"}}, {"model": "core.episode", "pk": 941, "fields": {"episode_number": 0, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 95, "description": "Do you have any idea why this is not working?", "released_date": "2035-08-27"}}, {"model": "core.episode", "pk": 942, "fields": {"episode_number": 1, "name": "Where are my pants?", "season": 95, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2010-01-21"}}, {"model": "core.episode", "pk": 943, "fields": {"episode_number": 2, "name": "Make me a sandwich.", "season": 95, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2027-07-06"}}, {"model": "core.episode", "pk": 944, "fields": {"episode_number": 3, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 95, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2027-03-28"}}, {"model": "core.episode", "pk": 945, "fields": {"episode_number": 4, "name": "Do you come here often?", "season": 95, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2007-07-06"}}, {"model": "core.episode", "pk": 946, "fields": {"episode_number": 5, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 95, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2001-06-21"}}, {"model": "core.episode", "pk": 947, "fields": {"episode_number": 6, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 95, "description": "Ports are created with the built-in function open_port.", "released_date": "2006-01-15"}}, {"model": "core.episode", "pk": 948, "fields": {"episode_number": 7, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 95, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2026-01-20"}}, {"model": "core.episode", "pk": 949, "fields": {"episode_number": 8, "name": "Where are my pants?", "season": 95, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2019-04-06"}}, {"model": "core.episode", "pk": 950, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 95, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2014-02-05"}}, {"model": "core.episode", "pk": 951, "fields": {"episode_number": 0, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 96, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2017-05-01"}}, {"model": "core.episode", "pk": 952, "fields": {"episode_number": 1, "name": "Make me a sandwich.", "season": 96, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2012-12-17"}}, {"model": "core.episode", "pk": 953, "fields": {"episode_number": 2, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 96, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2004-11-24"}}, {"model": "core.episode", "pk": 954, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 96, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2030-04-27"}}, {"model": "core.episode", "pk": 955, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 96, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2006-02-10"}}, {"model": "core.episode", "pk": 956, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 96, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2000-10-02"}}, {"model": "core.episode", "pk": 957, "fields": {"episode_number": 6, "name": "Any element of a tuple can be accessed in constant time.", "season": 96, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2008-04-02"}}, {"model": "core.episode", "pk": 958, "fields": {"episode_number": 7, "name": "Where are my pants?", "season": 96, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2033-04-27"}}, {"model": "core.episode", "pk": 959, "fields": {"episode_number": 8, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 96, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2006-07-31"}}, {"model": "core.episode", "pk": 960, "fields": {"episode_number": 9, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 96, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2009-10-26"}}, {"model": "core.episode", "pk": 961, "fields": {"episode_number": 0, "name": "Atoms are used within a program to denote distinguished values.", "season": 97, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2021-06-05"}}, {"model": "core.episode", "pk": 962, "fields": {"episode_number": 1, "name": "The arguments can be primitive data types or compound data types.", "season": 97, "description": "Do you have any idea why this is not working?", "released_date": "2012-11-07"}}, {"model": "core.episode", "pk": 963, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 97, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2006-03-15"}}, {"model": "core.episode", "pk": 964, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 97, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2009-08-04"}}, {"model": "core.episode", "pk": 965, "fields": {"episode_number": 4, "name": "Erlang is known for its designs that are well suited for systems.", "season": 97, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2000-03-15"}}, {"model": "core.episode", "pk": 966, "fields": {"episode_number": 5, "name": "Erlang is known for its designs that are well suited for systems.", "season": 97, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2007-01-07"}}, {"model": "core.episode", "pk": 967, "fields": {"episode_number": 6, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 97, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2022-11-10"}}, {"model": "core.episode", "pk": 968, "fields": {"episode_number": 7, "name": "Do you have any idea why this is not working?", "season": 97, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2016-09-03"}}, {"model": "core.episode", "pk": 969, "fields": {"episode_number": 8, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 97, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2002-04-08"}}, {"model": "core.episode", "pk": 970, "fields": {"episode_number": 9, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 97, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2008-06-07"}}, {"model": "core.episode", "pk": 971, "fields": {"episode_number": 0, "name": "Do you come here often?", "season": 98, "description": "Make me a sandwich.", "released_date": "2021-12-10"}}, {"model": "core.episode", "pk": 972, "fields": {"episode_number": 1, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 98, "description": "Do you come here often?", "released_date": "2031-07-21"}}, {"model": "core.episode", "pk": 973, "fields": {"episode_number": 2, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 98, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2016-05-16"}}, {"model": "core.episode", "pk": 974, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 98, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2020-09-19"}}, {"model": "core.episode", "pk": 975, "fields": {"episode_number": 4, "name": "It is also a garbage-collected runtime system.", "season": 98, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2016-01-18"}}, {"model": "core.episode", "pk": 976, "fields": {"episode_number": 5, "name": "Make me a sandwich.", "season": 98, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2022-08-22"}}, {"model": "core.episode", "pk": 977, "fields": {"episode_number": 6, "name": "It is also a garbage-collected runtime system.", "season": 98, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2033-02-28"}}, {"model": "core.episode", "pk": 978, "fields": {"episode_number": 7, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 98, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2017-12-02"}}, {"model": "core.episode", "pk": 979, "fields": {"episode_number": 8, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 98, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2021-08-26"}}, {"model": "core.episode", "pk": 980, "fields": {"episode_number": 9, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 98, "description": "Ports are used to communicate with the external world.", "released_date": "2033-06-12"}}, {"model": "core.episode", "pk": 981, "fields": {"episode_number": 0, "name": "The arguments can be primitive data types or compound data types.", "season": 99, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2016-07-05"}}, {"model": "core.episode", "pk": 982, "fields": {"episode_number": 1, "name": "Erlang is known for its designs that are well suited for systems.", "season": 99, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2025-06-12"}}, {"model": "core.episode", "pk": 983, "fields": {"episode_number": 2, "name": "I don't even care.", "season": 99, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2004-10-15"}}, {"model": "core.episode", "pk": 984, "fields": {"episode_number": 3, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 99, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2023-05-25"}}, {"model": "core.episode", "pk": 985, "fields": {"episode_number": 4, "name": "Do you come here often?", "season": 99, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2017-04-28"}}, {"model": "core.episode", "pk": 986, "fields": {"episode_number": 5, "name": "Make me a sandwich.", "season": 99, "description": "Ports are created with the built-in function open_port.", "released_date": "2020-07-05"}}, {"model": "core.episode", "pk": 987, "fields": {"episode_number": 6, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 99, "description": "Do you have any idea why this is not working?", "released_date": "2016-06-19"}}, {"model": "core.episode", "pk": 988, "fields": {"episode_number": 7, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 99, "description": "I don't even care.", "released_date": "2025-10-30"}}, {"model": "core.episode", "pk": 989, "fields": {"episode_number": 8, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 99, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2003-05-19"}}, {"model": "core.episode", "pk": 990, "fields": {"episode_number": 9, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 99, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2029-04-10"}}, {"model": "core.episode", "pk": 991, "fields": {"episode_number": 0, "name": "I don't even care.", "season": 100, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2025-12-19"}}, {"model": "core.episode", "pk": 992, "fields": {"episode_number": 1, "name": "Ports are used to communicate with the external world.", "season": 100, "description": "It is also a garbage-collected runtime system.", "released_date": "2034-01-22"}}, {"model": "core.episode", "pk": 993, "fields": {"episode_number": 2, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 100, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2010-04-02"}}, {"model": "core.episode", "pk": 994, "fields": {"episode_number": 3, "name": "The arguments can be primitive data types or compound data types.", "season": 100, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2027-06-17"}}, {"model": "core.episode", "pk": 995, "fields": {"episode_number": 4, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 100, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2010-07-24"}}, {"model": "core.episode", "pk": 996, "fields": {"episode_number": 5, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 100, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2003-08-26"}}, {"model": "core.episode", "pk": 997, "fields": {"episode_number": 6, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 100, "description": "I don't even care.", "released_date": "2014-11-21"}}, {"model": "core.episode", "pk": 998, "fields": {"episode_number": 7, "name": "Any element of a tuple can be accessed in constant time.", "season": 100, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2008-05-19"}}, {"model": "core.episode", "pk": 999, "fields": {"episode_number": 8, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 100, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2012-07-24"}}, {"model": "core.episode", "pk": 1000, "fields": {"episode_number": 9, "name": "Type classes first appeared in the Haskell programming language.", "season": 100, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2005-11-21"}}, {"model": "core.episode", "pk": 1001, "fields": {"episode_number": 0, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 101, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2013-07-09"}}, {"model": "core.episode", "pk": 1002, "fields": {"episode_number": 1, "name": "Type classes first appeared in the Haskell programming language.", "season": 101, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2006-11-17"}}, {"model": "core.episode", "pk": 1003, "fields": {"episode_number": 2, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 101, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2022-11-24"}}, {"model": "core.episode", "pk": 1004, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 101, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2021-08-09"}}, {"model": "core.episode", "pk": 1005, "fields": {"episode_number": 4, "name": "It is also a garbage-collected runtime system.", "season": 101, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2032-05-13"}}, {"model": "core.episode", "pk": 1006, "fields": {"episode_number": 5, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 101, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2008-07-12"}}, {"model": "core.episode", "pk": 1007, "fields": {"episode_number": 6, "name": "Any element of a tuple can be accessed in constant time.", "season": 101, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2024-01-28"}}, {"model": "core.episode", "pk": 1008, "fields": {"episode_number": 7, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 101, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2028-12-17"}}, {"model": "core.episode", "pk": 1009, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 101, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2029-12-13"}}, {"model": "core.episode", "pk": 1010, "fields": {"episode_number": 9, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 101, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2005-06-26"}}, {"model": "core.episode", "pk": 1011, "fields": {"episode_number": 0, "name": "Type classes first appeared in the Haskell programming language.", "season": 102, "description": "Where are my pants?", "released_date": "2006-09-30"}}, {"model": "core.episode", "pk": 1012, "fields": {"episode_number": 1, "name": "Ports are created with the built-in function open_port.", "season": 102, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2030-01-10"}}, {"model": "core.episode", "pk": 1013, "fields": {"episode_number": 2, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 102, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2034-04-30"}}, {"model": "core.episode", "pk": 1014, "fields": {"episode_number": 3, "name": "It is also a garbage-collected runtime system.", "season": 102, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2030-08-31"}}, {"model": "core.episode", "pk": 1015, "fields": {"episode_number": 4, "name": "Do you have any idea why this is not working?", "season": 102, "description": "Make me a sandwich.", "released_date": "2016-08-02"}}, {"model": "core.episode", "pk": 1016, "fields": {"episode_number": 5, "name": "Any element of a tuple can be accessed in constant time.", "season": 102, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2005-11-12"}}, {"model": "core.episode", "pk": 1017, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 102, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2017-04-20"}}, {"model": "core.episode", "pk": 1018, "fields": {"episode_number": 7, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 102, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2000-10-29"}}, {"model": "core.episode", "pk": 1019, "fields": {"episode_number": 8, "name": "Atoms are used within a program to denote distinguished values.", "season": 102, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2015-03-30"}}, {"model": "core.episode", "pk": 1020, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 102, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2027-01-13"}}, {"model": "core.episode", "pk": 1021, "fields": {"episode_number": 0, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 103, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2028-09-25"}}, {"model": "core.episode", "pk": 1022, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 103, "description": "Make me a sandwich.", "released_date": "2026-06-23"}}, {"model": "core.episode", "pk": 1023, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 103, "description": "Where are my pants?", "released_date": "2015-04-01"}}, {"model": "core.episode", "pk": 1024, "fields": {"episode_number": 3, "name": "Ports are used to communicate with the external world.", "season": 103, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2022-07-26"}}, {"model": "core.episode", "pk": 1025, "fields": {"episode_number": 4, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 103, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2035-04-04"}}, {"model": "core.episode", "pk": 1026, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 103, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2018-07-31"}}, {"model": "core.episode", "pk": 1027, "fields": {"episode_number": 6, "name": "Make me a sandwich.", "season": 103, "description": "Do you come here often?", "released_date": "2027-01-09"}}, {"model": "core.episode", "pk": 1028, "fields": {"episode_number": 7, "name": "Do you have any idea why this is not working?", "season": 103, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2021-01-23"}}, {"model": "core.episode", "pk": 1029, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 103, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2033-06-01"}}, {"model": "core.episode", "pk": 1030, "fields": {"episode_number": 9, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 103, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2034-04-15"}}, {"model": "core.episode", "pk": 1031, "fields": {"episode_number": 0, "name": "Do you have any idea why this is not working?", "season": 104, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2000-02-04"}}, {"model": "core.episode", "pk": 1032, "fields": {"episode_number": 1, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 104, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2020-09-12"}}, {"model": "core.episode", "pk": 1033, "fields": {"episode_number": 2, "name": "Ports are used to communicate with the external world.", "season": 104, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2020-02-14"}}, {"model": "core.episode", "pk": 1034, "fields": {"episode_number": 3, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 104, "description": "Make me a sandwich.", "released_date": "2007-11-21"}}, {"model": "core.episode", "pk": 1035, "fields": {"episode_number": 4, "name": "Erlang is known for its designs that are well suited for systems.", "season": 104, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2017-11-11"}}, {"model": "core.episode", "pk": 1036, "fields": {"episode_number": 5, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 104, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2018-03-19"}}, {"model": "core.episode", "pk": 1037, "fields": {"episode_number": 6, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 104, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2026-10-12"}}, {"model": "core.episode", "pk": 1038, "fields": {"episode_number": 7, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 104, "description": "Where are my pants?", "released_date": "2011-01-13"}}, {"model": "core.episode", "pk": 1039, "fields": {"episode_number": 8, "name": "It is also a garbage-collected runtime system.", "season": 104, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2016-05-04"}}, {"model": "core.episode", "pk": 1040, "fields": {"episode_number": 9, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 104, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2030-10-19"}}, {"model": "core.episode", "pk": 1041, "fields": {"episode_number": 0, "name": "I don't even care.", "season": 105, "description": "Do you come here often?", "released_date": "2027-02-09"}}, {"model": "core.episode", "pk": 1042, "fields": {"episode_number": 1, "name": "Type classes first appeared in the Haskell programming language.", "season": 105, "description": "It is also a garbage-collected runtime system.", "released_date": "2026-02-19"}}, {"model": "core.episode", "pk": 1043, "fields": {"episode_number": 2, "name": "The arguments can be primitive data types or compound data types.", "season": 105, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2028-11-03"}}, {"model": "core.episode", "pk": 1044, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 105, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2035-12-28"}}, {"model": "core.episode", "pk": 1045, "fields": {"episode_number": 4, "name": "Make me a sandwich.", "season": 105, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2011-02-18"}}, {"model": "core.episode", "pk": 1046, "fields": {"episode_number": 5, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 105, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2016-09-28"}}, {"model": "core.episode", "pk": 1047, "fields": {"episode_number": 6, "name": "Where are my pants?", "season": 105, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2000-11-07"}}, {"model": "core.episode", "pk": 1048, "fields": {"episode_number": 7, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 105, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2000-02-26"}}, {"model": "core.episode", "pk": 1049, "fields": {"episode_number": 8, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 105, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2000-10-04"}}, {"model": "core.episode", "pk": 1050, "fields": {"episode_number": 9, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 105, "description": "Make me a sandwich.", "released_date": "2004-12-08"}}, {"model": "core.episode", "pk": 1051, "fields": {"episode_number": 0, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 106, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2007-10-17"}}, {"model": "core.episode", "pk": 1052, "fields": {"episode_number": 1, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 106, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2022-08-28"}}, {"model": "core.episode", "pk": 1053, "fields": {"episode_number": 2, "name": "Atoms are used within a program to denote distinguished values.", "season": 106, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2010-01-06"}}, {"model": "core.episode", "pk": 1054, "fields": {"episode_number": 3, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 106, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2035-01-29"}}, {"model": "core.episode", "pk": 1055, "fields": {"episode_number": 4, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 106, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2030-12-01"}}, {"model": "core.episode", "pk": 1056, "fields": {"episode_number": 5, "name": "Ports are created with the built-in function open_port.", "season": 106, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2000-06-25"}}, {"model": "core.episode", "pk": 1057, "fields": {"episode_number": 6, "name": "Ports are used to communicate with the external world.", "season": 106, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2009-03-10"}}, {"model": "core.episode", "pk": 1058, "fields": {"episode_number": 7, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 106, "description": "Make me a sandwich.", "released_date": "2012-07-19"}}, {"model": "core.episode", "pk": 1059, "fields": {"episode_number": 8, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 106, "description": "Ports are used to communicate with the external world.", "released_date": "2034-01-20"}}, {"model": "core.episode", "pk": 1060, "fields": {"episode_number": 9, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 106, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2023-09-06"}}, {"model": "core.episode", "pk": 1061, "fields": {"episode_number": 0, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 107, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2022-10-03"}}, {"model": "core.episode", "pk": 1062, "fields": {"episode_number": 1, "name": "Do you have any idea why this is not working?", "season": 107, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2027-10-07"}}, {"model": "core.episode", "pk": 1063, "fields": {"episode_number": 2, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 107, "description": "Where are my pants?", "released_date": "2030-11-23"}}, {"model": "core.episode", "pk": 1064, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 107, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2000-03-23"}}, {"model": "core.episode", "pk": 1065, "fields": {"episode_number": 4, "name": "Any element of a tuple can be accessed in constant time.", "season": 107, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2003-11-30"}}, {"model": "core.episode", "pk": 1066, "fields": {"episode_number": 5, "name": "The arguments can be primitive data types or compound data types.", "season": 107, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2001-03-22"}}, {"model": "core.episode", "pk": 1067, "fields": {"episode_number": 6, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 107, "description": "It is also a garbage-collected runtime system.", "released_date": "2009-12-18"}}, {"model": "core.episode", "pk": 1068, "fields": {"episode_number": 7, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 107, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2003-12-29"}}, {"model": "core.episode", "pk": 1069, "fields": {"episode_number": 8, "name": "The arguments can be primitive data types or compound data types.", "season": 107, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2033-09-30"}}, {"model": "core.episode", "pk": 1070, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 107, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2023-04-13"}}, {"model": "core.episode", "pk": 1071, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 108, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2024-12-15"}}, {"model": "core.episode", "pk": 1072, "fields": {"episode_number": 1, "name": "I don't even care.", "season": 108, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2025-02-24"}}, {"model": "core.episode", "pk": 1073, "fields": {"episode_number": 2, "name": "Atoms are used within a program to denote distinguished values.", "season": 108, "description": "Where are my pants?", "released_date": "2034-05-08"}}, {"model": "core.episode", "pk": 1074, "fields": {"episode_number": 3, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 108, "description": "Do you have any idea why this is not working?", "released_date": "2005-06-22"}}, {"model": "core.episode", "pk": 1075, "fields": {"episode_number": 4, "name": "Type classes first appeared in the Haskell programming language.", "season": 108, "description": "Do you have any idea why this is not working?", "released_date": "2006-02-24"}}, {"model": "core.episode", "pk": 1076, "fields": {"episode_number": 5, "name": "It is also a garbage-collected runtime system.", "season": 108, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2031-04-24"}}, {"model": "core.episode", "pk": 1077, "fields": {"episode_number": 6, "name": "Erlang is known for its designs that are well suited for systems.", "season": 108, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2032-09-23"}}, {"model": "core.episode", "pk": 1078, "fields": {"episode_number": 7, "name": "Make me a sandwich.", "season": 108, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2009-09-26"}}, {"model": "core.episode", "pk": 1079, "fields": {"episode_number": 8, "name": "Do you have any idea why this is not working?", "season": 108, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2000-03-29"}}, {"model": "core.episode", "pk": 1080, "fields": {"episode_number": 9, "name": "Ports are created with the built-in function open_port.", "season": 108, "description": "Ports are created with the built-in function open_port.", "released_date": "2019-10-07"}}, {"model": "core.episode", "pk": 1081, "fields": {"episode_number": 0, "name": "It is also a garbage-collected runtime system.", "season": 109, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2016-03-13"}}, {"model": "core.episode", "pk": 1082, "fields": {"episode_number": 1, "name": "Do you come here often?", "season": 109, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2008-09-02"}}, {"model": "core.episode", "pk": 1083, "fields": {"episode_number": 2, "name": "Any element of a tuple can be accessed in constant time.", "season": 109, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2009-09-24"}}, {"model": "core.episode", "pk": 1084, "fields": {"episode_number": 3, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 109, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2023-06-10"}}, {"model": "core.episode", "pk": 1085, "fields": {"episode_number": 4, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 109, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2008-10-29"}}, {"model": "core.episode", "pk": 1086, "fields": {"episode_number": 5, "name": "It is also a garbage-collected runtime system.", "season": 109, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2028-01-01"}}, {"model": "core.episode", "pk": 1087, "fields": {"episode_number": 6, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 109, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2019-12-18"}}, {"model": "core.episode", "pk": 1088, "fields": {"episode_number": 7, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 109, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2012-03-13"}}, {"model": "core.episode", "pk": 1089, "fields": {"episode_number": 8, "name": "Make me a sandwich.", "season": 109, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2031-12-31"}}, {"model": "core.episode", "pk": 1090, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 109, "description": "Ports are used to communicate with the external world.", "released_date": "2008-07-18"}}, {"model": "core.episode", "pk": 1091, "fields": {"episode_number": 0, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 110, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2027-07-01"}}, {"model": "core.episode", "pk": 1092, "fields": {"episode_number": 1, "name": "Do you have any idea why this is not working?", "season": 110, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2031-06-12"}}, {"model": "core.episode", "pk": 1093, "fields": {"episode_number": 2, "name": "Atoms are used within a program to denote distinguished values.", "season": 110, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2024-05-22"}}, {"model": "core.episode", "pk": 1094, "fields": {"episode_number": 3, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 110, "description": "Make me a sandwich.", "released_date": "2003-12-18"}}, {"model": "core.episode", "pk": 1095, "fields": {"episode_number": 4, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 110, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2006-10-26"}}, {"model": "core.episode", "pk": 1096, "fields": {"episode_number": 5, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 110, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2021-08-17"}}, {"model": "core.episode", "pk": 1097, "fields": {"episode_number": 6, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 110, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2019-06-12"}}, {"model": "core.episode", "pk": 1098, "fields": {"episode_number": 7, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 110, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2022-02-06"}}, {"model": "core.episode", "pk": 1099, "fields": {"episode_number": 8, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 110, "description": "Do you come here often?", "released_date": "2007-01-04"}}, {"model": "core.episode", "pk": 1100, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 110, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2026-11-01"}}, {"model": "core.episode", "pk": 1101, "fields": {"episode_number": 0, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 111, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2012-06-30"}}, {"model": "core.episode", "pk": 1102, "fields": {"episode_number": 1, "name": "Make me a sandwich.", "season": 111, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2002-04-25"}}, {"model": "core.episode", "pk": 1103, "fields": {"episode_number": 2, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 111, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2015-11-14"}}, {"model": "core.episode", "pk": 1104, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 111, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2005-02-14"}}, {"model": "core.episode", "pk": 1105, "fields": {"episode_number": 4, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 111, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2030-07-24"}}, {"model": "core.episode", "pk": 1106, "fields": {"episode_number": 5, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 111, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2025-07-25"}}, {"model": "core.episode", "pk": 1107, "fields": {"episode_number": 6, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 111, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2001-05-04"}}, {"model": "core.episode", "pk": 1108, "fields": {"episode_number": 7, "name": "It is also a garbage-collected runtime system.", "season": 111, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2028-10-01"}}, {"model": "core.episode", "pk": 1109, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 111, "description": "I don't even care.", "released_date": "2029-12-13"}}, {"model": "core.episode", "pk": 1110, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 111, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2019-12-30"}}, {"model": "core.episode", "pk": 1111, "fields": {"episode_number": 0, "name": "The arguments can be primitive data types or compound data types.", "season": 112, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2022-06-19"}}, {"model": "core.episode", "pk": 1112, "fields": {"episode_number": 1, "name": "Ports are created with the built-in function open_port.", "season": 112, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2011-10-03"}}, {"model": "core.episode", "pk": 1113, "fields": {"episode_number": 2, "name": "I don't even care.", "season": 112, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2010-07-03"}}, {"model": "core.episode", "pk": 1114, "fields": {"episode_number": 3, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 112, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2014-07-21"}}, {"model": "core.episode", "pk": 1115, "fields": {"episode_number": 4, "name": "Atoms are used within a program to denote distinguished values.", "season": 112, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2024-06-09"}}, {"model": "core.episode", "pk": 1116, "fields": {"episode_number": 5, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 112, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2008-01-21"}}, {"model": "core.episode", "pk": 1117, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 112, "description": "Do you come here often?", "released_date": "2019-03-03"}}, {"model": "core.episode", "pk": 1118, "fields": {"episode_number": 7, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 112, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2008-04-09"}}, {"model": "core.episode", "pk": 1119, "fields": {"episode_number": 8, "name": "The arguments can be primitive data types or compound data types.", "season": 112, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2033-12-15"}}, {"model": "core.episode", "pk": 1120, "fields": {"episode_number": 9, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 112, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2008-01-07"}}, {"model": "core.episode", "pk": 1121, "fields": {"episode_number": 0, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 113, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2018-09-20"}}, {"model": "core.episode", "pk": 1122, "fields": {"episode_number": 1, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 113, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2009-10-04"}}, {"model": "core.episode", "pk": 1123, "fields": {"episode_number": 2, "name": "Do you have any idea why this is not working?", "season": 113, "description": "Ports are used to communicate with the external world.", "released_date": "2031-01-14"}}, {"model": "core.episode", "pk": 1124, "fields": {"episode_number": 3, "name": "Where are my pants?", "season": 113, "description": "It is also a garbage-collected runtime system.", "released_date": "2028-05-12"}}, {"model": "core.episode", "pk": 1125, "fields": {"episode_number": 4, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 113, "description": "Make me a sandwich.", "released_date": "2019-03-16"}}, {"model": "core.episode", "pk": 1126, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 113, "description": "Ports are created with the built-in function open_port.", "released_date": "2021-01-30"}}, {"model": "core.episode", "pk": 1127, "fields": {"episode_number": 6, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 113, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2011-10-03"}}, {"model": "core.episode", "pk": 1128, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 113, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2002-09-28"}}, {"model": "core.episode", "pk": 1129, "fields": {"episode_number": 8, "name": "Ports are created with the built-in function open_port.", "season": 113, "description": "Ports are created with the built-in function open_port.", "released_date": "2007-08-31"}}, {"model": "core.episode", "pk": 1130, "fields": {"episode_number": 9, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 113, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2022-03-23"}}, {"model": "core.episode", "pk": 1131, "fields": {"episode_number": 0, "name": "Atoms are used within a program to denote distinguished values.", "season": 114, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2019-03-04"}}, {"model": "core.episode", "pk": 1132, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 114, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2003-01-01"}}, {"model": "core.episode", "pk": 1133, "fields": {"episode_number": 2, "name": "Do you have any idea why this is not working?", "season": 114, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2014-09-12"}}, {"model": "core.episode", "pk": 1134, "fields": {"episode_number": 3, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 114, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2022-08-26"}}, {"model": "core.episode", "pk": 1135, "fields": {"episode_number": 4, "name": "Where are my pants?", "season": 114, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2023-02-06"}}, {"model": "core.episode", "pk": 1136, "fields": {"episode_number": 5, "name": "Atoms are used within a program to denote distinguished values.", "season": 114, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2003-03-18"}}, {"model": "core.episode", "pk": 1137, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 114, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2004-07-18"}}, {"model": "core.episode", "pk": 1138, "fields": {"episode_number": 7, "name": "I don't even care.", "season": 114, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2003-09-02"}}, {"model": "core.episode", "pk": 1139, "fields": {"episode_number": 8, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 114, "description": "I don't even care.", "released_date": "2033-07-12"}}, {"model": "core.episode", "pk": 1140, "fields": {"episode_number": 9, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 114, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2002-04-13"}}, {"model": "core.episode", "pk": 1141, "fields": {"episode_number": 0, "name": "I don't even care.", "season": 115, "description": "Do you have any idea why this is not working?", "released_date": "2033-02-24"}}, {"model": "core.episode", "pk": 1142, "fields": {"episode_number": 1, "name": "Any element of a tuple can be accessed in constant time.", "season": 115, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2019-12-22"}}, {"model": "core.episode", "pk": 1143, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 115, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2025-07-22"}}, {"model": "core.episode", "pk": 1144, "fields": {"episode_number": 3, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 115, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2009-05-27"}}, {"model": "core.episode", "pk": 1145, "fields": {"episode_number": 4, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 115, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2025-11-03"}}, {"model": "core.episode", "pk": 1146, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 115, "description": "Ports are created with the built-in function open_port.", "released_date": "2007-01-23"}}, {"model": "core.episode", "pk": 1147, "fields": {"episode_number": 6, "name": "Where are my pants?", "season": 115, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2032-02-17"}}, {"model": "core.episode", "pk": 1148, "fields": {"episode_number": 7, "name": "Make me a sandwich.", "season": 115, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2009-07-29"}}, {"model": "core.episode", "pk": 1149, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 115, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2020-11-22"}}, {"model": "core.episode", "pk": 1150, "fields": {"episode_number": 9, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 115, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2034-09-24"}}, {"model": "core.episode", "pk": 1151, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 116, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2017-10-08"}}, {"model": "core.episode", "pk": 1152, "fields": {"episode_number": 1, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 116, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2006-11-19"}}, {"model": "core.episode", "pk": 1153, "fields": {"episode_number": 2, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 116, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2007-06-30"}}, {"model": "core.episode", "pk": 1154, "fields": {"episode_number": 3, "name": "Make me a sandwich.", "season": 116, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2002-08-09"}}, {"model": "core.episode", "pk": 1155, "fields": {"episode_number": 4, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 116, "description": "Do you come here often?", "released_date": "2018-12-08"}}, {"model": "core.episode", "pk": 1156, "fields": {"episode_number": 5, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 116, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2023-12-30"}}, {"model": "core.episode", "pk": 1157, "fields": {"episode_number": 6, "name": "Where are my pants?", "season": 116, "description": "Ports are used to communicate with the external world.", "released_date": "2023-06-15"}}, {"model": "core.episode", "pk": 1158, "fields": {"episode_number": 7, "name": "The arguments can be primitive data types or compound data types.", "season": 116, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2025-01-30"}}, {"model": "core.episode", "pk": 1159, "fields": {"episode_number": 8, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 116, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2033-09-08"}}, {"model": "core.episode", "pk": 1160, "fields": {"episode_number": 9, "name": "Do you come here often?", "season": 116, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2013-03-22"}}, {"model": "core.episode", "pk": 1161, "fields": {"episode_number": 0, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 117, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2021-11-18"}}, {"model": "core.episode", "pk": 1162, "fields": {"episode_number": 1, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 117, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2004-08-15"}}, {"model": "core.episode", "pk": 1163, "fields": {"episode_number": 2, "name": "Type classes first appeared in the Haskell programming language.", "season": 117, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2024-06-08"}}, {"model": "core.episode", "pk": 1164, "fields": {"episode_number": 3, "name": "Erlang is known for its designs that are well suited for systems.", "season": 117, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2004-07-14"}}, {"model": "core.episode", "pk": 1165, "fields": {"episode_number": 4, "name": "I don't even care.", "season": 117, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2024-08-13"}}, {"model": "core.episode", "pk": 1166, "fields": {"episode_number": 5, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 117, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2033-12-15"}}, {"model": "core.episode", "pk": 1167, "fields": {"episode_number": 6, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 117, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2021-02-13"}}, {"model": "core.episode", "pk": 1168, "fields": {"episode_number": 7, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 117, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2013-12-27"}}, {"model": "core.episode", "pk": 1169, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 117, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2013-03-08"}}, {"model": "core.episode", "pk": 1170, "fields": {"episode_number": 9, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 117, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2003-03-22"}}, {"model": "core.episode", "pk": 1171, "fields": {"episode_number": 0, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 118, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2012-01-19"}}, {"model": "core.episode", "pk": 1172, "fields": {"episode_number": 1, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 118, "description": "Make me a sandwich.", "released_date": "2008-03-15"}}, {"model": "core.episode", "pk": 1173, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 118, "description": "Do you come here often?", "released_date": "2023-11-05"}}, {"model": "core.episode", "pk": 1174, "fields": {"episode_number": 3, "name": "Any element of a tuple can be accessed in constant time.", "season": 118, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2015-07-26"}}, {"model": "core.episode", "pk": 1175, "fields": {"episode_number": 4, "name": "The arguments can be primitive data types or compound data types.", "season": 118, "description": "Do you have any idea why this is not working?", "released_date": "2007-07-25"}}, {"model": "core.episode", "pk": 1176, "fields": {"episode_number": 5, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 118, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2030-09-10"}}, {"model": "core.episode", "pk": 1177, "fields": {"episode_number": 6, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 118, "description": "It is also a garbage-collected runtime system.", "released_date": "2019-12-12"}}, {"model": "core.episode", "pk": 1178, "fields": {"episode_number": 7, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 118, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2002-04-01"}}, {"model": "core.episode", "pk": 1179, "fields": {"episode_number": 8, "name": "Atoms are used within a program to denote distinguished values.", "season": 118, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2007-03-27"}}, {"model": "core.episode", "pk": 1180, "fields": {"episode_number": 9, "name": "Type classes first appeared in the Haskell programming language.", "season": 118, "description": "Do you have any idea why this is not working?", "released_date": "2013-06-10"}}, {"model": "core.episode", "pk": 1181, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 119, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2003-11-13"}}, {"model": "core.episode", "pk": 1182, "fields": {"episode_number": 1, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 119, "description": "Ports are created with the built-in function open_port.", "released_date": "2003-09-16"}}, {"model": "core.episode", "pk": 1183, "fields": {"episode_number": 2, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 119, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2001-02-09"}}, {"model": "core.episode", "pk": 1184, "fields": {"episode_number": 3, "name": "Atoms are used within a program to denote distinguished values.", "season": 119, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2031-03-25"}}, {"model": "core.episode", "pk": 1185, "fields": {"episode_number": 4, "name": "Ports are used to communicate with the external world.", "season": 119, "description": "Ports are created with the built-in function open_port.", "released_date": "2032-11-18"}}, {"model": "core.episode", "pk": 1186, "fields": {"episode_number": 5, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 119, "description": "Do you come here often?", "released_date": "2000-06-08"}}, {"model": "core.episode", "pk": 1187, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 119, "description": "Make me a sandwich.", "released_date": "2013-11-05"}}, {"model": "core.episode", "pk": 1188, "fields": {"episode_number": 7, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 119, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2028-09-05"}}, {"model": "core.episode", "pk": 1189, "fields": {"episode_number": 8, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 119, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2009-10-27"}}, {"model": "core.episode", "pk": 1190, "fields": {"episode_number": 9, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 119, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2000-08-17"}}, {"model": "core.episode", "pk": 1191, "fields": {"episode_number": 0, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 120, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2023-08-02"}}, {"model": "core.episode", "pk": 1192, "fields": {"episode_number": 1, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 120, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2005-02-16"}}, {"model": "core.episode", "pk": 1193, "fields": {"episode_number": 2, "name": "Where are my pants?", "season": 120, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2015-03-30"}}, {"model": "core.episode", "pk": 1194, "fields": {"episode_number": 3, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 120, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2028-07-07"}}, {"model": "core.episode", "pk": 1195, "fields": {"episode_number": 4, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 120, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2015-03-15"}}, {"model": "core.episode", "pk": 1196, "fields": {"episode_number": 5, "name": "Do you have any idea why this is not working?", "season": 120, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2034-04-03"}}, {"model": "core.episode", "pk": 1197, "fields": {"episode_number": 6, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 120, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2023-10-08"}}, {"model": "core.episode", "pk": 1198, "fields": {"episode_number": 7, "name": "Make me a sandwich.", "season": 120, "description": "Make me a sandwich.", "released_date": "2027-03-21"}}, {"model": "core.episode", "pk": 1199, "fields": {"episode_number": 8, "name": "It is also a garbage-collected runtime system.", "season": 120, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2003-12-14"}}, {"model": "core.episode", "pk": 1200, "fields": {"episode_number": 9, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 120, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2008-05-18"}}, {"model": "core.episode", "pk": 1201, "fields": {"episode_number": 0, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 121, "description": "Do you come here often?", "released_date": "2016-11-24"}}, {"model": "core.episode", "pk": 1202, "fields": {"episode_number": 1, "name": "I don't even care.", "season": 121, "description": "Do you come here often?", "released_date": "2028-05-20"}}, {"model": "core.episode", "pk": 1203, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 121, "description": "Ports are created with the built-in function open_port.", "released_date": "2031-03-12"}}, {"model": "core.episode", "pk": 1204, "fields": {"episode_number": 3, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 121, "description": "Make me a sandwich.", "released_date": "2011-03-04"}}, {"model": "core.episode", "pk": 1205, "fields": {"episode_number": 4, "name": "I don't even care.", "season": 121, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2010-07-12"}}, {"model": "core.episode", "pk": 1206, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 121, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2025-06-09"}}, {"model": "core.episode", "pk": 1207, "fields": {"episode_number": 6, "name": "Ports are used to communicate with the external world.", "season": 121, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2025-08-06"}}, {"model": "core.episode", "pk": 1208, "fields": {"episode_number": 7, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 121, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2011-12-16"}}, {"model": "core.episode", "pk": 1209, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 121, "description": "It is also a garbage-collected runtime system.", "released_date": "2006-02-07"}}, {"model": "core.episode", "pk": 1210, "fields": {"episode_number": 9, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 121, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2031-09-16"}}, {"model": "core.episode", "pk": 1211, "fields": {"episode_number": 0, "name": "Type classes first appeared in the Haskell programming language.", "season": 122, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2028-05-06"}}, {"model": "core.episode", "pk": 1212, "fields": {"episode_number": 1, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 122, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2017-02-13"}}, {"model": "core.episode", "pk": 1213, "fields": {"episode_number": 2, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 122, "description": "Make me a sandwich.", "released_date": "2008-12-12"}}, {"model": "core.episode", "pk": 1214, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 122, "description": "It is also a garbage-collected runtime system.", "released_date": "2024-08-31"}}, {"model": "core.episode", "pk": 1215, "fields": {"episode_number": 4, "name": "Ports are used to communicate with the external world.", "season": 122, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2018-09-22"}}, {"model": "core.episode", "pk": 1216, "fields": {"episode_number": 5, "name": "Make me a sandwich.", "season": 122, "description": "Where are my pants?", "released_date": "2033-01-26"}}, {"model": "core.episode", "pk": 1217, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 122, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2030-01-29"}}, {"model": "core.episode", "pk": 1218, "fields": {"episode_number": 7, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 122, "description": "It is also a garbage-collected runtime system.", "released_date": "2001-02-26"}}, {"model": "core.episode", "pk": 1219, "fields": {"episode_number": 8, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 122, "description": "Where are my pants?", "released_date": "2021-07-04"}}, {"model": "core.episode", "pk": 1220, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 122, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2027-07-10"}}, {"model": "core.episode", "pk": 1221, "fields": {"episode_number": 0, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 123, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2016-11-17"}}, {"model": "core.episode", "pk": 1222, "fields": {"episode_number": 1, "name": "Type classes first appeared in the Haskell programming language.", "season": 123, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2016-01-21"}}, {"model": "core.episode", "pk": 1223, "fields": {"episode_number": 2, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 123, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2033-10-31"}}, {"model": "core.episode", "pk": 1224, "fields": {"episode_number": 3, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 123, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2017-07-07"}}, {"model": "core.episode", "pk": 1225, "fields": {"episode_number": 4, "name": "The arguments can be primitive data types or compound data types.", "season": 123, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2016-12-04"}}, {"model": "core.episode", "pk": 1226, "fields": {"episode_number": 5, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 123, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2001-04-04"}}, {"model": "core.episode", "pk": 1227, "fields": {"episode_number": 6, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 123, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2027-10-12"}}, {"model": "core.episode", "pk": 1228, "fields": {"episode_number": 7, "name": "It is also a garbage-collected runtime system.", "season": 123, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2034-02-18"}}, {"model": "core.episode", "pk": 1229, "fields": {"episode_number": 8, "name": "Where are my pants?", "season": 123, "description": "Do you come here often?", "released_date": "2007-07-23"}}, {"model": "core.episode", "pk": 1230, "fields": {"episode_number": 9, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 123, "description": "Ports are used to communicate with the external world.", "released_date": "2006-10-09"}}, {"model": "core.episode", "pk": 1231, "fields": {"episode_number": 0, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 124, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2032-08-31"}}, {"model": "core.episode", "pk": 1232, "fields": {"episode_number": 1, "name": "Do you come here often?", "season": 124, "description": "It is also a garbage-collected runtime system.", "released_date": "2002-08-06"}}, {"model": "core.episode", "pk": 1233, "fields": {"episode_number": 2, "name": "Where are my pants?", "season": 124, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2020-03-12"}}, {"model": "core.episode", "pk": 1234, "fields": {"episode_number": 3, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 124, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2022-08-21"}}, {"model": "core.episode", "pk": 1235, "fields": {"episode_number": 4, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 124, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2005-04-13"}}, {"model": "core.episode", "pk": 1236, "fields": {"episode_number": 5, "name": "Atoms are used within a program to denote distinguished values.", "season": 124, "description": "Do you have any idea why this is not working?", "released_date": "2033-03-16"}}, {"model": "core.episode", "pk": 1237, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 124, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2025-01-15"}}, {"model": "core.episode", "pk": 1238, "fields": {"episode_number": 7, "name": "Do you come here often?", "season": 124, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2018-02-06"}}, {"model": "core.episode", "pk": 1239, "fields": {"episode_number": 8, "name": "Ports are used to communicate with the external world.", "season": 124, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2021-01-17"}}, {"model": "core.episode", "pk": 1240, "fields": {"episode_number": 9, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 124, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2021-03-13"}}, {"model": "core.episode", "pk": 1241, "fields": {"episode_number": 0, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 125, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2010-07-15"}}, {"model": "core.episode", "pk": 1242, "fields": {"episode_number": 1, "name": "Ports are created with the built-in function open_port.", "season": 125, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2033-05-20"}}, {"model": "core.episode", "pk": 1243, "fields": {"episode_number": 2, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 125, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2012-12-24"}}, {"model": "core.episode", "pk": 1244, "fields": {"episode_number": 3, "name": "Do you come here often?", "season": 125, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2010-07-09"}}, {"model": "core.episode", "pk": 1245, "fields": {"episode_number": 4, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 125, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2011-09-05"}}, {"model": "core.episode", "pk": 1246, "fields": {"episode_number": 5, "name": "Do you come here often?", "season": 125, "description": "Ports are created with the built-in function open_port.", "released_date": "2017-07-23"}}, {"model": "core.episode", "pk": 1247, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 125, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2027-06-15"}}, {"model": "core.episode", "pk": 1248, "fields": {"episode_number": 7, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 125, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2024-11-25"}}, {"model": "core.episode", "pk": 1249, "fields": {"episode_number": 8, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 125, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2007-11-08"}}, {"model": "core.episode", "pk": 1250, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 125, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2035-04-26"}}, {"model": "core.episode", "pk": 1251, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 126, "description": "Ports are created with the built-in function open_port.", "released_date": "2012-06-08"}}, {"model": "core.episode", "pk": 1252, "fields": {"episode_number": 1, "name": "Where are my pants?", "season": 126, "description": "Ports are created with the built-in function open_port.", "released_date": "2003-03-24"}}, {"model": "core.episode", "pk": 1253, "fields": {"episode_number": 2, "name": "Erlang is known for its designs that are well suited for systems.", "season": 126, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2023-03-31"}}, {"model": "core.episode", "pk": 1254, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 126, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2016-06-30"}}, {"model": "core.episode", "pk": 1255, "fields": {"episode_number": 4, "name": "Ports are created with the built-in function open_port.", "season": 126, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2001-05-06"}}, {"model": "core.episode", "pk": 1256, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 126, "description": "Ports are created with the built-in function open_port.", "released_date": "2012-10-05"}}, {"model": "core.episode", "pk": 1257, "fields": {"episode_number": 6, "name": "It is also a garbage-collected runtime system.", "season": 126, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2009-10-05"}}, {"model": "core.episode", "pk": 1258, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 126, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2001-07-19"}}, {"model": "core.episode", "pk": 1259, "fields": {"episode_number": 8, "name": "I don't even care.", "season": 126, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2014-09-25"}}, {"model": "core.episode", "pk": 1260, "fields": {"episode_number": 9, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 126, "description": "Do you come here often?", "released_date": "2031-10-24"}}, {"model": "core.episode", "pk": 1261, "fields": {"episode_number": 0, "name": "Ports are created with the built-in function open_port.", "season": 127, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2020-02-05"}}, {"model": "core.episode", "pk": 1262, "fields": {"episode_number": 1, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 127, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2015-10-09"}}, {"model": "core.episode", "pk": 1263, "fields": {"episode_number": 2, "name": "The arguments can be primitive data types or compound data types.", "season": 127, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2000-03-24"}}, {"model": "core.episode", "pk": 1264, "fields": {"episode_number": 3, "name": "Do you come here often?", "season": 127, "description": "Do you come here often?", "released_date": "2025-06-04"}}, {"model": "core.episode", "pk": 1265, "fields": {"episode_number": 4, "name": "I don't even care.", "season": 127, "description": "Do you have any idea why this is not working?", "released_date": "2011-11-01"}}, {"model": "core.episode", "pk": 1266, "fields": {"episode_number": 5, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 127, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2027-01-06"}}, {"model": "core.episode", "pk": 1267, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 127, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2016-10-15"}}, {"model": "core.episode", "pk": 1268, "fields": {"episode_number": 7, "name": "Do you have any idea why this is not working?", "season": 127, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2034-02-13"}}, {"model": "core.episode", "pk": 1269, "fields": {"episode_number": 8, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 127, "description": "Do you have any idea why this is not working?", "released_date": "2022-02-27"}}, {"model": "core.episode", "pk": 1270, "fields": {"episode_number": 9, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 127, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2017-08-20"}}, {"model": "core.episode", "pk": 1271, "fields": {"episode_number": 0, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 128, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2006-08-22"}}, {"model": "core.episode", "pk": 1272, "fields": {"episode_number": 1, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 128, "description": "Do you come here often?", "released_date": "2023-12-02"}}, {"model": "core.episode", "pk": 1273, "fields": {"episode_number": 2, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 128, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2005-10-01"}}, {"model": "core.episode", "pk": 1274, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 128, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2028-11-27"}}, {"model": "core.episode", "pk": 1275, "fields": {"episode_number": 4, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 128, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2028-05-26"}}, {"model": "core.episode", "pk": 1276, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 128, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2034-05-28"}}, {"model": "core.episode", "pk": 1277, "fields": {"episode_number": 6, "name": "Type classes first appeared in the Haskell programming language.", "season": 128, "description": "It is also a garbage-collected runtime system.", "released_date": "2008-09-06"}}, {"model": "core.episode", "pk": 1278, "fields": {"episode_number": 7, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 128, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2031-11-20"}}, {"model": "core.episode", "pk": 1279, "fields": {"episode_number": 8, "name": "Do you come here often?", "season": 128, "description": "Where are my pants?", "released_date": "2032-10-09"}}, {"model": "core.episode", "pk": 1280, "fields": {"episode_number": 9, "name": "Type classes first appeared in the Haskell programming language.", "season": 128, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2003-06-14"}}, {"model": "core.episode", "pk": 1281, "fields": {"episode_number": 0, "name": "Atoms are used within a program to denote distinguished values.", "season": 129, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2017-08-27"}}, {"model": "core.episode", "pk": 1282, "fields": {"episode_number": 1, "name": "I don't even care.", "season": 129, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2033-06-01"}}, {"model": "core.episode", "pk": 1283, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 129, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2011-11-29"}}, {"model": "core.episode", "pk": 1284, "fields": {"episode_number": 3, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 129, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2013-03-28"}}, {"model": "core.episode", "pk": 1285, "fields": {"episode_number": 4, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 129, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2001-12-10"}}, {"model": "core.episode", "pk": 1286, "fields": {"episode_number": 5, "name": "It is also a garbage-collected runtime system.", "season": 129, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2009-04-15"}}, {"model": "core.episode", "pk": 1287, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 129, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2017-04-26"}}, {"model": "core.episode", "pk": 1288, "fields": {"episode_number": 7, "name": "Do you come here often?", "season": 129, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2012-10-07"}}, {"model": "core.episode", "pk": 1289, "fields": {"episode_number": 8, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 129, "description": "Ports are created with the built-in function open_port.", "released_date": "2024-11-15"}}, {"model": "core.episode", "pk": 1290, "fields": {"episode_number": 9, "name": "Type classes first appeared in the Haskell programming language.", "season": 129, "description": "Do you come here often?", "released_date": "2033-01-26"}}, {"model": "core.episode", "pk": 1291, "fields": {"episode_number": 0, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 130, "description": "It is also a garbage-collected runtime system.", "released_date": "2020-12-07"}}, {"model": "core.episode", "pk": 1292, "fields": {"episode_number": 1, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 130, "description": "Do you have any idea why this is not working?", "released_date": "2023-04-10"}}, {"model": "core.episode", "pk": 1293, "fields": {"episode_number": 2, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 130, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2011-09-22"}}, {"model": "core.episode", "pk": 1294, "fields": {"episode_number": 3, "name": "Atoms are used within a program to denote distinguished values.", "season": 130, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2013-02-21"}}, {"model": "core.episode", "pk": 1295, "fields": {"episode_number": 4, "name": "Where are my pants?", "season": 130, "description": "Make me a sandwich.", "released_date": "2032-06-29"}}, {"model": "core.episode", "pk": 1296, "fields": {"episode_number": 5, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 130, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2017-04-12"}}, {"model": "core.episode", "pk": 1297, "fields": {"episode_number": 6, "name": "Do you have any idea why this is not working?", "season": 130, "description": "Ports are created with the built-in function open_port.", "released_date": "2002-08-26"}}, {"model": "core.episode", "pk": 1298, "fields": {"episode_number": 7, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 130, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2008-08-14"}}, {"model": "core.episode", "pk": 1299, "fields": {"episode_number": 8, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 130, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2021-01-31"}}, {"model": "core.episode", "pk": 1300, "fields": {"episode_number": 9, "name": "Make me a sandwich.", "season": 130, "description": "Do you come here often?", "released_date": "2033-01-15"}}, {"model": "core.episode", "pk": 1301, "fields": {"episode_number": 0, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 131, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2030-03-28"}}, {"model": "core.episode", "pk": 1302, "fields": {"episode_number": 1, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 131, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2011-12-24"}}, {"model": "core.episode", "pk": 1303, "fields": {"episode_number": 2, "name": "Where are my pants?", "season": 131, "description": "Make me a sandwich.", "released_date": "2013-02-18"}}, {"model": "core.episode", "pk": 1304, "fields": {"episode_number": 3, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 131, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2024-11-16"}}, {"model": "core.episode", "pk": 1305, "fields": {"episode_number": 4, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 131, "description": "Ports are used to communicate with the external world.", "released_date": "2019-03-26"}}, {"model": "core.episode", "pk": 1306, "fields": {"episode_number": 5, "name": "Where are my pants?", "season": 131, "description": "Do you have any idea why this is not working?", "released_date": "2006-05-08"}}, {"model": "core.episode", "pk": 1307, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 131, "description": "Do you have any idea why this is not working?", "released_date": "2019-09-09"}}, {"model": "core.episode", "pk": 1308, "fields": {"episode_number": 7, "name": "Do you have any idea why this is not working?", "season": 131, "description": "Where are my pants?", "released_date": "2035-12-26"}}, {"model": "core.episode", "pk": 1309, "fields": {"episode_number": 8, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 131, "description": "Ports are used to communicate with the external world.", "released_date": "2024-10-03"}}, {"model": "core.episode", "pk": 1310, "fields": {"episode_number": 9, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 131, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2004-10-23"}}, {"model": "core.episode", "pk": 1311, "fields": {"episode_number": 0, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 132, "description": "Ports are created with the built-in function open_port.", "released_date": "2029-06-01"}}, {"model": "core.episode", "pk": 1312, "fields": {"episode_number": 1, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 132, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2010-12-03"}}, {"model": "core.episode", "pk": 1313, "fields": {"episode_number": 2, "name": "It is also a garbage-collected runtime system.", "season": 132, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2026-01-18"}}, {"model": "core.episode", "pk": 1314, "fields": {"episode_number": 3, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 132, "description": "Make me a sandwich.", "released_date": "2011-08-02"}}, {"model": "core.episode", "pk": 1315, "fields": {"episode_number": 4, "name": "I don't even care.", "season": 132, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2004-08-13"}}, {"model": "core.episode", "pk": 1316, "fields": {"episode_number": 5, "name": "It is also a garbage-collected runtime system.", "season": 132, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2009-09-19"}}, {"model": "core.episode", "pk": 1317, "fields": {"episode_number": 6, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 132, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2025-11-22"}}, {"model": "core.episode", "pk": 1318, "fields": {"episode_number": 7, "name": "It is also a garbage-collected runtime system.", "season": 132, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2031-04-19"}}, {"model": "core.episode", "pk": 1319, "fields": {"episode_number": 8, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 132, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2019-10-23"}}, {"model": "core.episode", "pk": 1320, "fields": {"episode_number": 9, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 132, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2031-11-09"}}, {"model": "core.episode", "pk": 1321, "fields": {"episode_number": 0, "name": "Where are my pants?", "season": 133, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2002-04-22"}}, {"model": "core.episode", "pk": 1322, "fields": {"episode_number": 1, "name": "Make me a sandwich.", "season": 133, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2034-05-08"}}, {"model": "core.episode", "pk": 1323, "fields": {"episode_number": 2, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 133, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2014-12-17"}}, {"model": "core.episode", "pk": 1324, "fields": {"episode_number": 3, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 133, "description": "Do you have any idea why this is not working?", "released_date": "2021-12-05"}}, {"model": "core.episode", "pk": 1325, "fields": {"episode_number": 4, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 133, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2019-06-07"}}, {"model": "core.episode", "pk": 1326, "fields": {"episode_number": 5, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 133, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2033-10-16"}}, {"model": "core.episode", "pk": 1327, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 133, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2002-03-20"}}, {"model": "core.episode", "pk": 1328, "fields": {"episode_number": 7, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 133, "description": "Do you come here often?", "released_date": "2026-06-09"}}, {"model": "core.episode", "pk": 1329, "fields": {"episode_number": 8, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 133, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2007-02-22"}}, {"model": "core.episode", "pk": 1330, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 133, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2024-06-01"}}, {"model": "core.episode", "pk": 1331, "fields": {"episode_number": 0, "name": "Ports are used to communicate with the external world.", "season": 134, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2005-06-25"}}, {"model": "core.episode", "pk": 1332, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 134, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2004-01-25"}}, {"model": "core.episode", "pk": 1333, "fields": {"episode_number": 2, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 134, "description": "Ports are created with the built-in function open_port.", "released_date": "2005-10-10"}}, {"model": "core.episode", "pk": 1334, "fields": {"episode_number": 3, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 134, "description": "Do you come here often?", "released_date": "2008-09-21"}}, {"model": "core.episode", "pk": 1335, "fields": {"episode_number": 4, "name": "It is also a garbage-collected runtime system.", "season": 134, "description": "I don't even care.", "released_date": "2035-06-13"}}, {"model": "core.episode", "pk": 1336, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 134, "description": "I don't even care.", "released_date": "2002-04-25"}}, {"model": "core.episode", "pk": 1337, "fields": {"episode_number": 6, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 134, "description": "I don't even care.", "released_date": "2019-06-29"}}, {"model": "core.episode", "pk": 1338, "fields": {"episode_number": 7, "name": "Do you have any idea why this is not working?", "season": 134, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2035-04-16"}}, {"model": "core.episode", "pk": 1339, "fields": {"episode_number": 8, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 134, "description": "I don't even care.", "released_date": "2019-07-25"}}, {"model": "core.episode", "pk": 1340, "fields": {"episode_number": 9, "name": "Atoms are used within a program to denote distinguished values.", "season": 134, "description": "I don't even care.", "released_date": "2003-08-13"}}, {"model": "core.episode", "pk": 1341, "fields": {"episode_number": 0, "name": "Do you have any idea why this is not working?", "season": 135, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2017-07-12"}}, {"model": "core.episode", "pk": 1342, "fields": {"episode_number": 1, "name": "The arguments can be primitive data types or compound data types.", "season": 135, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2004-10-22"}}, {"model": "core.episode", "pk": 1343, "fields": {"episode_number": 2, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 135, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2024-01-15"}}, {"model": "core.episode", "pk": 1344, "fields": {"episode_number": 3, "name": "I don't even care.", "season": 135, "description": "I don't even care.", "released_date": "2004-07-30"}}, {"model": "core.episode", "pk": 1345, "fields": {"episode_number": 4, "name": "Type classes first appeared in the Haskell programming language.", "season": 135, "description": "Ports are created with the built-in function open_port.", "released_date": "2004-05-11"}}, {"model": "core.episode", "pk": 1346, "fields": {"episode_number": 5, "name": "I don't even care.", "season": 135, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2018-07-18"}}, {"model": "core.episode", "pk": 1347, "fields": {"episode_number": 6, "name": "Type classes first appeared in the Haskell programming language.", "season": 135, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2004-07-23"}}, {"model": "core.episode", "pk": 1348, "fields": {"episode_number": 7, "name": "It is also a garbage-collected runtime system.", "season": 135, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2004-12-26"}}, {"model": "core.episode", "pk": 1349, "fields": {"episode_number": 8, "name": "Type classes first appeared in the Haskell programming language.", "season": 135, "description": "Ports are created with the built-in function open_port.", "released_date": "2004-09-04"}}, {"model": "core.episode", "pk": 1350, "fields": {"episode_number": 9, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 135, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2023-05-22"}}, {"model": "core.episode", "pk": 1351, "fields": {"episode_number": 0, "name": "Ports are used to communicate with the external world.", "season": 136, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2011-08-01"}}, {"model": "core.episode", "pk": 1352, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 136, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2027-06-03"}}, {"model": "core.episode", "pk": 1353, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 136, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2000-03-01"}}, {"model": "core.episode", "pk": 1354, "fields": {"episode_number": 3, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 136, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2008-09-25"}}, {"model": "core.episode", "pk": 1355, "fields": {"episode_number": 4, "name": "Do you have any idea why this is not working?", "season": 136, "description": "Where are my pants?", "released_date": "2027-12-25"}}, {"model": "core.episode", "pk": 1356, "fields": {"episode_number": 5, "name": "Ports are used to communicate with the external world.", "season": 136, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2013-07-28"}}, {"model": "core.episode", "pk": 1357, "fields": {"episode_number": 6, "name": "It is also a garbage-collected runtime system.", "season": 136, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2012-04-22"}}, {"model": "core.episode", "pk": 1358, "fields": {"episode_number": 7, "name": "Do you have any idea why this is not working?", "season": 136, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2031-08-09"}}, {"model": "core.episode", "pk": 1359, "fields": {"episode_number": 8, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 136, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2014-12-21"}}, {"model": "core.episode", "pk": 1360, "fields": {"episode_number": 9, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 136, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2001-04-14"}}, {"model": "core.episode", "pk": 1361, "fields": {"episode_number": 0, "name": "Do you have any idea why this is not working?", "season": 137, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2016-12-31"}}, {"model": "core.episode", "pk": 1362, "fields": {"episode_number": 1, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 137, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2034-01-04"}}, {"model": "core.episode", "pk": 1363, "fields": {"episode_number": 2, "name": "Erlang is a general-purpose, concurrent, functional programming language.", "season": 137, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2012-01-13"}}, {"model": "core.episode", "pk": 1364, "fields": {"episode_number": 3, "name": "Where are my pants?", "season": 137, "description": "Ports are created with the built-in function open_port.", "released_date": "2029-06-07"}}, {"model": "core.episode", "pk": 1365, "fields": {"episode_number": 4, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 137, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2008-12-05"}}, {"model": "core.episode", "pk": 1366, "fields": {"episode_number": 5, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 137, "description": "Do you have any idea why this is not working?", "released_date": "2014-12-02"}}, {"model": "core.episode", "pk": 1367, "fields": {"episode_number": 6, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 137, "description": "Make me a sandwich.", "released_date": "2005-04-22"}}, {"model": "core.episode", "pk": 1368, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 137, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2006-03-19"}}, {"model": "core.episode", "pk": 1369, "fields": {"episode_number": 8, "name": "Ports are used to communicate with the external world.", "season": 137, "description": "Ports are used to communicate with the external world.", "released_date": "2022-04-15"}}, {"model": "core.episode", "pk": 1370, "fields": {"episode_number": 9, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 137, "description": "Ports are used to communicate with the external world.", "released_date": "2015-06-02"}}, {"model": "core.episode", "pk": 1371, "fields": {"episode_number": 0, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 138, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2018-09-24"}}, {"model": "core.episode", "pk": 1372, "fields": {"episode_number": 1, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 138, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2030-11-19"}}, {"model": "core.episode", "pk": 1373, "fields": {"episode_number": 2, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 138, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2021-02-25"}}, {"model": "core.episode", "pk": 1374, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 138, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2006-08-13"}}, {"model": "core.episode", "pk": 1375, "fields": {"episode_number": 4, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 138, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2004-03-19"}}, {"model": "core.episode", "pk": 1376, "fields": {"episode_number": 5, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 138, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2028-09-21"}}, {"model": "core.episode", "pk": 1377, "fields": {"episode_number": 6, "name": "Erlang is known for its designs that are well suited for systems.", "season": 138, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2019-01-03"}}, {"model": "core.episode", "pk": 1378, "fields": {"episode_number": 7, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 138, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2006-07-02"}}, {"model": "core.episode", "pk": 1379, "fields": {"episode_number": 8, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 138, "description": "It is also a garbage-collected runtime system.", "released_date": "2035-12-27"}}, {"model": "core.episode", "pk": 1380, "fields": {"episode_number": 9, "name": "The arguments can be primitive data types or compound data types.", "season": 138, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2012-06-19"}}, {"model": "core.episode", "pk": 1381, "fields": {"episode_number": 0, "name": "Erlang is known for its designs that are well suited for systems.", "season": 139, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2012-02-12"}}, {"model": "core.episode", "pk": 1382, "fields": {"episode_number": 1, "name": "Where are my pants?", "season": 139, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2017-10-03"}}, {"model": "core.episode", "pk": 1383, "fields": {"episode_number": 2, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 139, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2024-12-28"}}, {"model": "core.episode", "pk": 1384, "fields": {"episode_number": 3, "name": "Any element of a tuple can be accessed in constant time.", "season": 139, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "released_date": "2019-02-08"}}, {"model": "core.episode", "pk": 1385, "fields": {"episode_number": 4, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 139, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2007-09-26"}}, {"model": "core.episode", "pk": 1386, "fields": {"episode_number": 5, "name": "It is also a garbage-collected runtime system.", "season": 139, "description": "Do you have any idea why this is not working?", "released_date": "2001-04-18"}}, {"model": "core.episode", "pk": 1387, "fields": {"episode_number": 6, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 139, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2026-08-27"}}, {"model": "core.episode", "pk": 1388, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 139, "description": "I don't even care.", "released_date": "2000-04-08"}}, {"model": "core.episode", "pk": 1389, "fields": {"episode_number": 8, "name": "The arguments can be primitive data types or compound data types.", "season": 139, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2003-01-08"}}, {"model": "core.episode", "pk": 1390, "fields": {"episode_number": 9, "name": "Do you have any idea why this is not working?", "season": 139, "description": "Do you come here often?", "released_date": "2014-08-25"}}, {"model": "core.episode", "pk": 1391, "fields": {"episode_number": 0, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 140, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2033-12-08"}}, {"model": "core.episode", "pk": 1392, "fields": {"episode_number": 1, "name": "Where are my pants?", "season": 140, "description": "Do you come here often?", "released_date": "2008-03-10"}}, {"model": "core.episode", "pk": 1393, "fields": {"episode_number": 2, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 140, "description": "Do you have any idea why this is not working?", "released_date": "2003-05-12"}}, {"model": "core.episode", "pk": 1394, "fields": {"episode_number": 3, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 140, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2006-12-09"}}, {"model": "core.episode", "pk": 1395, "fields": {"episode_number": 4, "name": "Ports are created with the built-in function open_port.", "season": 140, "description": "I don't even care.", "released_date": "2025-03-06"}}, {"model": "core.episode", "pk": 1396, "fields": {"episode_number": 5, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 140, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2034-07-23"}}, {"model": "core.episode", "pk": 1397, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 140, "description": "It is also a garbage-collected runtime system.", "released_date": "2015-04-12"}}, {"model": "core.episode", "pk": 1398, "fields": {"episode_number": 7, "name": "It is also a garbage-collected runtime system.", "season": 140, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2011-10-09"}}, {"model": "core.episode", "pk": 1399, "fields": {"episode_number": 8, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 140, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2020-02-01"}}, {"model": "core.episode", "pk": 1400, "fields": {"episode_number": 9, "name": "Where are my pants?", "season": 140, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2023-02-28"}}, {"model": "core.episode", "pk": 1401, "fields": {"episode_number": 0, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 141, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2034-03-12"}}, {"model": "core.episode", "pk": 1402, "fields": {"episode_number": 1, "name": "Type classes first appeared in the Haskell programming language.", "season": 141, "description": "Ports are created with the built-in function open_port.", "released_date": "2000-11-02"}}, {"model": "core.episode", "pk": 1403, "fields": {"episode_number": 2, "name": "Any element of a tuple can be accessed in constant time.", "season": 141, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2004-10-10"}}, {"model": "core.episode", "pk": 1404, "fields": {"episode_number": 3, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 141, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2014-02-14"}}, {"model": "core.episode", "pk": 1405, "fields": {"episode_number": 4, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 141, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2035-02-22"}}, {"model": "core.episode", "pk": 1406, "fields": {"episode_number": 5, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 141, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2020-06-02"}}, {"model": "core.episode", "pk": 1407, "fields": {"episode_number": 6, "name": "Type classes first appeared in the Haskell programming language.", "season": 141, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2012-02-16"}}, {"model": "core.episode", "pk": 1408, "fields": {"episode_number": 7, "name": "Do you come here often?", "season": 141, "description": "Erlang is known for its designs that are well suited for systems.", "released_date": "2029-03-11"}}, {"model": "core.episode", "pk": 1409, "fields": {"episode_number": 8, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 141, "description": "Make me a sandwich.", "released_date": "2018-12-08"}}, {"model": "core.episode", "pk": 1410, "fields": {"episode_number": 9, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 141, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2005-01-17"}}, {"model": "core.episode", "pk": 1411, "fields": {"episode_number": 0, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 142, "description": "Ports are used to communicate with the external world.", "released_date": "2019-05-14"}}, {"model": "core.episode", "pk": 1412, "fields": {"episode_number": 1, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 142, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "released_date": "2012-01-01"}}, {"model": "core.episode", "pk": 1413, "fields": {"episode_number": 2, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 142, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "released_date": "2022-09-18"}}, {"model": "core.episode", "pk": 1414, "fields": {"episode_number": 3, "name": "Where are my pants?", "season": 142, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2012-04-27"}}, {"model": "core.episode", "pk": 1415, "fields": {"episode_number": 4, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 142, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2009-12-16"}}, {"model": "core.episode", "pk": 1416, "fields": {"episode_number": 5, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 142, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2019-02-21"}}, {"model": "core.episode", "pk": 1417, "fields": {"episode_number": 6, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 142, "description": "Do you have any idea why this is not working?", "released_date": "2018-12-29"}}, {"model": "core.episode", "pk": 1418, "fields": {"episode_number": 7, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 142, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2004-04-17"}}, {"model": "core.episode", "pk": 1419, "fields": {"episode_number": 8, "name": "It is also a garbage-collected runtime system.", "season": 142, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2016-12-20"}}, {"model": "core.episode", "pk": 1420, "fields": {"episode_number": 9, "name": "I don't even care.", "season": 142, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2002-09-04"}}, {"model": "core.episode", "pk": 1421, "fields": {"episode_number": 0, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 143, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2031-08-03"}}, {"model": "core.episode", "pk": 1422, "fields": {"episode_number": 1, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 143, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2011-12-06"}}, {"model": "core.episode", "pk": 1423, "fields": {"episode_number": 2, "name": "Where are my pants?", "season": 143, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2019-02-07"}}, {"model": "core.episode", "pk": 1424, "fields": {"episode_number": 3, "name": "Erlang is known for its designs that are well suited for systems.", "season": 143, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2007-06-25"}}, {"model": "core.episode", "pk": 1425, "fields": {"episode_number": 4, "name": "Ports are used to communicate with the external world.", "season": 143, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2001-03-06"}}, {"model": "core.episode", "pk": 1426, "fields": {"episode_number": 5, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 143, "description": "Tuples are containers for a fixed number of Erlang data types.", "released_date": "2008-12-13"}}, {"model": "core.episode", "pk": 1427, "fields": {"episode_number": 6, "name": "I don't even care.", "season": 143, "description": "Do you come here often?", "released_date": "2025-12-03"}}, {"model": "core.episode", "pk": 1428, "fields": {"episode_number": 7, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 143, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "released_date": "2035-08-10"}}, {"model": "core.episode", "pk": 1429, "fields": {"episode_number": 8, "name": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "season": 143, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2018-04-23"}}, {"model": "core.episode", "pk": 1430, "fields": {"episode_number": 9, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 143, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2006-03-15"}}, {"model": "core.episode", "pk": 1431, "fields": {"episode_number": 0, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 144, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "released_date": "2005-05-21"}}, {"model": "core.episode", "pk": 1432, "fields": {"episode_number": 1, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 144, "description": "Its main implementation is the Glasgow Haskell Compiler.", "released_date": "2009-09-18"}}, {"model": "core.episode", "pk": 1433, "fields": {"episode_number": 2, "name": "Do you come here often?", "season": 144, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2012-11-12"}}, {"model": "core.episode", "pk": 1434, "fields": {"episode_number": 3, "name": "Where are my pants?", "season": 144, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2016-07-15"}}, {"model": "core.episode", "pk": 1435, "fields": {"episode_number": 4, "name": "Atoms are used within a program to denote distinguished values.", "season": 144, "description": "Ports are created with the built-in function open_port.", "released_date": "2008-06-25"}}, {"model": "core.episode", "pk": 1436, "fields": {"episode_number": 5, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 144, "description": "I don't even care.", "released_date": "2007-05-01"}}, {"model": "core.episode", "pk": 1437, "fields": {"episode_number": 6, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 144, "description": "Do you come here often?", "released_date": "2014-01-10"}}, {"model": "core.episode", "pk": 1438, "fields": {"episode_number": 7, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 144, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2032-11-29"}}, {"model": "core.episode", "pk": 1439, "fields": {"episode_number": 8, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 144, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2003-08-23"}}, {"model": "core.episode", "pk": 1440, "fields": {"episode_number": 9, "name": "Where are my pants?", "season": 144, "description": "The arguments can be primitive data types or compound data types.", "released_date": "2014-10-11"}}, {"model": "core.episode", "pk": 1441, "fields": {"episode_number": 0, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 145, "description": "Atoms are used within a program to denote distinguished values.", "released_date": "2035-03-16"}}, {"model": "core.episode", "pk": 1442, "fields": {"episode_number": 1, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 145, "description": "Ports are used to communicate with the external world.", "released_date": "2019-11-08"}}, {"model": "core.episode", "pk": 1443, "fields": {"episode_number": 2, "name": "Type classes first appeared in the Haskell programming language.", "season": 145, "description": "Do you come here often?", "released_date": "2023-08-19"}}, {"model": "core.episode", "pk": 1444, "fields": {"episode_number": 3, "name": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "season": 145, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2006-02-17"}}, {"model": "core.episode", "pk": 1445, "fields": {"episode_number": 4, "name": "It is also a garbage-collected runtime system.", "season": 145, "description": "Do you have any idea why this is not working?", "released_date": "2002-07-04"}}, {"model": "core.episode", "pk": 1446, "fields": {"episode_number": 5, "name": "Make me a sandwich.", "season": 145, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2000-01-11"}}, {"model": "core.episode", "pk": 1447, "fields": {"episode_number": 6, "name": "I don't even care.", "season": 145, "description": "I don't even care.", "released_date": "2025-09-12"}}, {"model": "core.episode", "pk": 1448, "fields": {"episode_number": 7, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 145, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2029-04-29"}}, {"model": "core.episode", "pk": 1449, "fields": {"episode_number": 8, "name": "Ports are created with the built-in function open_port.", "season": 145, "description": "Where are my pants?", "released_date": "2023-01-25"}}, {"model": "core.episode", "pk": 1450, "fields": {"episode_number": 9, "name": "Ports are used to communicate with the external world.", "season": 145, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2021-04-06"}}, {"model": "core.episode", "pk": 1451, "fields": {"episode_number": 0, "name": "Ports are created with the built-in function open_port.", "season": 146, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2009-12-31"}}, {"model": "core.episode", "pk": 1452, "fields": {"episode_number": 1, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 146, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2014-12-21"}}, {"model": "core.episode", "pk": 1453, "fields": {"episode_number": 2, "name": "Any element of a tuple can be accessed in constant time.", "season": 146, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2031-03-21"}}, {"model": "core.episode", "pk": 1454, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 146, "description": "Do you come here often?", "released_date": "2019-11-23"}}, {"model": "core.episode", "pk": 1455, "fields": {"episode_number": 4, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 146, "description": "Do you have any idea why this is not working?", "released_date": "2013-11-24"}}, {"model": "core.episode", "pk": 1456, "fields": {"episode_number": 5, "name": "Haskell features a type system with type inference and lazy evaluation.", "season": 146, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "released_date": "2030-03-07"}}, {"model": "core.episode", "pk": 1457, "fields": {"episode_number": 6, "name": "The arguments can be primitive data types or compound data types.", "season": 146, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2012-03-18"}}, {"model": "core.episode", "pk": 1458, "fields": {"episode_number": 7, "name": "Atoms are used within a program to denote distinguished values.", "season": 146, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "released_date": "2017-01-09"}}, {"model": "core.episode", "pk": 1459, "fields": {"episode_number": 8, "name": "She spent her earliest years reading classic literature, and writing poetry.", "season": 146, "description": "Where are my pants?", "released_date": "2030-07-26"}}, {"model": "core.episode", "pk": 1460, "fields": {"episode_number": 9, "name": "Ports are used to communicate with the external world.", "season": 146, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2028-11-27"}}, {"model": "core.episode", "pk": 1461, "fields": {"episode_number": 0, "name": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "season": 147, "description": "It is also a garbage-collected runtime system.", "released_date": "2020-07-09"}}, {"model": "core.episode", "pk": 1462, "fields": {"episode_number": 1, "name": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "season": 147, "description": "She spent her earliest years reading classic literature, and writing poetry.", "released_date": "2006-08-22"}}, {"model": "core.episode", "pk": 1463, "fields": {"episode_number": 2, "name": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "season": 147, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2010-03-07"}}, {"model": "core.episode", "pk": 1464, "fields": {"episode_number": 3, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 147, "description": "I don't even care.", "released_date": "2015-06-09"}}, {"model": "core.episode", "pk": 1465, "fields": {"episode_number": 4, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 147, "description": "Any element of a tuple can be accessed in constant time.", "released_date": "2023-02-23"}}, {"model": "core.episode", "pk": 1466, "fields": {"episode_number": 5, "name": "Its main implementation is the Glasgow Haskell Compiler.", "season": 147, "description": "Make me a sandwich.", "released_date": "2004-02-10"}}, {"model": "core.episode", "pk": 1467, "fields": {"episode_number": 6, "name": "Do you come here often?", "season": 147, "description": "Ports are used to communicate with the external world.", "released_date": "2027-09-06"}}, {"model": "core.episode", "pk": 1468, "fields": {"episode_number": 7, "name": "Type classes first appeared in the Haskell programming language.", "season": 147, "description": "Make me a sandwich.", "released_date": "2028-01-24"}}, {"model": "core.episode", "pk": 1469, "fields": {"episode_number": 8, "name": "Erlang is known for its designs that are well suited for systems.", "season": 147, "description": "Ports are used to communicate with the external world.", "released_date": "2011-05-21"}}, {"model": "core.episode", "pk": 1470, "fields": {"episode_number": 9, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 147, "description": "Do you come here often?", "released_date": "2004-07-14"}}, {"model": "core.episode", "pk": 1471, "fields": {"episode_number": 0, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 148, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "released_date": "2019-01-09"}}, {"model": "core.episode", "pk": 1472, "fields": {"episode_number": 1, "name": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "season": 148, "description": "Do you come here often?", "released_date": "2023-02-09"}}, {"model": "core.episode", "pk": 1473, "fields": {"episode_number": 2, "name": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "season": 148, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "released_date": "2012-02-04"}}, {"model": "core.episode", "pk": 1474, "fields": {"episode_number": 3, "name": "Tuples are containers for a fixed number of Erlang data types.", "season": 148, "description": "Where are my pants?", "released_date": "2003-12-01"}}, {"model": "core.episode", "pk": 1475, "fields": {"episode_number": 4, "name": "The arguments can be primitive data types or compound data types.", "season": 148, "description": "Haskell features a type system with type inference and lazy evaluation.", "released_date": "2027-08-30"}}, {"model": "core.episode", "pk": 1476, "fields": {"episode_number": 5, "name": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "season": 148, "description": "Type classes first appeared in the Haskell programming language.", "released_date": "2006-11-20"}}, {"model": "core.episode", "pk": 1477, "fields": {"episode_number": 6, "name": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "season": 148, "description": "Where are my pants?", "released_date": "2026-01-28"}}, {"model": "core.episode", "pk": 1478, "fields": {"episode_number": 7, "name": "Ports are used to communicate with the external world.", "season": 148, "description": "Do you have any idea why this is not working?", "released_date": "2029-03-28"}}, {"model": "core.episode", "pk": 1479, "fields": {"episode_number": 8, "name": "He looked inquisitively at his keyboard and wrote another sentence.", "season": 148, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "released_date": "2016-10-24"}}, {"model": "core.episode", "pk": 1480, "fields": {"episode_number": 9, "name": "Any element of a tuple can be accessed in constant time.", "season": 148, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "released_date": "2021-12-13"}}, {"model": "core.season", "pk": 2, "fields": {"season_number": 32, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 12}}, {"model": "core.season", "pk": 16, "fields": {"season_number": 0, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "show": 3}}, {"model": "core.season", "pk": 17, "fields": {"season_number": 1, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "show": 3}}, {"model": "core.season", "pk": 18, "fields": {"season_number": 2, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "show": 3}}, {"model": "core.season", "pk": 19, "fields": {"season_number": 3, "description": "Tuples are containers for a fixed number of Erlang data types.", "show": 3}}, {"model": "core.season", "pk": 20, "fields": {"season_number": 4, "description": "Tuples are containers for a fixed number of Erlang data types.", "show": 3}}, {"model": "core.season", "pk": 21, "fields": {"season_number": 5, "description": "Do you have any idea why this is not working?", "show": 3}}, {"model": "core.season", "pk": 22, "fields": {"season_number": 6, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "show": 3}}, {"model": "core.season", "pk": 24, "fields": {"season_number": 0, "description": "Make me a sandwich.", "show": 4}}, {"model": "core.season", "pk": 25, "fields": {"season_number": 1, "description": "I don't even care.", "show": 4}}, {"model": "core.season", "pk": 26, "fields": {"season_number": 2, "description": "Any element of a tuple can be accessed in constant time.", "show": 4}}, {"model": "core.season", "pk": 27, "fields": {"season_number": 3, "description": "Any element of a tuple can be accessed in constant time.", "show": 4}}, {"model": "core.season", "pk": 28, "fields": {"season_number": 4, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "show": 4}}, {"model": "core.season", "pk": 29, "fields": {"season_number": 5, "description": "Make me a sandwich.", "show": 4}}, {"model": "core.season", "pk": 30, "fields": {"season_number": 6, "description": "Do you have any idea why this is not working?", "show": 4}}, {"model": "core.season", "pk": 31, "fields": {"season_number": 7, "description": "She spent her earliest years reading classic literature, and writing poetry.", "show": 4}}, {"model": "core.season", "pk": 32, "fields": {"season_number": 8, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "show": 4}}, {"model": "core.season", "pk": 33, "fields": {"season_number": 0, "description": "Tuples are containers for a fixed number of Erlang data types.", "show": 5}}, {"model": "core.season", "pk": 34, "fields": {"season_number": 1, "description": "Make me a sandwich.", "show": 5}}, {"model": "core.season", "pk": 35, "fields": {"season_number": 2, "description": "Type classes first appeared in the Haskell programming language.", "show": 5}}, {"model": "core.season", "pk": 36, "fields": {"season_number": 3, "description": "Ports are used to communicate with the external world.", "show": 5}}, {"model": "core.season", "pk": 37, "fields": {"season_number": 4, "description": "Ports are used to communicate with the external world.", "show": 5}}, {"model": "core.season", "pk": 38, "fields": {"season_number": 5, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "show": 5}}, {"model": "core.season", "pk": 39, "fields": {"season_number": 6, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "show": 5}}, {"model": "core.season", "pk": 40, "fields": {"season_number": 0, "description": "Make me a sandwich.", "show": 6}}, {"model": "core.season", "pk": 41, "fields": {"season_number": 1, "description": "The arguments can be primitive data types or compound data types.", "show": 6}}, {"model": "core.season", "pk": 42, "fields": {"season_number": 2, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "show": 6}}, {"model": "core.season", "pk": 43, "fields": {"season_number": 3, "description": "Ports are created with the built-in function open_port.", "show": 6}}, {"model": "core.season", "pk": 44, "fields": {"season_number": 4, "description": "The arguments can be primitive data types or compound data types.", "show": 6}}, {"model": "core.season", "pk": 45, "fields": {"season_number": 5, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "show": 6}}, {"model": "core.season", "pk": 46, "fields": {"season_number": 6, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "show": 6}}, {"model": "core.season", "pk": 47, "fields": {"season_number": 7, "description": "Do you have any idea why this is not working?", "show": 6}}, {"model": "core.season", "pk": 48, "fields": {"season_number": 8, "description": "Where are my pants?", "show": 6}}, {"model": "core.season", "pk": 49, "fields": {"season_number": 9, "description": "It is also a garbage-collected runtime system.", "show": 6}}, {"model": "core.season", "pk": 50, "fields": {"season_number": 0, "description": "Do you come here often?", "show": 7}}, {"model": "core.season", "pk": 51, "fields": {"season_number": 1, "description": "Haskell features a type system with type inference and lazy evaluation.", "show": 7}}, {"model": "core.season", "pk": 52, "fields": {"season_number": 2, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "show": 7}}, {"model": "core.season", "pk": 53, "fields": {"season_number": 3, "description": "The arguments can be primitive data types or compound data types.", "show": 7}}, {"model": "core.season", "pk": 54, "fields": {"season_number": 4, "description": "Do you come here often?", "show": 7}}, {"model": "core.season", "pk": 55, "fields": {"season_number": 5, "description": "Ports are created with the built-in function open_port.", "show": 7}}, {"model": "core.season", "pk": 56, "fields": {"season_number": 6, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "show": 7}}, {"model": "core.season", "pk": 57, "fields": {"season_number": 7, "description": "It is also a garbage-collected runtime system.", "show": 7}}, {"model": "core.season", "pk": 58, "fields": {"season_number": 8, "description": "She spent her earliest years reading classic literature, and writing poetry.", "show": 7}}, {"model": "core.season", "pk": 59, "fields": {"season_number": 0, "description": "Where are my pants?", "show": 8}}, {"model": "core.season", "pk": 60, "fields": {"season_number": 1, "description": "Tuples are containers for a fixed number of Erlang data types.", "show": 8}}, {"model": "core.season", "pk": 61, "fields": {"season_number": 2, "description": "Ports are created with the built-in function open_port.", "show": 8}}, {"model": "core.season", "pk": 62, "fields": {"season_number": 3, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "show": 8}}, {"model": "core.season", "pk": 63, "fields": {"season_number": 4, "description": "Haskell features a type system with type inference and lazy evaluation.", "show": 8}}, {"model": "core.season", "pk": 64, "fields": {"season_number": 5, "description": "Ports are created with the built-in function open_port.", "show": 8}}, {"model": "core.season", "pk": 65, "fields": {"season_number": 6, "description": "She spent her earliest years reading classic literature, and writing poetry.", "show": 8}}, {"model": "core.season", "pk": 66, "fields": {"season_number": 7, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "show": 8}}, {"model": "core.season", "pk": 67, "fields": {"season_number": 8, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 8}}, {"model": "core.season", "pk": 68, "fields": {"season_number": 0, "description": "Ports are used to communicate with the external world.", "show": 9}}, {"model": "core.season", "pk": 69, "fields": {"season_number": 1, "description": "It is also a garbage-collected runtime system.", "show": 9}}, {"model": "core.season", "pk": 70, "fields": {"season_number": 2, "description": "Where are my pants?", "show": 9}}, {"model": "core.season", "pk": 71, "fields": {"season_number": 3, "description": "Do you come here often?", "show": 9}}, {"model": "core.season", "pk": 72, "fields": {"season_number": 4, "description": "Do you have any idea why this is not working?", "show": 9}}, {"model": "core.season", "pk": 73, "fields": {"season_number": 5, "description": "Do you have any idea why this is not working?", "show": 9}}, {"model": "core.season", "pk": 74, "fields": {"season_number": 6, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "show": 9}}, {"model": "core.season", "pk": 75, "fields": {"season_number": 0, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 10}}, {"model": "core.season", "pk": 76, "fields": {"season_number": 1, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "show": 10}}, {"model": "core.season", "pk": 77, "fields": {"season_number": 2, "description": "Type classes first appeared in the Haskell programming language.", "show": 10}}, {"model": "core.season", "pk": 78, "fields": {"season_number": 3, "description": "They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "show": 10}}, {"model": "core.season", "pk": 79, "fields": {"season_number": 4, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "show": 10}}, {"model": "core.season", "pk": 80, "fields": {"season_number": 0, "description": "It is also a garbage-collected runtime system.", "show": 11}}, {"model": "core.season", "pk": 81, "fields": {"season_number": 1, "description": "It is also a garbage-collected runtime system.", "show": 11}}, {"model": "core.season", "pk": 82, "fields": {"season_number": 2, "description": "I don't even care.", "show": 11}}, {"model": "core.season", "pk": 83, "fields": {"season_number": 3, "description": "Where are my pants?", "show": 11}}, {"model": "core.season", "pk": 84, "fields": {"season_number": 4, "description": "The arguments can be primitive data types or compound data types.", "show": 11}}, {"model": "core.season", "pk": 85, "fields": {"season_number": 5, "description": "Ports are used to communicate with the external world.", "show": 11}}, {"model": "core.season", "pk": 86, "fields": {"season_number": 0, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "show": 12}}, {"model": "core.season", "pk": 87, "fields": {"season_number": 1, "description": "Atoms are used within a program to denote distinguished values.", "show": 12}}, {"model": "core.season", "pk": 88, "fields": {"season_number": 2, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 12}}, {"model": "core.season", "pk": 89, "fields": {"season_number": 3, "description": "I don't even care.", "show": 12}}, {"model": "core.season", "pk": 90, "fields": {"season_number": 4, "description": "Make me a sandwich.", "show": 12}}, {"model": "core.season", "pk": 91, "fields": {"season_number": 0, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "show": 13}}, {"model": "core.season", "pk": 92, "fields": {"season_number": 1, "description": "Ports are used to communicate with the external world.", "show": 13}}, {"model": "core.season", "pk": 93, "fields": {"season_number": 2, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "show": 13}}, {"model": "core.season", "pk": 94, "fields": {"season_number": 3, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "show": 13}}, {"model": "core.season", "pk": 95, "fields": {"season_number": 4, "description": "Do you come here often?", "show": 13}}, {"model": "core.season", "pk": 96, "fields": {"season_number": 5, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 13}}, {"model": "core.season", "pk": 97, "fields": {"season_number": 6, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "show": 13}}, {"model": "core.season", "pk": 98, "fields": {"season_number": 7, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "show": 13}}, {"model": "core.season", "pk": 99, "fields": {"season_number": 0, "description": "Ports are used to communicate with the external world.", "show": 14}}, {"model": "core.season", "pk": 100, "fields": {"season_number": 1, "description": "Type classes first appeared in the Haskell programming language.", "show": 14}}, {"model": "core.season", "pk": 101, "fields": {"season_number": 2, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "show": 14}}, {"model": "core.season", "pk": 102, "fields": {"season_number": 3, "description": "Type classes first appeared in the Haskell programming language.", "show": 14}}, {"model": "core.season", "pk": 103, "fields": {"season_number": 4, "description": "Type classes first appeared in the Haskell programming language.", "show": 14}}, {"model": "core.season", "pk": 104, "fields": {"season_number": 5, "description": "The arguments can be primitive data types or compound data types.", "show": 14}}, {"model": "core.season", "pk": 105, "fields": {"season_number": 6, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "show": 14}}, {"model": "core.season", "pk": 106, "fields": {"season_number": 7, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "show": 14}}, {"model": "core.season", "pk": 107, "fields": {"season_number": 8, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "show": 14}}, {"model": "core.season", "pk": 108, "fields": {"season_number": 0, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 15}}, {"model": "core.season", "pk": 109, "fields": {"season_number": 1, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "show": 15}}, {"model": "core.season", "pk": 110, "fields": {"season_number": 2, "description": "It is also a garbage-collected runtime system.", "show": 15}}, {"model": "core.season", "pk": 111, "fields": {"season_number": 3, "description": "Haskell features a type system with type inference and lazy evaluation.", "show": 15}}, {"model": "core.season", "pk": 112, "fields": {"season_number": 4, "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\"", "show": 15}}, {"model": "core.season", "pk": 113, "fields": {"season_number": 0, "description": "I don't even care.", "show": 16}}, {"model": "core.season", "pk": 114, "fields": {"season_number": 1, "description": "She spent her earliest years reading classic literature, and writing poetry.", "show": 16}}, {"model": "core.season", "pk": 115, "fields": {"season_number": 2, "description": "It is also a garbage-collected runtime system.", "show": 16}}, {"model": "core.season", "pk": 116, "fields": {"season_number": 3, "description": "The arguments can be primitive data types or compound data types.", "show": 16}}, {"model": "core.season", "pk": 117, "fields": {"season_number": 4, "description": "She spent her earliest years reading classic literature, and writing poetry.", "show": 16}}, {"model": "core.season", "pk": 118, "fields": {"season_number": 5, "description": "Where are my pants?", "show": 16}}, {"model": "core.season", "pk": 119, "fields": {"season_number": 6, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "show": 16}}, {"model": "core.season", "pk": 120, "fields": {"season_number": 7, "description": "He looked inquisitively at his keyboard and wrote another sentence.", "show": 16}}, {"model": "core.season", "pk": 121, "fields": {"season_number": 8, "description": "Its main implementation is the Glasgow Haskell Compiler.", "show": 16}}, {"model": "core.season", "pk": 122, "fields": {"season_number": 9, "description": "Do you have any idea why this is not working?", "show": 16}}, {"model": "core.season", "pk": 123, "fields": {"season_number": 0, "description": "Type classes first appeared in the Haskell programming language.", "show": 17}}, {"model": "core.season", "pk": 124, "fields": {"season_number": 1, "description": "The arguments can be primitive data types or compound data types.", "show": 17}}, {"model": "core.season", "pk": 125, "fields": {"season_number": 2, "description": "Make me a sandwich.", "show": 17}}, {"model": "core.season", "pk": 126, "fields": {"season_number": 3, "description": "Haskell features a type system with type inference and lazy evaluation.", "show": 17}}, {"model": "core.season", "pk": 127, "fields": {"season_number": 4, "description": "Erlang is known for its designs that are well suited for systems.", "show": 17}}, {"model": "core.season", "pk": 128, "fields": {"season_number": 5, "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "show": 17}}, {"model": "core.season", "pk": 129, "fields": {"season_number": 0, "description": "Where are my pants?", "show": 18}}, {"model": "core.season", "pk": 130, "fields": {"season_number": 1, "description": "Do you have any idea why this is not working?", "show": 18}}, {"model": "core.season", "pk": 131, "fields": {"season_number": 2, "description": "Tuples are containers for a fixed number of Erlang data types.", "show": 18}}, {"model": "core.season", "pk": 132, "fields": {"season_number": 3, "description": "Erlang is a general-purpose, concurrent, functional programming language.", "show": 18}}, {"model": "core.season", "pk": 133, "fields": {"season_number": 4, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "show": 18}}, {"model": "core.season", "pk": 134, "fields": {"season_number": 5, "description": "Type classes first appeared in the Haskell programming language.", "show": 18}}, {"model": "core.season", "pk": 135, "fields": {"season_number": 6, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 18}}, {"model": "core.season", "pk": 136, "fields": {"season_number": 7, "description": "Make me a sandwich.", "show": 18}}, {"model": "core.season", "pk": 137, "fields": {"season_number": 8, "description": "Its main implementation is the Glasgow Haskell Compiler.", "show": 18}}, {"model": "core.season", "pk": 138, "fields": {"season_number": 9, "description": "She spent her earliest years reading classic literature, and writing poetry.", "show": 18}}, {"model": "core.season", "pk": 139, "fields": {"season_number": 0, "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "show": 19}}, {"model": "core.season", "pk": 140, "fields": {"season_number": 1, "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "show": 19}}, {"model": "core.season", "pk": 141, "fields": {"season_number": 2, "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "show": 19}}, {"model": "core.season", "pk": 142, "fields": {"season_number": 3, "description": "I don't even care.", "show": 19}}, {"model": "core.season", "pk": 143, "fields": {"season_number": 4, "description": "The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "show": 19}}, {"model": "core.season", "pk": 144, "fields": {"season_number": 0, "description": "Do you have any idea why this is not working?", "show": 20}}, {"model": "core.season", "pk": 145, "fields": {"season_number": 1, "description": "In 1989 the building was heavily damaged by fire, but it has since been restored.", "show": 20}}, {"model": "core.season", "pk": 146, "fields": {"season_number": 2, "description": "Do you come here often?", "show": 20}}, {"model": "core.season", "pk": 147, "fields": {"season_number": 3, "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.", "show": 20}}, {"model": "core.season", "pk": 148, "fields": {"season_number": 4, "description": "Erlang is known for its designs that are well suited for systems.", "show": 20}}, {"model": "core.person", "pk": 1, "fields": {"password": "pbkdf2_sha256$100000$utxi6akjo2Xb$B23HSXvPc7p6O8BOWjvhCKDSTh9yFcuHElgDw+dEwBk=", "last_login": null, "is_superuser": false, "username": "lectures.1883", "first_name": "Arnulfo", "last_name": "Ball", "email": "alveolate1972@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.085Z", "birth_date": "2003-04-22", "gender": "M", "country": "Algeria", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 3, "fields": {"password": "pbkdf2_sha256$100000$AaED1cpxERNe$319DyliD9geyjHS8dJhURgPFDGEXUeXQWIXjgxPX1vk=", "last_login": null, "is_superuser": false, "username": "AdirondackNone.1854", "first_name": "Carmelio", "last_name": "Cole", "email": "kakapo1823@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.259Z", "birth_date": "2005-01-31", "gender": "M", "country": "Vanuatu", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 4, "fields": {"password": "pbkdf2_sha256$100000$1ehoXBDOYocI$wzm9NFns9WAByP5/85GXCfaKtg546WsVa0MODGFy/OM=", "last_login": null, "is_superuser": false, "username": "dhava_2065", "first_name": "Sherise", "last_name": "Levine", "email": "darrin1859@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.335Z", "birth_date": "2024-12-09", "gender": "F", "country": "Philippines", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 5, "fields": {"password": "pbkdf2_sha256$100000$bfaodPf9kZrn$4qfA72tVfNGON8oNrGKnESNff8ggN5/GtVZ5Tn4JBac=", "last_login": null, "is_superuser": false, "username": "eduard1876", "first_name": "Delinda", "last_name": "Mcknight", "email": "bigwig2066@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.411Z", "birth_date": "2006-05-20", "gender": "F", "country": "Swaziland", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 6, "fields": {"password": "pbkdf2_sha256$100000$KaDCDFeuiUif$FOOUkOV4Dlto7LIWeherHnmPaQAjG9pRflBEJSzFzEA=", "last_login": null, "is_superuser": false, "username": "calefacient.1861", "first_name": "Eugene", "last_name": "Macias", "email": "scoot1998@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.486Z", "birth_date": "2003-10-24", "gender": "F", "country": "El Salvador", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 7, "fields": {"password": "pbkdf2_sha256$100000$sdQGLnOk1GjV$t8NriiFAW0d+dF/BiZ8ntE/Pb6qabjmK+JR2JHW6Cpc=", "last_login": null, "is_superuser": false, "username": "puma-2062", "first_name": "Jerrell", "last_name": "Trevino", "email": "alien1849@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.560Z", "birth_date": "2031-10-15", "gender": "M", "country": "Wallis & Futuna", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 8, "fields": {"password": "pbkdf2_sha256$100000$n2FxJRMFHfs0$e13DZ6PXJ5ime8LYr8m2jfjg9KY2e7NkHx3RLFwVu+E=", "last_login": null, "is_superuser": false, "username": "Boose-1840", "first_name": "Jame", "last_name": "Gardner", "email": "scintillator1855@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.635Z", "birth_date": "2029-03-10", "gender": "M", "country": "Azerbaijan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 9, "fields": {"password": "pbkdf2_sha256$100000$E7ajV1EjrHmU$fjcfmvrw4+Coc5T/qzNRAxbPg96jbyF3WulaDtrxiRE=", "last_login": null, "is_superuser": false, "username": "PeeryNone-1898", "first_name": "Sumiko", "last_name": "Salinas", "email": "breaststroker2026@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.710Z", "birth_date": "2008-09-15", "gender": "F", "country": "St. Vincent & Grenadines", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 10, "fields": {"password": "pbkdf2_sha256$100000$TUtDhUAUf5s1$OUIdC/jWCsP+vtzdVLz87ysNlZsCWinGDUXgiUB6ktg=", "last_login": null, "is_superuser": false, "username": "Birretta.1864", "first_name": "Darrell", "last_name": "Mcleod", "email": "aggregat1948@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.785Z", "birth_date": "2018-10-15", "gender": "M", "country": "Egypt", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 11, "fields": {"password": "pbkdf2_sha256$100000$XFU5M7DIR2B2$zqqNadwEtd0i9oZZlcc6W7l7gGdsGnS/8bPUAUUUqyM=", "last_login": null, "is_superuser": false, "username": "Anime-1844", "first_name": "Amos", "last_name": "Hurst", "email": "centrefolds1987@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.859Z", "birth_date": "2029-05-13", "gender": "M", "country": "Cook Islands", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 12, "fields": {"password": "pbkdf2_sha256$100000$Plwc19j0BSv0$YhJJgva+7X24klHDdcU1PYCgpMO0q+aaRq2h0fjMavM=", "last_login": null, "is_superuser": false, "username": "Catbird-1860", "first_name": "Denny", "last_name": "Matthews", "email": "exaggerating1860@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:57.935Z", "birth_date": "2012-10-01", "gender": "M", "country": "Guinea", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 13, "fields": {"password": "pbkdf2_sha256$100000$Tnb6PyxsYFbn$fWfD6B9/K8uKD6GgnwuKLdlTLnqDCKExHbSeEstGEdM=", "last_login": null, "is_superuser": false, "username": "AbaftNone-2048", "first_name": "Lloyd", "last_name": "Cannon", "email": "demijohn1975@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.010Z", "birth_date": "2035-10-03", "gender": "M", "country": "Gabon", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 14, "fields": {"password": "pbkdf2_sha256$100000$v55xpG0bHM8n$+mrhAdrLCIUyFFN9b5S4iWytS8JsetTWQGLF4O7LVzA=", "last_login": null, "is_superuser": false, "username": "chivalric.1998", "first_name": "Terrance", "last_name": "Austin", "email": "brose1891@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.085Z", "birth_date": "2013-04-22", "gender": "M", "country": "Zambia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 15, "fields": {"password": "pbkdf2_sha256$100000$XW1QktACo4MP$RA2N4linGPrCHdmhy8Uk7s3kfYYLxlTqBRk9ovSB8so=", "last_login": null, "is_superuser": false, "username": "Avuncular1988", "first_name": "Eldridge", "last_name": "Davenport", "email": "index1847@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.159Z", "birth_date": "2006-09-25", "gender": "M", "country": "Senegal", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 16, "fields": {"password": "pbkdf2_sha256$100000$moirpeZURMHZ$hmyoxX7nGVbiW2XkkUlLTjA9zVESG+2P1C3v4SS2bzI=", "last_login": null, "is_superuser": false, "username": "Diablo2006", "first_name": "Bulah", "last_name": "Butler", "email": "champing1842@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.237Z", "birth_date": "2023-05-29", "gender": "F", "country": "Angola", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 17, "fields": {"password": "pbkdf2_sha256$100000$aQTTUxCj9eVb$JzjTC7RUS8NlDzyaE2VmRMG78CZygpC5Eyc1nEMA3ec=", "last_login": null, "is_superuser": false, "username": "canadian_1991", "first_name": "Damion", "last_name": "Robertson", "email": "dewdrop2038@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.312Z", "birth_date": "2011-03-27", "gender": "M", "country": "Burkina Faso", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 18, "fields": {"password": "pbkdf2_sha256$100000$KSTbPrj8a06j$QzQ8wrL0TvDMcveqAPr4totReG31uyIOIYIFWerp0Yg=", "last_login": null, "is_superuser": false, "username": "elvira.2029", "first_name": "Aurelio", "last_name": "Matthews", "email": "exordia1977@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.387Z", "birth_date": "2031-01-07", "gender": "M", "country": "Cape Verde", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 19, "fields": {"password": "pbkdf2_sha256$100000$fvHWOAR54GmQ$rxS+1pBljE78hv5I1NjWWaUq5sz0zocFpbVt6yGIyYk=", "last_login": null, "is_superuser": false, "username": "Chalumeau.1929", "first_name": "Domenic", "last_name": "Chandler", "email": "scissor2047@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.461Z", "birth_date": "2033-06-09", "gender": "M", "country": "Palau", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 20, "fields": {"password": "pbkdf2_sha256$100000$NEYu4otBXXcn$Uf/sqQvsDVhu6UFHl4Ies1LO4OxLORN7HGSwM1i0zTo=", "last_login": null, "is_superuser": false, "username": "dabber2018", "first_name": "Dimple", "last_name": "Calhoun", "email": "edsel1996@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.537Z", "birth_date": "2009-09-13", "gender": "F", "country": "Cocos", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 21, "fields": {"password": "pbkdf2_sha256$100000$YNpnUV34Tie1$ySLcnHKc2sQf6drdP4QQFNWpys1K+NxaFyve0rFcx4U=", "last_login": null, "is_superuser": false, "username": "beland.2035", "first_name": "Genny", "last_name": "Vang", "email": "kiwifruit1873@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.612Z", "birth_date": "2015-12-01", "gender": "F", "country": "El Salvador", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 22, "fields": {"password": "pbkdf2_sha256$100000$mNbN9r6JiZOr$bmsAEJLI9xaehsRJZS2hIJMYz6mVsstpaqzJPqd3Zuo=", "last_login": null, "is_superuser": false, "username": "DoubledeckerNone.1926", "first_name": "Mitchell", "last_name": "Waller", "email": "angelo1850@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.686Z", "birth_date": "2022-02-04", "gender": "F", "country": "Mauritania", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 23, "fields": {"password": "pbkdf2_sha256$100000$m3lx7C5BNKhj$onNCXlcrj/fgsSHRuPHGQFF+wiMT0Rke+g2NUNNgRNE=", "last_login": null, "is_superuser": false, "username": "porpoise", "first_name": "Fredrick", "last_name": "Carter", "email": "porpoise@mail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.760Z", "birth_date": "2010-07-01", "gender": "M", "country": "Djibouti", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 24, "fields": {"password": "pbkdf2_sha256$100000$agfnmr8jC93x$CD2MfeWOG3HC0/cTO+nEzwbH/iGJeooLEyzGvNjMQPA=", "last_login": null, "is_superuser": false, "username": "jalop1860", "first_name": "Andrew", "last_name": "Hays", "email": "apropos1963@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.835Z", "birth_date": "2018-03-09", "gender": "M", "country": "Tunisia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 25, "fields": {"password": "pbkdf2_sha256$100000$mHgfPCrFz9eO$xyNeqOCJbo8D1/tlTXuZLisQJChGSFxGivyxSQnWo5E=", "last_login": null, "is_superuser": false, "username": "gargantuan1868", "first_name": "Haywood", "last_name": "Calderon", "email": "andira2059@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.911Z", "birth_date": "2033-03-10", "gender": "M", "country": "Dominica", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 26, "fields": {"password": "pbkdf2_sha256$100000$i58BoefCiv9W$Ob8hm1Tam+QLQehiha3WEhga8PNJXjw0fdErXgmXPro=", "last_login": null, "is_superuser": false, "username": "AyoupNone_1934", "first_name": "Dannielle", "last_name": "Nieves", "email": "araks1848@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:58.985Z", "birth_date": "2015-08-19", "gender": "F", "country": "St. Barth\u00e9lemy", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 27, "fields": {"password": "pbkdf2_sha256$100000$HY7LR6vdMNGe$fSp08R0vKhmsx//yMpgpJYWmldN6DFWIz4RRxTBBx1I=", "last_login": null, "is_superuser": false, "username": "eyeball2052", "first_name": "Demetrius", "last_name": "Mcclure", "email": "abstracted1921@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.061Z", "birth_date": "2030-03-05", "gender": "F", "country": "Kuwait", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 28, "fields": {"password": "pbkdf2_sha256$100000$wo4eSvqcNKSR$9f/uE64kLOvdgIfIIAxiZvWCz88n9GfC8n3CcjcPqVY=", "last_login": null, "is_superuser": false, "username": "spelter.1913", "first_name": "Delmar", "last_name": "Simpson", "email": "reddeer2070@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.136Z", "birth_date": "2020-01-13", "gender": "M", "country": "New Zealand", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 29, "fields": {"password": "pbkdf2_sha256$100000$z7KxtROWa4wD$sXOdA54PcmMmPYFvp9GAJBygdAV46eQQj9aRe+74B0k=", "last_login": null, "is_superuser": false, "username": "gaffe1829", "first_name": "Donovan", "last_name": "Gamble", "email": "diets1811@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.220Z", "birth_date": "2006-12-01", "gender": "M", "country": "Yemen", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 30, "fields": {"password": "pbkdf2_sha256$100000$tZm1R7KJOE1I$ye8oCMc+sujGhIz8VWWN1aDIgWdRDS4Zybo1o3e/yoU=", "last_login": null, "is_superuser": false, "username": "crowds-1933", "first_name": "Gary", "last_name": "Golden", "email": "circle1916@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.294Z", "birth_date": "2004-11-02", "gender": "F", "country": "Namibia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 31, "fields": {"password": "pbkdf2_sha256$100000$6W5ERcDjg0A1$l3K/YcMTASWJxFcZDivF59r1qKeXp29lPJ5o9hvZrCo=", "last_login": null, "is_superuser": false, "username": "IndexicalNone_1867", "first_name": "Buddy", "last_name": "Macias", "email": "signal1857@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.369Z", "birth_date": "2012-08-25", "gender": "M", "country": "Kuwait", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 32, "fields": {"password": "pbkdf2_sha256$100000$qFxJof2lqi8v$VNvsv+QQ1G9gGZ/xd0PCZLWTvtas4YmEG0v6TDlMVnI=", "last_login": null, "is_superuser": false, "username": "Thunderstorm_2003", "first_name": "Parker", "last_name": "Hatfield", "email": "complement1885@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.445Z", "birth_date": "2008-06-27", "gender": "M", "country": "Germany", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 33, "fields": {"password": "pbkdf2_sha256$100000$JSRcyv76U8Eu$bjl9IOiD5IdyKo7wgeHisx6T31q999EH1eg1nQy7Amc=", "last_login": null, "is_superuser": false, "username": "AubergeNone.1964", "first_name": "Naida", "last_name": "Mcintosh", "email": "celloid1950@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.520Z", "birth_date": "2031-09-20", "gender": "F", "country": "Bermuda", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 34, "fields": {"password": "pbkdf2_sha256$100000$Kf228pkv69iX$xLZRQmkucDVkIyMhb+PEW85bEksU/7h+ahXIr9I/6Tw=", "last_login": null, "is_superuser": false, "username": "Decking1848", "first_name": "Alita", "last_name": "Case", "email": "wangler2023@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.594Z", "birth_date": "2010-10-20", "gender": "F", "country": "Timor-Leste", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 35, "fields": {"password": "pbkdf2_sha256$100000$QBJ0htzss008$LNMo+2hfaPDE+qbeoU3vKWgYVc2E3NVxblLQ5EH8Pz8=", "last_login": null, "is_superuser": false, "username": "colene1992", "first_name": "Theo", "last_name": "Walters", "email": "cradler1961@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.669Z", "birth_date": "2025-12-21", "gender": "M", "country": "Kosovo", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 36, "fields": {"password": "pbkdf2_sha256$100000$JUFu77uuSSVE$6B84fKqOgEN9vzCFxd7PmSdJKdNu2yQwEEPRonk1yQ4=", "last_login": null, "is_superuser": false, "username": "Angelate_1950", "first_name": "Hermine", "last_name": "Donovan", "email": "delphinite1938@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.744Z", "birth_date": "2024-02-27", "gender": "F", "country": "Philippines", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 37, "fields": {"password": "pbkdf2_sha256$100000$U63vnWPI7th8$MElCQs2soJuYZVz/Q1gGKP8Yz8hhSu3zjg9e7zEGiGM=", "last_login": null, "is_superuser": false, "username": "Blackroot.1936", "first_name": "Sommer", "last_name": "Washington", "email": "buccan1902@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.819Z", "birth_date": "2004-05-28", "gender": "F", "country": "Burundi", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 38, "fields": {"password": "pbkdf2_sha256$100000$R9OjOJMySsB1$zO861CbJTTdGihvWjSO6Tf+/DhnUfg4ORa2WaFm5Ye8=", "last_login": null, "is_superuser": false, "username": "cleancut-2059", "first_name": "Halina", "last_name": "Blevins", "email": "harmonious1997@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.894Z", "birth_date": "2004-08-19", "gender": "F", "country": "Switzerland", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 39, "fields": {"password": "pbkdf2_sha256$100000$PEjcuHvVVG7n$D2a+ioVFanr5YZX9HbMiRIbDU+Wefim/gDTw4k4RD6E=", "last_login": null, "is_superuser": false, "username": "dacca.2041", "first_name": "Jacinda", "last_name": "Herrera", "email": "crusty2027@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:14:59.968Z", "birth_date": "2014-10-19", "gender": "F", "country": "Iceland", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 40, "fields": {"password": "pbkdf2_sha256$100000$j4cSTszicoaj$cmuY7Ek8P0hK6BaGFJ9YHMDPUj+7CHVCIlDB2LOfQHc=", "last_login": null, "is_superuser": false, "username": "Borrelli.1907", "first_name": "Daniel", "last_name": "Washington", "email": "burial1974@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.043Z", "birth_date": "2030-01-14", "gender": "M", "country": "Cura\u00e7ao", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 41, "fields": {"password": "pbkdf2_sha256$100000$0nQQQFHLRyOD$IztvuDqg2Mnsnbty6CQjt98aaiiT3P7rbvBBVSXN1e8=", "last_login": null, "is_superuser": false, "username": "Seated-1963", "first_name": "Lakeesha", "last_name": "Moreno", "email": "arghan1927@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.118Z", "birth_date": "2020-11-24", "gender": "F", "country": "Gambia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 42, "fields": {"password": "pbkdf2_sha256$100000$akL9jrio4dCr$xvcGCj/o3BzG/EieOcrwz05QnefSTmB6uh8VaoeCT1Y=", "last_login": null, "is_superuser": false, "username": "perfecto.1984", "first_name": "Christoper", "last_name": "Ayala", "email": "avigdor1815@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.193Z", "birth_date": "2009-12-18", "gender": "M", "country": "Poland", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 43, "fields": {"password": "pbkdf2_sha256$100000$DhMfIz5LIfSL$oWMQD5YenJzcdUQsE8y9bJLsxxkOX2JPCjrz2WjmPMw=", "last_login": null, "is_superuser": false, "username": "corvo1919", "first_name": "Marshall", "last_name": "Ford", "email": "caron1800@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.267Z", "birth_date": "2022-10-28", "gender": "F", "country": "Taiwan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 44, "fields": {"password": "pbkdf2_sha256$100000$gzbbrfgvObdi$exJi8HqMI+k8lUDPd47Ml38icCkqTxT4TpZ/2RpL+uM=", "last_login": null, "is_superuser": false, "username": "caridean.2063", "first_name": "Jonell", "last_name": "Burris", "email": "markhor2017@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.343Z", "birth_date": "2017-06-02", "gender": "F", "country": "Luxembourg", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 45, "fields": {"password": "pbkdf2_sha256$100000$wZaCeYr2sF35$0sL4qtPBKSq5loq6dt1WtlrchqAUXDgtbJOSYJZO/hk=", "last_login": null, "is_superuser": false, "username": "Abundantia.1810", "first_name": "Charlyn", "last_name": "Mendoza", "email": "fagottino1830@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.418Z", "birth_date": "2033-10-15", "gender": "F", "country": "Dominica", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 46, "fields": {"password": "pbkdf2_sha256$100000$y2FShgAwp3xW$7woDpjWSQvxbmApcs97ToFAL0+WHtxhVmGJhbYegXzY=", "last_login": null, "is_superuser": false, "username": "Earrings-1827", "first_name": "Gregorio", "last_name": "Jenkins", "email": "chewer1898@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.493Z", "birth_date": "2015-04-09", "gender": "M", "country": "Cameroon", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 47, "fields": {"password": "pbkdf2_sha256$100000$MOssvSrtP396$LvTlXKpBImSB0hR+rvZMD3qiSa0YfC9aGfBgH7otrR4=", "last_login": null, "is_superuser": false, "username": "mindsets_1850", "first_name": "Zachariah", "last_name": "Mills", "email": "chitter1812@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.568Z", "birth_date": "2008-12-06", "gender": "M", "country": "Russia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 48, "fields": {"password": "pbkdf2_sha256$100000$yhJumYTkj6vP$Afvzq4Uklo2rzfu/29rICMO1i+hNfwSQQolTJNAMbjk=", "last_login": null, "is_superuser": false, "username": "CoumaNone_1953", "first_name": "Lorenzo", "last_name": "Lewis", "email": "millage2042@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.643Z", "birth_date": "2032-03-22", "gender": "M", "country": "Swaziland", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 49, "fields": {"password": "pbkdf2_sha256$100000$h8RHc1WecCaV$j5AYA10OHN/2LHggGHmlfBPTqSKKxqjzFc/1vfP8jTE=", "last_login": null, "is_superuser": false, "username": "VikingNone_1972", "first_name": "Tam", "last_name": "Wynn", "email": "customer2060@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.717Z", "birth_date": "2012-04-02", "gender": "F", "country": "Greenland", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 50, "fields": {"password": "pbkdf2_sha256$100000$TCRQidMc4CVH$WFJqr9z8yLCGEtbk5vDNqbeL2rk5Ch74K7XXa+LqbiQ=", "last_login": null, "is_superuser": false, "username": "AitchNone_1977", "first_name": "Jerlene", "last_name": "Bryant", "email": "scarped1838@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.792Z", "birth_date": "2000-09-05", "gender": "F", "country": "Netherlands", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 51, "fields": {"password": "pbkdf2_sha256$100000$PEcpLXNADqxu$0mhKvaWHQPNZTyvA2/20cu21M/K1V2ivbl9rzDX1BAM=", "last_login": null, "is_superuser": false, "username": "amorist-2012", "first_name": "Coy", "last_name": "Reese", "email": "capriole1917@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.866Z", "birth_date": "2027-06-05", "gender": "M", "country": "Kuwait", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 52, "fields": {"password": "pbkdf2_sha256$100000$zLz5YRoiVki2$Sm13TJhbJ9KBFmidzNbWfhAhU/gMO2CGeE82ZQFyrOs=", "last_login": null, "is_superuser": false, "username": "MegalomaniacNone_2019", "first_name": "Daron", "last_name": "Clark", "email": "corporeal1968@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:00.942Z", "birth_date": "2000-02-19", "gender": "M", "country": "Togo", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 53, "fields": {"password": "pbkdf2_sha256$100000$xIznlRiUfmGZ$Nz6fGg0fnYC+4uzt6c0D8K1nmqTwgpCRvUdMQRNdS/Q=", "last_login": null, "is_superuser": false, "username": "ephyra_2035", "first_name": "Royce", "last_name": "Knight", "email": "barrels1945@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.016Z", "birth_date": "2010-01-27", "gender": "M", "country": "South Sudan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 54, "fields": {"password": "pbkdf2_sha256$100000$K5OP7Z8FB52D$pR/jfeHTHc+I9ou974C+PtbdYJUEjnlCF3V1BZn5mQw=", "last_login": null, "is_superuser": false, "username": "BiochemicalNone.1891", "first_name": "Marx", "last_name": "Charles", "email": "scriptures1924@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.091Z", "birth_date": "2005-06-29", "gender": "F", "country": "Jamaica", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 55, "fields": {"password": "pbkdf2_sha256$100000$IKuBCsTMqHvy$4oH823ADAqweIewiKq94F/mtVUiQg5LF52NbByhtV4A=", "last_login": null, "is_superuser": false, "username": "CreepsNone.1917", "first_name": "James", "last_name": "Wolfe", "email": "archeus1918@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.165Z", "birth_date": "2010-12-10", "gender": "M", "country": "Tristan da Cunha", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 56, "fields": {"password": "pbkdf2_sha256$100000$XSGBZHmioA6E$Cv9bA8BhJ2dc8t3WArcHjtjG4bcxg53MjXPS4CuG5SI=", "last_login": null, "is_superuser": false, "username": "chaja.1867", "first_name": "So", "last_name": "Medina", "email": "religion1823@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.240Z", "birth_date": "2031-12-12", "gender": "F", "country": "Mongolia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 57, "fields": {"password": "pbkdf2_sha256$100000$iCcRPCDmkpuV$gZFtT5qODbJp/CN1HwJo2CiJQmAjuioVaZFvkCAaKmU=", "last_login": null, "is_superuser": false, "username": "miffs-1904", "first_name": "Jona", "last_name": "O'neil", "email": "yeanling1896@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.315Z", "birth_date": "2020-05-14", "gender": "F", "country": "Iran", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 58, "fields": {"password": "pbkdf2_sha256$100000$Ev7ccVjK9eIG$/1f8JRXLMWmCclpk7uC26EA7zR5Qap9zQ/WtSX5QtXg=", "last_login": null, "is_superuser": false, "username": "DjinsNone-1976", "first_name": "Neil", "last_name": "Fowler", "email": "calvary1810@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.390Z", "birth_date": "2035-07-03", "gender": "M", "country": "Wallis & Futuna", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 59, "fields": {"password": "pbkdf2_sha256$100000$6sN1Eht90uFr$A5PS84XQI2y9IVyWOWt0eVKdKdIqYlPba3sfv7rov88=", "last_login": null, "is_superuser": false, "username": "Aporia.1942", "first_name": "Richie", "last_name": "Carson", "email": "beachwear1986@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.465Z", "birth_date": "2020-12-18", "gender": "M", "country": "Philippines", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 60, "fields": {"password": "pbkdf2_sha256$100000$Q20hyWlubbKY$WfQqX0YFle4Aor6j5zMFd0kDbx5WVKysUr+e4UnmCJA=", "last_login": null, "is_superuser": false, "username": "Vises1938", "first_name": "Alexander", "last_name": "Mack", "email": "sedimentary1904@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.540Z", "birth_date": "2003-08-01", "gender": "F", "country": "Mali", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 61, "fields": {"password": "pbkdf2_sha256$100000$fZKmwsp11AxD$Hn/25TINFrIp1MgThQJeWCSOGFBEVvfIswon2qwAh3I=", "last_login": null, "is_superuser": false, "username": "Dredges.1912", "first_name": "Maynard", "last_name": "Baldwin", "email": "ental2030@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.615Z", "birth_date": "2019-01-22", "gender": "M", "country": "Serbia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 62, "fields": {"password": "pbkdf2_sha256$100000$2Uccxisu14Oa$CyQSV5WvY3yJZPhdz7sPYJMaaztNOLmVQ8XxbHeKZN4=", "last_login": null, "is_superuser": false, "username": "drenched1946", "first_name": "Steve", "last_name": "Kelley", "email": "acree2065@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.690Z", "birth_date": "2009-12-28", "gender": "M", "country": "Nicaragua", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 63, "fields": {"password": "pbkdf2_sha256$100000$hOOO1nT0gtR0$O9SVcPNleZuxECBTerjaMd8pD265DZFBQSygKje1bmA=", "last_login": null, "is_superuser": false, "username": "dunker.1951", "first_name": "Melaine", "last_name": "Delgado", "email": "selvas1973@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.765Z", "birth_date": "2012-06-28", "gender": "F", "country": "Trinidad & Tobago", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 64, "fields": {"password": "pbkdf2_sha256$100000$2za1BXK5bxcl$udKwsVakTa+7evR/5iNOlOsNFIxdotsecMDZTrqnJq8=", "last_login": null, "is_superuser": false, "username": "Eriksson-1985", "first_name": "Lincoln", "last_name": "Bonner", "email": "lesbians1824@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.840Z", "birth_date": "2003-12-06", "gender": "M", "country": "Central African Republic", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 65, "fields": {"password": "pbkdf2_sha256$100000$HRMKI1BWiloO$1NgoURjoJ2f2tWe9jeDFHq896sOfuVkT1bYcCjHQ8Lg=", "last_login": null, "is_superuser": false, "username": "deckchair-1959", "first_name": "Brett", "last_name": "Hansen", "email": "akkadian1860@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.915Z", "birth_date": "2011-12-03", "gender": "M", "country": "Lithuania", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 66, "fields": {"password": "pbkdf2_sha256$100000$9vbxVoGKmEQm$DBvYv4uDbwHfNEtRcyws2WIBZoQT7oVhomPJBHOvON0=", "last_login": null, "is_superuser": false, "username": "Affiliate_2044", "first_name": "Shanice", "last_name": "Key", "email": "zooks2024@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:01.993Z", "birth_date": "2032-02-16", "gender": "F", "country": "Tokelau", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 67, "fields": {"password": "pbkdf2_sha256$100000$P1VpvRITKhxg$IStsOZ6V2JcDgEpWOtH3ZWgdgxCRyn9VlcnUUdgJP8I=", "last_login": null, "is_superuser": false, "username": "Semblance_1910", "first_name": "Chung", "last_name": "Whitney", "email": "saltish1805@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.068Z", "birth_date": "2007-08-29", "gender": "M", "country": "Sweden", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 68, "fields": {"password": "pbkdf2_sha256$100000$F3Wpjm8kE3eP$Fy8mCTlCgApGkpK0X15QaSEXyqwVCvl4Tpx21OJ4khQ=", "last_login": null, "is_superuser": false, "username": "acephalous_1856", "first_name": "Reiko", "last_name": "Hood", "email": "carlene1934@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.142Z", "birth_date": "2017-04-08", "gender": "F", "country": "Afghanistan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 69, "fields": {"password": "pbkdf2_sha256$100000$rCwGrI1NrO5I$uiWXyi6MJZvpU2zbxisFxlHJglkD+kkNS/CeTZMaLPI=", "last_login": null, "is_superuser": false, "username": "emmaline.1983", "first_name": "Doretta", "last_name": "Griffith", "email": "direction1886@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.217Z", "birth_date": "2009-06-16", "gender": "F", "country": "Diego Garcia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 70, "fields": {"password": "pbkdf2_sha256$100000$G4084PLr0u2c$AylE+xBvO5jLN+r1Wt9VgTOfFq2cGyTfvuANnQymS8k=", "last_login": null, "is_superuser": false, "username": "Couplet_2000", "first_name": "Rigoberto", "last_name": "Garza", "email": "hoers1964@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.299Z", "birth_date": "2021-04-21", "gender": "M", "country": "Albania", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 71, "fields": {"password": "pbkdf2_sha256$100000$5FUy4UqBthI9$/DC4v5OQUyhzGAQC/yh1OHNfe5LdWu4TxtlYrbd6VUs=", "last_login": null, "is_superuser": false, "username": "Carmelite_1856", "first_name": "Jen", "last_name": "Reynolds", "email": "arcus2036@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.382Z", "birth_date": "2014-03-08", "gender": "F", "country": "Cyprus", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 72, "fields": {"password": "pbkdf2_sha256$100000$dF712bvA93De$o0dZAEfQoXeMxqxAKVCEsvOv+A/rRcTmdcTL2UxxBEU=", "last_login": null, "is_superuser": false, "username": "barbara_1948", "first_name": "Van", "last_name": "Gallagher", "email": "artery2065@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.461Z", "birth_date": "2020-09-22", "gender": "M", "country": "Bosnia & Herzegovina", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 73, "fields": {"password": "pbkdf2_sha256$100000$eRLoCtCUsUwi$8lGUqY7i8zeyOPZwbrShbdHIYAX/ceafu7P3X5PGS1U=", "last_login": null, "is_superuser": false, "username": "Diwata_1946", "first_name": "Krishna", "last_name": "Mcdowell", "email": "eagle1814@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.537Z", "birth_date": "2015-07-31", "gender": "F", "country": "Gabon", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 74, "fields": {"password": "pbkdf2_sha256$100000$Rpb3xgS7Yq2S$r7rAyAHQdNYp6JsBYcC5gkrghsIeAIqkNI9V4NCA4RU=", "last_login": null, "is_superuser": false, "username": "chaja_1992", "first_name": "Lindsay", "last_name": "Miles", "email": "vegan2052@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.612Z", "birth_date": "2005-09-07", "gender": "M", "country": "Latvia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 75, "fields": {"password": "pbkdf2_sha256$100000$MYKu9vRBZLQl$CahKbbV/lH+961iboR7jy6VfJrFnILgLomLwMEy5GT8=", "last_login": null, "is_superuser": false, "username": "kingdoms.1966", "first_name": "Julene", "last_name": "Pratt", "email": "transistors2037@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.687Z", "birth_date": "2023-04-10", "gender": "F", "country": "Norway", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 76, "fields": {"password": "pbkdf2_sha256$100000$tZw7V5J5FJFi$UfK4L/6kKbtedbNNcHHZDnxZicBaAaEMN27WVy8z0sg=", "last_login": null, "is_superuser": false, "username": "schuit.2009", "first_name": "Malcolm", "last_name": "Huffman", "email": "echinus1802@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.764Z", "birth_date": "2030-04-01", "gender": "M", "country": "Jamaica", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 77, "fields": {"password": "pbkdf2_sha256$100000$gKLHUpAWaGd3$Cs6kSbuJ+bWHD1QykLCkkEqEAKbtJe/032+5G/vFJEY=", "last_login": null, "is_superuser": false, "username": "anime.1841", "first_name": "Tandra", "last_name": "Swanson", "email": "chigger1807@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.838Z", "birth_date": "2024-01-18", "gender": "F", "country": "United Arab Emirates", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 78, "fields": {"password": "pbkdf2_sha256$100000$a5JRuRxxPgtB$1GpeSRoPm2lSW91HCrb3b+c6WcnHQ7H/Lf3lu8PJYqU=", "last_login": null, "is_superuser": false, "username": "orache_1886", "first_name": "Julienne", "last_name": "Wolf", "email": "rumpus1853@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.914Z", "birth_date": "2013-08-29", "gender": "F", "country": "Botswana", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 79, "fields": {"password": "pbkdf2_sha256$100000$KOR5P5w3pVQD$HorXp6Fi97zVSAyNnEe5If355/2uFknX3h6JcKnigy0=", "last_login": null, "is_superuser": false, "username": "DirtbirdNone.1831", "first_name": "Santina", "last_name": "Cotton", "email": "booking1822@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:02.991Z", "birth_date": "2011-12-22", "gender": "F", "country": "Diego Garcia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 80, "fields": {"password": "pbkdf2_sha256$100000$r8vtuJYQjpWv$Jz69riGdw8nwGdgm0svLEEfhHb/t84TBo2fSxOA3Ujg=", "last_login": null, "is_superuser": false, "username": "CrepeauNone.1913", "first_name": "Reed", "last_name": "Giles", "email": "blent1849@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.065Z", "birth_date": "2013-10-18", "gender": "M", "country": "Argentina", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 81, "fields": {"password": "pbkdf2_sha256$100000$mggXQeV6kfii$TnSaXnheRnBMbCCrXNJOKOLe+ev80Q6qZVfT8ExvXeQ=", "last_login": null, "is_superuser": false, "username": "Devious1809", "first_name": "Scott", "last_name": "Parker", "email": "pager2036@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.139Z", "birth_date": "2010-08-22", "gender": "F", "country": "Seychelles", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 82, "fields": {"password": "pbkdf2_sha256$100000$9EQIxnHbGPIl$/ItNxxyaELADGFXRx3/lqwMc6lKe0zUjpYYphBVm5bg=", "last_login": null, "is_superuser": false, "username": "Bambie-2029", "first_name": "Corey", "last_name": "Knapp", "email": "chemistry1859@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.213Z", "birth_date": "2024-03-29", "gender": "M", "country": "Argentina", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 83, "fields": {"password": "pbkdf2_sha256$100000$CtFJR2PFwnno$qJsLN3yAu3/bektT6cVzp8nzLopJSLd/Ukj59X07td8=", "last_login": null, "is_superuser": false, "username": "TurmericNone_1984", "first_name": "Eryn", "last_name": "Hall", "email": "apatosaurus1997@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.288Z", "birth_date": "2004-02-29", "gender": "F", "country": "Liberia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 84, "fields": {"password": "pbkdf2_sha256$100000$whtQVqmg5DHT$txWCZQHOf1aaHsRNoMFKYsjMAOhb1Th9bG6mOn9QVsk=", "last_login": null, "is_superuser": false, "username": "DanizeNone.1972", "first_name": "Adena", "last_name": "Hodges", "email": "piques1814@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.371Z", "birth_date": "2017-04-15", "gender": "F", "country": "Azerbaijan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 85, "fields": {"password": "pbkdf2_sha256$100000$oAC9XgCLxfww$yPEeykGBo+eVsj+vi98zIY2U2buLEzCPLOx4dc+FwBc=", "last_login": null, "is_superuser": false, "username": "abiding-1915", "first_name": "Cristobal", "last_name": "Joyner", "email": "firearms1900@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.447Z", "birth_date": "2035-01-10", "gender": "M", "country": "North Korea", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 86, "fields": {"password": "pbkdf2_sha256$100000$PfUhdcVHTTyz$HXURmyybDyXJtKj5HMd3dRRcTHRA4GIzrXOQb4HrT6U=", "last_login": null, "is_superuser": false, "username": "CowardNone_1961", "first_name": "Natashia", "last_name": "Smith", "email": "postcard1840@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.522Z", "birth_date": "2003-05-16", "gender": "F", "country": "China", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 87, "fields": {"password": "pbkdf2_sha256$100000$CVeuRWY8l4eZ$RKCalJq+UaJG8NeRuVt8btqdFXuLPp/lRtu+V4p2oy0=", "last_login": null, "is_superuser": false, "username": "section.1846", "first_name": "Leonarda", "last_name": "Foley", "email": "spacial1866@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.596Z", "birth_date": "2021-04-18", "gender": "F", "country": "R\u00e9union", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 88, "fields": {"password": "pbkdf2_sha256$100000$mRL5TUBrSAMC$KQbR1B3T1hCR85fBIxkTsi+uBzoL9d8debub+68RsZM=", "last_login": null, "is_superuser": false, "username": "Gouger-1869", "first_name": "Nicky", "last_name": "Lambert", "email": "alans1916@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.671Z", "birth_date": "2024-12-11", "gender": "M", "country": "Guatemala", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 89, "fields": {"password": "pbkdf2_sha256$100000$IYB6XX2Zqrsu$aWyIlygwMm+wqIzen9zPaXRk/xCJ4iCWFuOLXtrPO+4=", "last_login": null, "is_superuser": false, "username": "BridalNone_1974", "first_name": "Rayna", "last_name": "Trevino", "email": "ababa1801@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.746Z", "birth_date": "2031-10-14", "gender": "F", "country": "Tajikistan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 90, "fields": {"password": "pbkdf2_sha256$100000$7gewCvHVoDRr$U/JZLpVTkl+Tx8VKmFgEMVTOOtKo4NbFGbTpl7M9YW4=", "last_login": null, "is_superuser": false, "username": "ape.1998", "first_name": "Elvis", "last_name": "Taylor", "email": "sawer1941@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.820Z", "birth_date": "2021-09-27", "gender": "M", "country": "Iraq", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 91, "fields": {"password": "pbkdf2_sha256$100000$OVHcYBTouWNa$g9agBOO/CbkgrQ70Db010yvBM/m3Jz5OE5hpKs8JbSA=", "last_login": null, "is_superuser": false, "username": "airlock.1871", "first_name": "Marlon", "last_name": "Willis", "email": "scintillator1819@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.896Z", "birth_date": "2025-09-20", "gender": "M", "country": "Monaco", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 92, "fields": {"password": "pbkdf2_sha256$100000$p0Epz7WBWxD2$0+MCAj960m5qz9WF37KyDslO9vMOpfpSkFJo2fUlrtU=", "last_login": null, "is_superuser": false, "username": "cuculla.2013", "first_name": "Tommie", "last_name": "Chan", "email": "rotavirus1867@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:03.970Z", "birth_date": "2014-04-15", "gender": "M", "country": "Laos", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 93, "fields": {"password": "pbkdf2_sha256$100000$MaeRLthW5UCD$2u7arJQgkjBBWsPPS7QlBG6D67veeZeH9jIoJ/+fgVo=", "last_login": null, "is_superuser": false, "username": "Thrush_1881", "first_name": "Sherill", "last_name": "Kidd", "email": "cutthroat1982@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.045Z", "birth_date": "2034-04-17", "gender": "F", "country": "Belgium", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 94, "fields": {"password": "pbkdf2_sha256$100000$KPygcPK4Ik0L$P9Rx2wFkdDbVCjbX0s0jRCPeDeYvRIqhpmfw/9JbEcg=", "last_login": null, "is_superuser": false, "username": "Pseudonym2006", "first_name": "Ian", "last_name": "Sexton", "email": "dredges1945@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.120Z", "birth_date": "2012-10-05", "gender": "M", "country": "Comoros", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 95, "fields": {"password": "pbkdf2_sha256$100000$r4fusYWVjVlE$37SMT8gpf2kBVleJL5iIjeizZtR17BhgOqH54j0NPXg=", "last_login": null, "is_superuser": false, "username": "Bardolph1947", "first_name": "Brittaney", "last_name": "Marquez", "email": "schuss2064@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.195Z", "birth_date": "2026-05-01", "gender": "F", "country": "Ascension Island", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 96, "fields": {"password": "pbkdf2_sha256$100000$402gvUjnSIAp$sqHLpxsE3ylR/iBv9llKiKLJxHlIaoI9NuI7cE07LVo=", "last_login": null, "is_superuser": false, "username": "AshlieNone.2068", "first_name": "Lurline", "last_name": "Craft", "email": "cradler1881@live.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.270Z", "birth_date": "2001-01-18", "gender": "F", "country": "Jordan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 97, "fields": {"password": "pbkdf2_sha256$100000$8uIWXPYyKL4f$96rQa3ZNeQ5F/fjhrRTtIMyT0+8pM6DPtmGnDyPYICc=", "last_login": null, "is_superuser": false, "username": "Choctaw.1808", "first_name": "Gail", "last_name": "Powell", "email": "numbat2046@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.345Z", "birth_date": "2034-11-23", "gender": "M", "country": "Malaysia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 98, "fields": {"password": "pbkdf2_sha256$100000$EjCOTMbiEPPy$nYISRQqMCnyKHhP32eukRx+jKn46Xn/FSodA+Qi6MS4=", "last_login": null, "is_superuser": false, "username": "Consultant_2021", "first_name": "Janise", "last_name": "Frank", "email": "elute1969@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.421Z", "birth_date": "2002-09-15", "gender": "F", "country": "Burundi", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 99, "fields": {"password": "pbkdf2_sha256$100000$mGxli8voJqdD$eQlAV6C0GE3nMIbHSE1yneU6do1qjy82bbyDSjbB9s4=", "last_login": null, "is_superuser": false, "username": "diffraction.1902", "first_name": "Darrick", "last_name": "Welch", "email": "croppy2036@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.497Z", "birth_date": "2022-08-23", "gender": "M", "country": "Botswana", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 100, "fields": {"password": "pbkdf2_sha256$100000$YC3C0emYyDm9$0UI/ztnmunQoHphtc8bcKFw6NW+8JPDYobEBCk7qbQg=", "last_login": null, "is_superuser": false, "username": "Zillionaire-1853", "first_name": "Ryann", "last_name": "George", "email": "anhedonia1851@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.571Z", "birth_date": "2035-04-14", "gender": "F", "country": "Djibouti", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 101, "fields": {"password": "pbkdf2_sha256$100000$CtXVPeSG5zoF$Q6OCoN8HN0xkXJWACkpONBT/SLbiRr0Ic/Sej/AWNQQ=", "last_login": null, "is_superuser": false, "username": "adaptable.1891", "first_name": "Jarod", "last_name": "Love", "email": "aplomb2040@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.646Z", "birth_date": "2035-06-09", "gender": "M", "country": "Antigua & Barbuda", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 102, "fields": {"password": "pbkdf2_sha256$100000$jJddBpkx23Ba$wWA2kmSzDhCp0046nmJf6Hzc60rBSm1KfI3bZhXpTfE=", "last_login": null, "is_superuser": false, "username": "Agaty1911", "first_name": "Jenell", "last_name": "Monroe", "email": "dreyfus1843@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.729Z", "birth_date": "2015-09-19", "gender": "F", "country": "Taiwan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 103, "fields": {"password": "pbkdf2_sha256$100000$upOsLin8EXNa$yAkaqDhD+DUZZDrC/hzzqXWCkQn39TKdnZIqLnPHsaQ=", "last_login": null, "is_superuser": false, "username": "dewberry1906", "first_name": "Basil", "last_name": "Giles", "email": "claudius1879@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.804Z", "birth_date": "2009-01-20", "gender": "M", "country": "Lesotho", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 104, "fields": {"password": "pbkdf2_sha256$100000$KRCHepmXeNWs$W0W7gSjJG1EEYRaNrKJUYaMAb6TVsKtZz2rz/dzz9Jg=", "last_login": null, "is_superuser": false, "username": "DrainpipeNone_1994", "first_name": "Alia", "last_name": "Fitzpatrick", "email": "desdemon2032@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.878Z", "birth_date": "2002-08-30", "gender": "F", "country": "Djibouti", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 105, "fields": {"password": "pbkdf2_sha256$100000$Vtibx4GLXatE$xsiVqoY8geKNFqXM71Th+sTUvbamcX9LUblUP6havnk=", "last_login": null, "is_superuser": false, "username": "cruche.2063", "first_name": "Emilee", "last_name": "Aguilar", "email": "afterglow1922@yandex.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:04.954Z", "birth_date": "2014-09-29", "gender": "F", "country": "Albania", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 106, "fields": {"password": "pbkdf2_sha256$100000$t9ndhMJ7e0Kd$/OyEWseIVD/qi6rhrv6ggNzmJytOxVN53nTzMfUsVnA=", "last_login": null, "is_superuser": false, "username": "greyhound_1926", "first_name": "Eufemia", "last_name": "Martinez", "email": "hamster1969@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:05.028Z", "birth_date": "2015-01-11", "gender": "F", "country": "Paraguay", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 107, "fields": {"password": "pbkdf2_sha256$100000$Nc9beUFRxsNI$tMNa/1lF31mVbSo9V9xPmP8nAtBaCuP21e0e64NW0jY=", "last_login": null, "is_superuser": false, "username": "Cabral_1891", "first_name": "Gia", "last_name": "Stokes", "email": "carnations2002@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:05.103Z", "birth_date": "2026-03-10", "gender": "F", "country": "Turkey", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 108, "fields": {"password": "pbkdf2_sha256$100000$azKAaweQ9wAk$UYoE7xzO12ryv7/uhLIHVsvLgjaKVBVfwU07NJI2QwI=", "last_login": null, "is_superuser": false, "username": "mastoid-2018", "first_name": "Rikki", "last_name": "Kerr", "email": "turtle1871@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:05.177Z", "birth_date": "2000-10-24", "gender": "F", "country": "Azerbaijan", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 109, "fields": {"password": "pbkdf2_sha256$100000$MIUbAgSqgZba$brxjYQh7YxxoFofjNekM0rs1Ccjp3TUM70rKR7m+HeU=", "last_login": null, "is_superuser": false, "username": "budding.1985", "first_name": "Lavona", "last_name": "Colon", "email": "exegete2010@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:05.251Z", "birth_date": "2031-01-24", "gender": "F", "country": "Croatia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 110, "fields": {"password": "pbkdf2_sha256$100000$4gbWPp7Wz7Ys$iYtvpzAOKqi7N5GXh+wmYxBMwM5ckCq5r2Ak4B5WtOQ=", "last_login": null, "is_superuser": false, "username": "trucker1859", "first_name": "Lanny", "last_name": "Mcdowell", "email": "mongrel1930@outlook.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-16T14:15:05.326Z", "birth_date": "2018-03-23", "gender": "M", "country": "C\u00f4te d\u2019Ivoire", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 113, "fields": {"password": "pbkdf2_sha256$100000$Vgcvj3DO05Ze$QisA9tgu4GctDlYcl8MrmkvbY6Ly/gYCSfLNFnepZ54=", "last_login": "2018-05-22T10:13:33.112Z", "is_superuser": true, "username": "tamirok", "first_name": "", "last_name": "", "email": "tamirok@mail.com", "is_staff": true, "is_active": true, "date_joined": "2018-05-17T21:45:16.532Z", "birth_date": null, "gender": "", "country": "", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 114, "fields": {"password": "pbkdf2_sha256$100000$CgfqLByvt3sE$CBP5pU7L+Rk1UMGZYFLMamE4S86EHDwPZQFCiRUERew=", "last_login": "2018-05-18T14:40:02.351Z", "is_superuser": false, "username": "custom", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2018-05-17T22:29:03.382Z", "birth_date": null, "gender": "", "country": "", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 115, "fields": {"password": "", "last_login": null, "is_superuser": false, "username": "", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2018-05-22T14:26:49.432Z", "birth_date": null, "gender": "F", "country": "Russia", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 118, "fields": {"password": "custompassword", "last_login": null, "is_superuser": false, "username": "tamirlan", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T16:45:34.717Z", "birth_date": null, "gender": "M", "country": "", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 119, "fields": {"password": "custompassword", "last_login": null, "is_superuser": false, "username": "batman", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T16:48:43.127Z", "birth_date": null, "gender": "M", "country": "", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 120, "fields": {"password": "short", "last_login": null, "is_superuser": false, "username": "superman", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T16:48:59.583Z", "birth_date": null, "gender": "M", "country": "", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 121, "fields": {"password": "", "last_login": null, "is_superuser": false, "username": "naruto", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T16:50:31.375Z", "birth_date": null, "gender": "M", "country": "", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 123, "fields": {"password": "sasuke", "last_login": null, "is_superuser": false, "username": "sasuke", "first_name": "Carmelio", "last_name": "Cole", "email": "kakapo1823@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T17:02:45.871Z", "birth_date": "2005-01-31", "gender": "M", "country": "Vanuatu", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 124, "fields": {"password": "pbkdf2_sha256$100000$xVhws9PJCovn$y17jiUSunoZNGtKh9AcFxYRTmHRW8LClrzAyMw5t9ik=", "last_login": "2018-05-23T17:17:45.597Z", "is_superuser": false, "username": "sakura", "first_name": "Carmelio", "last_name": "Cole", "email": "kakapo1823@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T17:16:45.232Z", "birth_date": "2005-01-31", "gender": "M", "country": "Vanuatu", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 125, "fields": {"password": "pbkdf2_sha256$100000$Jf8rXRYshJDj$m+08XDjYTeKKVA+nK2O2+5VQDM2WB1zGVVNgijxM6KA=", "last_login": null, "is_superuser": false, "username": "kabuto", "first_name": "Carmelio", "last_name": "Cole", "email": "kakapo1823@yahoo.com", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T17:52:20.127Z", "birth_date": "2005-01-31", "gender": "M", "country": "Vanuatu", "groups": [], "user_permissions": []}}, {"model": "core.person", "pk": 126, "fields": {"password": "sasori", "last_login": null, "is_superuser": false, "username": "sasori", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2018-05-23T17:55:04.066Z", "birth_date": null, "gender": "", "country": "", "groups": [], "user_permissions": []}}, {"model": "core.show", "pk": 3, "fields": {"name": "polymorphism", "released_date": "2012-02-15", "description": "Messages can be sent to and received from ports, but these messages must obey the so-called \"port protocol.\" The arguments can be primitive data types or compound data types.", "directors": [102, 104, 106, 114], "actors": [4, 11, 13, 16, 34, 39, 23, 3, 61, 88]}}, {"model": "core.show", "pk": 4, "fields": {"name": "experiment", "released_date": "2000-12-14", "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets. He looked inquisitively at his keyboard and wrote another sentence.", "directors": [104, 108], "actors": [6, 12, 22, 26, 55, 58, 64, 66, 88]}}, {"model": "core.show", "pk": 5, "fields": {"name": "smart", "released_date": "2012-01-26", "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing. They are written as strings of consecutive alphanumeric characters, the first character being lowercase.", "directors": [102], "actors": [17, 22, 37, 39, 48, 50, 64, 71, 94, 96]}}, {"model": "core.show", "pk": 6, "fields": {"name": "everywhere", "released_date": "2024-11-09", "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing. Its main implementation is the Glasgow Haskell Compiler.", "directors": [109, 110], "actors": [4, 14, 36, 54, 60, 63, 67, 75, 84, 86]}}, {"model": "core.show", "pk": 7, "fields": {"name": "verification", "released_date": "2031-03-27", "description": "Type classes first appeared in the Haskell programming language. She spent her earliest years reading classic literature, and writing poetry.", "directors": [103, 109], "actors": [14, 25, 29, 36, 45, 51, 59, 62, 85, 91]}}, {"model": "core.show", "pk": 8, "fields": {"name": "spiritual", "released_date": "2011-07-01", "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing. It is also a garbage-collected runtime system.", "directors": [104, 105, 106], "actors": [5, 15, 18, 27, 41, 45, 46, 48, 64]}}, {"model": "core.show", "pk": 9, "fields": {"name": "specs", "released_date": "2023-07-20", "description": "Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing. Erlang is a general-purpose, concurrent, functional programming language.", "directors": [101, 103, 109], "actors": [15, 21, 65, 74, 80, 91, 94, 100]}}, {"model": "core.show", "pk": 10, "fields": {"name": "bathroom", "released_date": "2017-07-31", "description": "He looked inquisitively at his keyboard and wrote another sentence. Ports are created with the built-in function open_port.", "directors": [101, 108, 109], "actors": [5, 11, 13, 19, 40, 41, 65, 70, 96, 98]}}, {"model": "core.show", "pk": 11, "fields": {"name": "buffon", "released_date": "2031-10-04", "description": "Type classes first appeared in the Haskell programming language. Haskell is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.", "directors": [25, 30, 35, 40], "actors": [8, 12, 3, 43, 50, 63, 71, 72, 82, 83]}}, {"model": "core.show", "pk": 12, "fields": {"name": "submit", "released_date": "2010-01-27", "description": "Tuples are containers for a fixed number of Erlang data types. Make me a sandwich.", "directors": [101, 102, 109], "actors": [5, 37, 41, 47, 60, 73, 74, 86, 91, 92]}}, {"model": "core.show", "pk": 13, "fields": {"name": "not", "released_date": "2013-03-06", "description": "Do you have any idea why this is not working? Erlang is known for its designs that are well suited for systems.", "directors": [102, 105, 106], "actors": [5, 32, 39, 48, 57, 65, 67, 73, 84, 98]}}, {"model": "core.show", "pk": 14, "fields": {"name": "brown", "released_date": "2023-10-25", "description": "Type classes first appeared in the Haskell programming language. The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "directors": [102, 105, 107], "actors": [7, 14, 16, 18, 29, 40, 48, 64, 65, 69]}}, {"model": "core.show", "pk": 15, "fields": {"name": "toolbar", "released_date": "2012-10-13", "description": "The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets. Do you come here often?", "directors": [101, 102], "actors": [1, 13, 16, 36, 42, 45, 68, 71, 73, 84]}}, {"model": "core.show", "pk": 16, "fields": {"name": "weak", "released_date": "2028-10-23", "description": "Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom. The syntax {D1,D2,...,Dn} denotes a tuple whose arguments are D1, D2, ... Dn.", "directors": [102, 104, 106], "actors": [1, 8, 22, 26, 28, 36, 42, 44, 63]}}, {"model": "core.show", "pk": 17, "fields": {"name": "aid", "released_date": "2001-03-22", "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s. Haskell features a type system with type inference and lazy evaluation.", "directors": [103, 104], "actors": [5, 10, 14, 30, 31, 47, 57, 62, 88, 93]}}, {"model": "core.show", "pk": 18, "fields": {"name": "ram", "released_date": "2027-12-13", "description": "Make me a sandwich. The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing.", "directors": [101, 105], "actors": [11, 12, 30, 32, 51, 62, 65, 79, 85, 88]}}, {"model": "core.show", "pk": 19, "fields": {"name": "drunk", "released_date": "2020-08-02", "description": "Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s. Initially composing light-hearted and irreverent works, he also wrote serious, sombre and religious pieces beginning in the 1930s.", "directors": [104, 105, 108], "actors": [35, 39, 23, 41, 48, 52, 70, 79, 82]}}, {"model": "core.show", "pk": 20, "fields": {"name": "administrators", "released_date": "2002-05-04", "description": "The sequential subset of Erlang supports eager evaluation, single assignment, and dynamic typing. The Galactic Empire is nearing completion of the Death Star, a space station with the power to destroy entire planets.", "directors": [104, 105, 110], "actors": [3, 48, 54, 71, 90, 91, 96, 100]}}, {"model": "core.show", "pk": 21, "fields": {"name": "Test Show", "released_date": "2018-05-04", "description": "Some description", "directors": [8, 7], "actors": [4, 6]}}, {"model": "core.show", "pk": 22, "fields": {"name": "azaza", "released_date": "2018-05-05", "description": "azaza", "directors": [3, 4], "actors": [4, 5]}}, {"model": "core.show", "pk": 23, "fields": {"name": "custom show", "released_date": "2018-05-17", "description": "custom descripiton", "directors": [1], "actors": [4, 5]}}, {"model": "core.show", "pk": 24, "fields": {"name": "Custom name2", "released_date": "2017-05-02", "description": "custom descr", "directors": [1, 10], "actors": [10, 20, 30]}}, {"model": "core.show", "pk": 25, "fields": {"name": "Custom name2", "released_date": "2017-05-02", "description": "custom descr", "directors": [1, 10], "actors": [10, 20, 30]}}]